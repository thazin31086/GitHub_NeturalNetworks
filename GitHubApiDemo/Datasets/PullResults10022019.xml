<PullRequests>
  <PullRequest>
    <PullRequestID>38985</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Disable IDE dispose analyzers by default</Title>
    <PullRequestDescription>We are going to disable the DFA based IDE dispose analyzers (IDE0067, IDE0068 and IDE0069) by default as they need more performance tuning to handle large method bodies (method bodies which are 1000s of lines of code) with large control flow graphs.

#38984 has been filed to track turning these analyzers back on by default when the issue has been fixed.</PullRequestDescription>
    <CreatedDate>01/10/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38983</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/10/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38976</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190930.3
- **Date Produced**: 9/30/2019 8:25 PM
- **Commit**: 238f1bbb23ba67616818d0b242c5b55a18edec55
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 5.0.0-beta.19480.3

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>01/10/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38974</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix NGEN failures</Title>
    <PullRequestDescription>Example failure: https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/204591?_a=overview 

These changes remove some dependencies that were added as part of [this change](https://github.com/dotnet/roslyn/commit/66a912c9463eebe832cf742d2fe8bb2e1a4600ec#diff-8b8f08ffbf7b863fb3700c1718eeb4cb) , making Microsoft.VisualStudio.LanguageServer.Protocol and Microsoft.VisualStudio.LanguageServer.Protocol.Extensions depend on the same versions that VS provides. These binaries are intended to be versioned differently, and we ingest at a different cadence than VS. Once VS updated these dependencies we started to see NGEN failures with dll dependency resolution. </PullRequestDescription>
    <CreatedDate>01/10/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38969</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add API Review notes</Title>
    <PullRequestDescription>Added the notes from today's compiler API review. Also addressed the CommandLineArguments part of the notes, restoring a previously removed API to prevent breaking changes. @agocke for review of this API, as you reviewed the SARIF change that removed it.

@AlekseyTs @chsienki @jasonmalinowski @AlekseyTs @jaredpar for quick review.</PullRequestDescription>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38967</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix language check for netcoreapp3.1</Title>
    <PullRequestDescription>Now checks if the version is &lt; netcoreapp3.0 or netstandard2.1 instead of checking
if they're not equal.</PullRequestDescription>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38964</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/local-function-attributes</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/local-function-attributes.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/local-function-attributes
git reset --hard upstream/features/local-function-attributes
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/local-function-attributes --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38963</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38962</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.4-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38955</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Skip flaky tests</Title>
    <PullRequestDescription>Skips all tests that have been mentioned as flaky in #29483 (some were already being skipped)

There is a PR out that is supposed to actually fix the tests, but it has been out for several months and still not merged, so I would like to just address this now as it is costing hours in code flow to have these tests fail intermittently.

/cc @jaredpar</PullRequestDescription>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38952</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Spelling fixes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38951</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Spelling fixes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38948</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix typos</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>29/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38938</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190927.2
- **Date Produced**: 9/27/2019 6:33 PM
- **Commit**: 14abaee3dba41fbe608431fb6a4f4b2435dcac33
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 5.0.0-beta.19477.2

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>28/09/2019</CreatedDate>
    <ClosedDate>28/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38935</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Simplify parsing of attributes</Title>
    <PullRequestDescription>I recommend reviewing this with whitespace changes *off*.

Our existing parsing strategy was pretty strange, given that we would create a mutable builder, fill it with parsed attributes, then pass that builder along.  This was confusing and potentially error prone as no downstream consumers were ever expected to continue mutating the list.  It also meant in several places we needed more complex try/finally logic to place things back in the pool.

I've moved to an approach where we just parse out hte attribute list on demand and then pass along to whoever wants to consume it.

~Note: i would like to do this next with modifiers.  Though i am *less* certain if that will be possible due to downstream consumers possibly wanting to mutate hte modifiers list after the initial parsing.~

Update: modifiers looks to be much harder/out-of-scope.  The mods list is definitely mutated post creation, making it less suitable for this sort of up-front realization of the list. </PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38930</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix expected test output for TestPragmaWarningDirectiveWithDocumentationComment2</Title>
    <PullRequestDescription>My bad y'all 😞 </PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38920</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove experimentation for file rename with inline rename</Title>
    <PullRequestDescription>This is no longer an experiment. </PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38917</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Avoid a newline after type parameter attributes</Title>
    <PullRequestDescription>Fixes #38916
</PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38915</PullRequestID>
    <RepoID>1</RepoID>
    <Title>typo: ahve -&gt; have</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38912</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190926.6
- **Date Produced**: 9/27/2019 1:21 AM
- **Commit**: b449f372df1a3374ebdc85f42ff137dcda08776b
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 5.0.0-beta.19476.6

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38911</PullRequestID>
    <RepoID>1</RepoID>
    <Title>rename ProgressStatus.Stoped --&gt; Stopped</Title>
    <PullRequestDescription>Fixes #38039</PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38907</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix smart indent with hard tabs (merge to master)</Title>
    <PullRequestDescription>This pull request merges #38893 forward to master (version 16.4 preview 2).</PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38906</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Improved formatting of comments and suppressions</Title>
    <PullRequestDescription>Review by commit is highly recommended to understand the state of the work (each commit is a distinct and non-breaking change).

Fixes #16681 
Fixes #38224</PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38904</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Completion: refactor FilterResult</Title>
    <PullRequestDescription>Due to getting rid of the old completion, we are allowed now to simplify more completion code:
1. Merge ExtendedFilterResult to FilterResult and rename both to MatchResult.
2. Remove FilterText from MatchResult - it is common for all MatchResult in the current ItemManager call.
3. Move HighlightedSpans to MatchResult because we calculate them based on Match. No need to create and maintain a separate collection of CompletionItemWithHighlight until responding to the Editor.
4. Extract TryCreateMatchResult from the loop of creating MatchResults.
5. Merge IsHardSelection with ShouldSoftSelectItem (one just called another and reverted result)

4. </PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>28/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38903</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38902</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38901</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38894</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move to Platform team's Find All References Kind Column</Title>
    <PullRequestDescription>Delete a bunch of code on Roslyn side, which is no longer necessary as we don't own the Kind column anymore, it has been moved to the platform layer and shared with other teams.

I have also cleaned up some code in this space for newly added ContainingType and ContainingMember columns.

Fixes VSO bug [#822324](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/822324)</PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>29/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38892</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Optimize GetSolutionUpdateStatusAsync for stepping in absence of changes</Title>
    <PullRequestDescription>May fix https://devdiv.visualstudio.com/DevDiv/_workitems/edit/958005.</PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38891</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/local-function-attributes</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/local-function-attributes.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/local-function-attributes
git reset --hard upstream/features/local-function-attributes
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/local-function-attributes --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38890</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38889</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.4-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38888</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into master.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38887</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix an accidental reverse caused by a bad merge</Title>
    <PullRequestDescription>The change was originally made in PR #37894. However, it was later overwritten by auto-merge when flowing changes from 16.3 to 16.4p1 in this commit https://github.com/dotnet/roslyn/commit/7b852992edd8fddf1fce2854cedb764741c3087d

This PR restore the code to the correct state which matches what we shipped in 16.4p1

Thanks @RikkiGibson for noticing this issue!

FYI @ivanbasov @dotnet/roslyn-infrastructure </PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38883</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Bump format version</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38881</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Spelling fixes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38880</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Spelling fixes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38877</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Spelling fixes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38870</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add missing parsing test for TypeOf expr IsNot type</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38864</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/local-function-attributes</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/local-function-attributes.

``` bash
git fetch --all
git checkout merges/master-to-features/local-function-attributes
git reset --hard upstream/features/local-function-attributes
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/local-function-attributes --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38863</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38862</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add test for SkipLocalsInit in default interface implementations</Title>
    <PullRequestDescription>Relates to https://github.com/dotnet/roslyn/issues/25780 (test plan for skip locals init)</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38861</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Spelling fixes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>29/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38860</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Avoid crash on concat on structs with ToString member</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38858</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38859</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add analyzer driver editorconfig option for end users to configure ge…</Title>
    <PullRequestDescription>…nerated code

Implements https://github.com/dotnet/roslyn/issues/38674#issuecomment-534621058
Fixes #3705</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38856</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/local-function-attributes</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/local-function-attributes.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/local-function-attributes
git reset --hard upstream/features/local-function-attributes
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/local-function-attributes --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38853</PullRequestID>
    <RepoID>1</RepoID>
    <Title>x == default is valid object equality for reference types</Title>
    <PullRequestDescription>Since we've received significant feedback on part of the compat break we took in 16.4p1, we're making a refinement to reduce the negative impact.
`t == default` for unconstrained types will remain an error (introduced in 16.4p1), but `x == default` will be re-allowed for reference types (could bind as object equality).

Fixes https://github.com/dotnet/roslyn/issues/38643
Relates to https://github.com/dotnet/roslyn/pull/37596 (16.4p1 breaking changes)</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38849</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update IOperationTests_IDelegateCreationExpression.vb</Title>
    <PullRequestDescription>Spelling fix</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38848</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update TypeImportCompletionItem.cs</Title>
    <PullRequestDescription>Spelling fix</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38847</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update DecisionDagBuilder.cs</Title>
    <PullRequestDescription>Spelling fix</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38846</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update SyntaxGeneratorTests.cs</Title>
    <PullRequestDescription>Spelling fix</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38845</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update AbstractAddAccessibilityModifiersCodeFixProvider.cs</Title>
    <PullRequestDescription>Spelling fix</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38843</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38839</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update required version of VS in Building doc</Title>
    <PullRequestDescription>Now that we've merged 16.3-vs-deps back, we should update the required version of VS.</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38838</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38837</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.4-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38835</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix an RPS regression where we are eagerly loading all assemblies wit…</Title>
    <PullRequestDescription>…h ITableColumnDefinition implementations

Recent change #37802 to enable new containing type and containing member colums removed the perf optimization done in #36562 to ensure that we do not eagerly load all assemblies that contain ITableColumnDefinition implementations. This caused an RPS regression, which is fixed by this PR.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38834</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge dev16.4 preview1-vs-deps into dev16.4 preview1</Title>
    <PullRequestDescription>Per @jaredpar, our policy for codeflow is the following:
	
1. Developers should always be able to build master in dotnet/roslyn with a publicly available version of VS. 
2. The version of VS should preferably be an RTM one but can be a preview if circumstances warrant it.

Now that 16.4 Preview 1 is out, I'd like to get vs-deps flows back so all our changes related to completion are all in the same branch, which will make it easier for us to make further code change in this area.

@dotnet/roslyn-infrastructure Please let me know if it's OK to do this, otherwise I will probably need to cherry pick those changes manually.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38833</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Pass the actual code action span to the server when calculating code …</Title>
    <PullRequestDescription>…actions.

Previously, liveshare was computing the diagnostics on the code action location and passing the diagnostic's span to the server.  This caused code actions that expect a caret position to never work if there was another diagnostic at the same location (e.g. move type to file, I've fixed that in https://github.com/dotnet/roslyn/pull/38787).

Either way, we shouldn't be modifying the user specified span.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38832</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Map string offsets to columns to ensure proper tab indentation.</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38819</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38831</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Change icon for target type completion filter</Title>
    <PullRequestDescription>Fix #37531 

![image](https://user-images.githubusercontent.com/788783/65548648-ae478f80-ded0-11e9-90b9-083cd4792087.png)
</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38829</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update AnalysisContextInfoTests.cs</Title>
    <PullRequestDescription>Spelling fix</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38828</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update Binder_Lookup.vb</Title>
    <PullRequestDescription>Spelling fix</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38825</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix server capabilities initialization and remove previous experiment…</Title>
    <PullRequestDescription>… iteration.

Since we're going to test with the new tagger, remove the previous experiment implementation.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38824</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update README.md</Title>
    <PullRequestDescription>Spelling fixes</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38823</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update utils.ps1</Title>
    <PullRequestDescription>Spelling fixes</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38818</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update Language Feature Status</Title>
    <PullRequestDescription>@jaredpar @gafter Let me know if we need more updates. 
@jaredpar We'll need to start thinking about assigning buddies.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38815</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38814</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38813</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38811</PullRequestID>
    <RepoID>1</RepoID>
    <Title>support local functions inside static in signature help</Title>
    <PullRequestDescription>Fixes signature help part of https://github.com/dotnet/roslyn/issues/38074

Thank you for discussions, @svick , @CyrusNajmabadi , @miloush and @333fred !

Tests were copied from https://github.com/dotnet/roslyn/commit/62918fc39895da53eb4ce76b4a83a949746220e8
It is weird but I could not cherry-pick it.</PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38809</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use new Span/Memory APIs on System.Collections.Immutable</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38808</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Parse attributes on local function declarations</Title>
    <PullRequestDescription>Related to #38801

Attributes on local function parameters or type parameters are already parsed as expected but they simply give errors. This PR adds an AttributeLists property to LocalFunctionStatementSyntax and parses the attributes into that property.</PullRequestDescription>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38807</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38806</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38805</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38804</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 into release/dev16.4-preview1</Title>
    <PullRequestDescription>I'm planning to make another merge from dev16.4-preview1-vs-deps to dev16.4-preview, before flowing dev16.4 to master. Not sure if this is how we handled the code flow like this in the past. 

@dotnet/roslyn-infrastructure @jaredpar @agocke @JoeRobich </PullRequestDescription>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38800</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge dev16.3-vs-deps to dev16.3</Title>
    <PullRequestDescription>@dotnet/roslyn-infrastructure</PullRequestDescription>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38799</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add telemetry for target type completion</Title>
    <PullRequestDescription>#38096
Want to monitor the perf and make sure it doesn't regress when rolling out to broader audience.

@dotnet/roslyn-ide </PullRequestDescription>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38792</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Allow disabled by default analyzers to be enabled with editorconfig e…</Title>
    <PullRequestDescription>…ntries.

We now mark analyzer as not suppressed if at least one syntax tree in compilation has DiagnosticOptions that has non-suppress severity.</PullRequestDescription>
    <CreatedDate>22/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38790</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>21/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38789</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable more xUnit analyzer rules</Title>
    <PullRequestDescription>This enables the following xUnit analyzer rules:

- xUnit2000 - literal or constant value should be first in Assert.Equal" is a valid assert, but very noisy. Will do the refactoring later
- xUnit2003 - do not use Assert.Equal for null value" is a valid assert, but very noisy right now 
- xUnit2004 - do not use Assert.Equal for boolean conditions" is a valid assert, but very noisy right now
- xUnit2007 - do not use Assert.IsType(typeof...)" is a valid assert, but very noisy right now 
- xUnit2015 - do not use typeof() expression to check the exception type. " is a valid assert, but very noisy right now 
</PullRequestDescription>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38787</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Allow selection in move type to file</Title>
    <PullRequestDescription>Currently, move type to file only works if you put the caret in the type name.  So use the new refactoring helpers to define the span where move type to file should be offered.</PullRequestDescription>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38785</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Refresh features/compiler branch with latest bits from master</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38784</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add a comment explaining the recently added cycle detection code and its relation to the language specification.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>22/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38780</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38772</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Copy value from field on MarshalByRef object to call ToString()</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37830</PullRequestDescription>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38768</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add latest features</Title>
    <PullRequestDescription>Added 16.2 and 16.3 Preview features</PullRequestDescription>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38764</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190923.5
- **Date Produced**: 9/24/2019 4:15 AM
- **Commit**: ef4b288de587f0b86e65b3950e9095f714808ade
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 5.0.0-beta.19473.5

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

















</PullRequestDescription>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38763</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38760</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Cache AnalyzerConfigOptionsResult instances</Title>
    <PullRequestDescription>A common case for editorconfig is for most of the source files to have the same
options specified, which means if we store options for each source file it's
likely we'll have many duplicate sets. This change adds a cache to AnalyzerConfigSet
to try to de-dup identical options dictionaries to a single shared instance.</PullRequestDescription>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38759</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Refactoring: remove CompltetionItemFilter</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38757</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38756</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Verify semantic model on suppression operator</Title>
    <PullRequestDescription>Uncommenting some verification in tests for suppressions.
Closes https://github.com/dotnet/roslyn/issues/32661
Closes https://github.com/dotnet/roslyn/issues/38343

Also closes https://github.com/dotnet/roslyn/issues/38543 (problem with binding of async lambdas allowing a void to be returned) by adding a test</PullRequestDescription>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>21/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38755</PullRequestID>
    <RepoID>1</RepoID>
    <Title>A C# option to indent/not indent `namespace` contents</Title>
    <PullRequestDescription>Added a C# formatting option to enable/disable (enabled by default) indentation for `namespace` contents.

Having this off is very useful for a couple of scenarios:
1. small screens, such as laptop screens
2. diff viewing, when two files have to be shown side by side (GitHub for example often has to wrap C# code because of long lines)

For example, with option off:
```csharp
namespace MyNamespace {

using System;

class MyClass
{
    int f;
}
}
```

Option on:
```csharp
namespace MyNamespace {

  using System;

  class MyClass
  {
    int f;
  }
}
```

Closes #24129</PullRequestDescription>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38754</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix crash when moving type from global namespace</Title>
    <PullRequestDescription>Fixes internal bug
https://devdiv.visualstudio.com/DevDiv/_workitems/edit/980758

@ryzngard @dotnet/roslyn-ide </PullRequestDescription>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38753</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use IContentType.IsOfType when checking for content type matches</Title>
    <PullRequestDescription>A bug found while investigating https://github.com/dotnet/roslyn/issues/36984, was that the CodeCleanupFixerProvider was providing no fixers due to expecting an exact match of the text buffer's content type. It is recommended to use `IsOfType` to perform the comparison and this is how we check ContentTypes elsewhere.</PullRequestDescription>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38752</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix TakeIncrementalSnapshot crash</Title>
    <PullRequestDescription>Closes #37868

I can't think of any non-error scenarios where you would go into a conditional state on the LHS of an assignment operator, and learn something meaningful about the nullability of variables. So I fixed the crash by always unsplitting the state after visiting the left side of an assignment operator.</PullRequestDescription>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38751</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix typo and add richer info to rename test failure message</Title>
    <PullRequestDescription>```diff
-There were additional related locations than were unasserted:
+There were additional related locations that were unasserted:
+Foo @Test1.cs[12..15)
+Bar @Test1.cs[30..33)
```

Ideas welcome.</PullRequestDescription>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38749</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Change the Using organizer to not use ElasticTrivia for the NewLine</Title>
    <PullRequestDescription>Code Cleanup removes and sorts usings prior to running the whitespace formatter. The Using organizer used elastic trivia for the newline that it introduced between using groups which would get eaten by the formatter.

Fixes #36984</PullRequestDescription>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38747</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38740</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38739</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove unnecessary nullable suppression</Title>
    <PullRequestDescription>I was looking at existing usages of nullable suppression operator in roslyn and noticed a couple of unnecessary ones.</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38738</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add cycle detection for more scenarios involving looking in base interfaces.</Title>
    <PullRequestDescription>Fixes #38735.</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38736</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update immutable arrays of symbols in the NullabilityRewriter</Title>
    <PullRequestDescription>Will be necessary for the forthcoming lambda PR, but as this is a seperable change I'm breaking it out first.</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38732</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Allow conversion of collection initializer Add extension method this arg</Title>
    <PullRequestDescription>Fixes #38726</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38731</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Detect when type/field declared in an interface shadows a member from base interface.</Title>
    <PullRequestDescription>Fixes #38711.</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38730</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Workaround to unblock builds</Title>
    <PullRequestDescription>Same workaround as https://github.com/dotnet/roslyn/pull/38692</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38729</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Mask the shift count during constant folding to imitate the X86 behavior when unspecified.</Title>
    <PullRequestDescription>Fixes #38720</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38727</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update Arcade common folder</Title>
    <PullRequestDescription>Take the latest changes from Arcade to fix our signed build. [Test Build](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3059123) </PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38724</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38721</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Spelling fixes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38719</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38714</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Refine diagnostic for switch expression that is not exhaustive</Title>
    <PullRequestDescription>Fixes #38571</PullRequestDescription>
    <CreatedDate>16/09/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38713</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adjust syntax disambiguation for ref ternary.</Title>
    <PullRequestDescription>Fixes #38679</PullRequestDescription>
    <CreatedDate>16/09/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38710</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add tests for method type inference</Title>
    <PullRequestDescription>Closes https://github.com/dotnet/roslyn/issues/37909

To answer @jaredpar's general question, by-value and `in` arguments contribute their r-value to type inference, and `ref` and `out` arguments contribute their l-value. Aside from that, there are some tweaks for lambdas and `out` vars.</PullRequestDescription>
    <CreatedDate>16/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38709</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Require /unsafe flag for SkipLocalsInitAttribute</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>16/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38704</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/09/2019</CreatedDate>
    <ClosedDate>16/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38703</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Bump up flow analysis utilities version</Title>
    <PullRequestDescription>Use the latest flow analysis utilities package</PullRequestDescription>
    <CreatedDate>16/09/2019</CreatedDate>
    <ClosedDate>16/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38699</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>15/09/2019</CreatedDate>
    <ClosedDate>15/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38698</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make sure the NuGet package download complete notification is not cancelled</Title>
    <PullRequestDescription>Cancelling the notification would result in a background task permanently appearing in the Task Status Center in Visual Studio.

🔗 See https://developercommunity.visualstudio.com/content/problem/576978/%E6%AD%A3%E5%9C%A8%E4%B8%8B%E8%BD%BD%E7%94%A8%E4%BA%8Enugetorg%E7%9A%84intellisense-index.html</PullRequestDescription>
    <CreatedDate>14/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38696</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190913.3
- **Date Produced**: 9/13/2019 11:47 PM
- **Commit**: 7b731032220c21a3ed0021c72757b1f3122579b2
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19463.3

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)





</PullRequestDescription>
    <CreatedDate>14/09/2019</CreatedDate>
    <ClosedDate>16/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38695</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Export limited semantic model in liveshare scenario to avoid null ptrs</Title>
    <PullRequestDescription>Export a compilation factory for C#_LSP and VB_LSP.  This prevents the semantic model from being missing.

An additional side benefit is that if a generic type has been defined in a file opened on the guest, brace completion works for `&lt;`.

Long term solution for these mainly typing/syntactic services is TBD.

https://devdiv.visualstudio.com/DevDiv/_workitems/edit/982486</PullRequestDescription>
    <CreatedDate>14/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38692</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Workaround to unblock builds</Title>
    <PullRequestDescription>Currently we cannot publish assets from a build in devdiv to a feed in dnceng. We need this change to unblock builds while https://github.com/dotnet/arcade/issues/3942 is fixed and publish to blob feeds in the meanwhile.</PullRequestDescription>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38691</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>14/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38688</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Additional logging in the compiler server</Title>
    <PullRequestDescription>The compiler is occasionally crashing on non-Windows operating systems when calling `Mutex.ReleaseMutex`. The exception indicates that `WaitOne` and `ReleaseMutex` call are happening on different threads but that is not possible in the implementation. Even though the code occurs in an `async` method there is no `await` between the two calls hence it should all execute on the same thread. 

The runtime team cannot see a way this can be happening. They have requested that we add more logging here to expose the thread ids on both operations to help them dig into this issue further.

Related:
- https://github.com/dotnet/coreclr/issues/26659
- https://github.com/dotnet/roslyn/issues/37974</PullRequestDescription>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38683</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add handling for unconventional implementation of events and properties when Default Interface Implementations are involved.</Title>
    <PullRequestDescription>Closes #34452.
Closes #34453.</PullRequestDescription>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38682</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix formatting</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>13/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38681</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190912.5
- **Date Produced**: 9/13/2019 5:59 AM
- **Commit**: 6003ee189f456c92a18b097f226d4927309def27
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19462.5

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>13/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38677</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>13/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38676</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.4-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>13/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38673</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Spelling fixes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38672</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38671</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38670</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into master.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38669</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Object favorites</Title>
    <PullRequestDescription>Result Provider changes needed to support object favorites. (The ability to pin properties and fields as favorites of a type in the EE windows.)</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38667</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190911.7
- **Date Produced**: 9/12/2019 6:45 AM
- **Commit**: 8eb29ba860a3cfcfe68f9a8256caa7efc1f1aaba
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19461.7

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38666</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix OOM from SymbolUsageAnalysis</Title>
    <PullRequestDescription>We were allocating large number of BasicBlockAnalysisData instances during Merge operations when performing symbol usage analysis for locals/parameters, and holding onto these until the whole method has been analyzed before returning them to a shared pool. This approach works fine for most cases, except for extremely large methods with large number of local variables, such that the analysis needs multiple flow analysis iterations (and hence merges) over the CFG.
This PR fixes this issue by returning the allocated BasicBlockAnalysisData instances during Merge operations immediately back to the shared pool. I also added another optimization to reduce the size of tracked per-basic block analysis data by removing tracking locals as and when they go out of scope.

Fixes #38650</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38663</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38662</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38661</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.4-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38660</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into master.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38659</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38658</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38657</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38656</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Change the automation type for inline rename dialog</Title>
    <PullRequestDescription>JAWS currently will not read the name description if the automation type is Pane. The Inline Rename dialog is pretty custom in functionality, since it doesn't behave exactly like a pane, so moving to custom makes sense. It also allows JAWS to read the current automation name, which includes instructions on how a user can focus the dialog with keyboard. </PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38655</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix a memory leak in BackgroundCompiler</Title>
    <PullRequestDescription>This causes us to hold on to compilations after solution is closed in VS.
@heejaechang @jasonmalinowski @sharwell  @dotnet/roslyn-ide </PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38654</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update version and publish data for 16.4 P1 snap</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38652</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38648</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Naming Styles options page accessibility fixes</Title>
    <PullRequestDescription>Ensures there are Names for screen readers applied to the datagrid and datagrid items in the Naming Styles options dialogs. Found these issues by running the dialog through Keros.</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38647</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix crash when Nullable&lt;T&gt; creation takes dynamic argument</Title>
    <PullRequestDescription>Closes #38575

I figured that we should handle NREs reported by customers by at least enabling nullable in the offending method.</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>13/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38646</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add nullable-annotated Debug.Assert</Title>
    <PullRequestDescription>Adds the definitions for the nullable attributes to the compiler and creates an
annotated Debug.Assert</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38645</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't include nullable type information for object creation completion</Title>
    <PullRequestDescription>The type inferrer now includes nullable information, but we don't always want to include that. Nullability is not useful for object creation, since you can't create a new `object?`. 

Fixes #38508 

</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38642</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't warn about empty initializers on nullable properties in object initializers</Title>
    <PullRequestDescription>Closes #38060</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38627</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Implement formatting suppression</Title>
    <PullRequestDescription>Closes #36930
Closes #38587</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38626</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190910.3
- **Date Produced**: 9/10/2019 6:11 PM
- **Commit**: 0f5cfb20a355c27bc84cedd049c946b44a7fc1da
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19460.3

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38625</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38624</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Properly pass along actual referenced symbol in FindCallersAsync result.</Title>
    <PullRequestDescription>Looking for right place to add tests.</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38623</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[WIP] Move output window to use new API</Title>
    <PullRequestDescription>WIP</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38622</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Delete dead code in inline rename</Title>
    <PullRequestDescription>This appears to be dead, and the request (to resolve linked file conflicts before applying the diff) does appear to be done -- the call to the linked file merge step does happen in InlineRenameSession.cs.</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38620</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38619</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38618</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update Arcade and postbuild templates to fix signed build</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38617</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VisitType should visit type arguments for error types.</Title>
    <PullRequestDescription>Fixes #38403.</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38616</PullRequestID>
    <RepoID>1</RepoID>
    <Title>ResultProvider: Object favorites</Title>
    <PullRequestDescription>Adds support for object favorites in the debugger to the result providers.</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38614</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix spelling error</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38489</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38613</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Allow suppression of nullable GetEnumerator warnings</Title>
    <PullRequestDescription>Closes #38233</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38612</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Check that the document can be changed for a file rename</Title>
    <PullRequestDescription>Fixes #38525 </PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38610</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adjust rules for nullable attributes</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37993 (Property flow state wins over [NotNull] attribute for warnings)
Fixes https://github.com/dotnet/roslyn/issues/37313 (AllowNull and flow analysis conflicting design)

LDM 09/04/2019 and 09/11/2019: when assigning to a property or indexer, if the input state is legal then the output will be legal (so we assign the output state if it is more restrictive). For instance, assigning `null` to an `[AllowNull]string` means that we store a not-null state.

Also, any usage of a member which returns `[MaybeNull]T` warns if `default(T)` would.
</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38608</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix PDB reader disposal</Title>
    <PullRequestDescription>The PDB reader might be needed later on for mapping local signature of an active method that is first edited in a subsequent generation.

Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/962105
Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/976940.</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38605</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190909.10
- **Date Produced**: 9/10/2019 12:07 AM
- **Commit**: f5ccfdcbd828383d39cf583086ef42d72ca5b320
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19459.10

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38604</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38602</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38601</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38600</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38598</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Support reinferring indexers</Title>
    <PullRequestDescription>We now reinfer indexer nullability. Additionally, `GetSymbolInfo` was returning no information for range and pattern-based indexers, this has now been fixed to return the actual property or method symbol being used in those cases. @dotnet/roslyn-compiler for review. @jasonmalinowski and @ryzngard for the nullable api change, as well as for the general change for indexers and ranges. This might cause you to encounter symbols where you aren't currently.</PullRequestDescription>
    <CreatedDate>09/09/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38597</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Stop caching docker on linux builds</Title>
    <PullRequestDescription>Docker builds are cached up to a point, in order to speed up builds. Unfortunately our caches are now far enough out of date that the apt-get update is taking long enough to sometimes time out the build.

For now i'm disabling cache, it won't make the builds any quicker, but they will at least be roughly deterministic in time, rather than ever increasing.

Once this PR has cycled through enough machines, we can restore caching and builds will speed up again, but really we need to rethink how we do this to stop it being a problem in the future.</PullRequestDescription>
    <CreatedDate>09/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38594</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Run scripts/PublicAPI/mark-shipped.cmd</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37443. @JoeRobich fyi, this is almost certainly going to cause merge conflicts when it makes its way to master.</PullRequestDescription>
    <CreatedDate>09/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38593</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make OrganizeImportsService public</Title>
    <PullRequestDescription>dotnet format would like to use this service without needing an IVT or external access project.</PullRequestDescription>
    <CreatedDate>09/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38592</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix race condition in AnalyzerConfigSet</Title>
    <PullRequestDescription>When I added the dedup dictionary for diagnostic IDs in AnalyzerConfigSet
it wasn't clear to me that the GetOptionsForSourcePath method was intended
to be called on multiple threads. This change fixes the dedup dictionary
to be thread safe.</PullRequestDescription>
    <CreatedDate>09/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38591</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Random override completion cleanup</Title>
    <PullRequestDescription>Was having to look at this code trying to fix a bug, and kept running into dead code. This cleans up some random bits of it.</PullRequestDescription>
    <CreatedDate>09/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38584</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190908.2
- **Date Produced**: 9/8/2019 11:40 PM
- **Commit**: 29ee79a10c58dd6863a46157e374521cac610ad8
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19458.2

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>09/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38583</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove duplicated project guid</Title>
    <PullRequestDescription>I don't think this is intentional.</PullRequestDescription>
    <CreatedDate>09/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38577</PullRequestID>
    <RepoID>1</RepoID>
    <Title>my bad. delete please</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>07/09/2019</CreatedDate>
    <ClosedDate>07/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38576</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove DesktopShim.FileNotFoundExceptionShim</Title>
    <PullRequestDescription>Since we have dropped .NET 4.5 for a long time, the shim should be removed now.</PullRequestDescription>
    <CreatedDate>07/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38573</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190907.1
- **Date Produced**: 9/7/2019 12:52 PM
- **Commit**: c27945fc559ee636139d9f460db71242b16483e6
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19457.1

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)



</PullRequestDescription>
    <CreatedDate>07/09/2019</CreatedDate>
    <ClosedDate>08/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38569</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove legacy completion</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>07/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38566</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/09/2019</CreatedDate>
    <ClosedDate>08/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38565</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38564</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Perform lookup in base interfaces even in a type-only context.</Title>
    <PullRequestDescription>Fixes #38469.</PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38563</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adjust tuple and nullability checks on duplicate implementations and type constraints</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38560 (open questions on duplicate implementations with nullability differences): in this change, ~~we're treating such duplicates (whether direct  or indirect) as an error (instead of a warning previously), except that~~ we're relaxing the comparison to account for oblivious.
Note: there is still an active email thread on this behavior, as other nullability checks only produce warnings (not errors).

Fixes https://github.com/dotnet/roslyn/issues/38427 (missing diagnostic on duplicate type constraint with tuple name differences): in this change, we're treating such duplicates as an error, as well as  duplicate type constraints with any nullability differences.

At the same time, I'm fixing a small issue with how those duplicates are checked: we were not detecting duplicates when they differed in tuple names and nullability at the same time.</PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38562</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add dotnet-format as a local tool</Title>
    <PullRequestDescription>This local tool allows developers to format documents in **Roslyn.sln** with the following sequence:

```
dotnet tool restore
dotnet format -w Roslyn.sln
```

After installing the tool, the sequence above was run. The automated changes were applied in three commits by category of change (all attributed to @dotnet-bot). In some cases, IDE0055 was suppressed around the code which changed. However, neither the Format Document command nor the dotnet-format tool adhere to this suppression, so the suppressions were removed after changes were made to the code in these regions. I will add comments in the diff to call attention to this behavior to the original author of each of these suppressions.</PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38553</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Rewrite reference assemblies to include nullability annotations</Title>
    <PullRequestDescription>Update our **netstandard2.0** and **net472** builds to use new nullability annotations from **netcoreapp3.0** where available. Bugs found by this change were submitted as a separate pull request (#38551).

Submitting this pull request for personal review to see if it works with our CI before discussing it with infrastructure team.</PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38551</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix inconsistencies with nullability annotations in the BCL</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>14/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38550</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Reuse previously resolved missing assembly metadata objects when identity doesn't match</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/try/issues/345.

**Background**
When the compiler is resolving compilation references and encounters a reference whose assembly identity does not match any of the explicitly given references it falls back to a Reference Resolver. In regular compilation an error is reported since there is no Reference Resolver. Interactive compiler supplies a resolver that attempts to find the missing reference. 

Once the missing reference is found the compiler adds it to the list of implicitly resolved assemblies and if the same missing assembly identity is referenced later (by a subsequent submission) it reuses the assembly symbol from this list, so that we don't end up loading multiple instances of the same missing assembly. [1]

The resolver may find an assembly that matches the name of the missing reference but doesn't match the version exactly. This is expected as a newer version of the assembly may be available than was referenced and the compiler correctly binds to the newer version. 

**Issues** 
The first submission added a reference to a netstandard20 library on .NET Core and the subsequent submission referenced a type from that library. The reference resolution in the compilation corresponding to the second submission ended up adding a new, distinct reference to the library, instead of reusing the one that was already resolved for the first submission compilation.

This was caused by mismatch in versions of some of the facades transitively referenced by the library thru `netstandard.dll` reference and resolved thru the missing reference resolution mechanism. The facades ware referenced with different versions than the actual versions available in the set of references the Reference Resolver resolved missing references from. The compiler ended up using two distinct instances of the same facade assembly metadata. An assembly symbol is only reused if all its transitively referenced assemblies match. In this case the library assembly symbol wasn't reused because some of the facade assembly symbols did not match.

The problem was that the mechanism [1] didn't reuse missing assembly metadata with a different version than what was requested. The fix is to reuse all successful resolutions based on referenced identity.

Another issue found during testing is handing resolution failures. We did not remember that a resolution of a given assembly identity failed and attempted to resolve the assembly again in the next submission. This may lead to inconsistencies and the same "can't convert T to T" errors since first submission might have a missing assembly symbol and next might create a real assembly symbol for the same assembly identity. The fix is to capture both successful and failed resolution results.</PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38549</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190906.2
- **Date Produced**: 9/6/2019 2:35 PM
- **Commit**: 397060df67388da56b50de7e6f7292a5dccc2de6
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19456.2

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38544</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix incomplete attribute causing exc. in IsOnHeaderXXX methods #38502</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38534</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38533</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38532</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Support reinferring collection element initializer symbols</Title>
    <PullRequestDescription>@dotnet/roslyn-compiler for review. /cc @jasonmalinowski @ryzngard </PullRequestDescription>
    <CreatedDate>06/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38527</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add FIPS AppContextSwitchOverrides to some executable projects</Title>
    <PullRequestDescription>I added to csc, vbc, and VBCSCompiler because I assume those are the ones that use crypto (to strong name assemblies, etc). I tried out a csc built with these settings and used `/keyfile` to strong name an assembly. It just worked for me, but I don't know if there are more changes or testing needed. /cc @jaredpar.</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38526</PullRequestID>
    <RepoID>1</RepoID>
    <Title>completion leaking cancellation exception</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38455</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38524</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Updating TPN to the current MSFT format and adding Humanizer, SQLitePCLRaw and ICSharpCode.Decompiler</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>07/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38521</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Added comments here and there.</Title>
    <PullRequestDescription>When investigating approach for #38271 I've stumbled upon some code that I didn't seem to be clear to me. Tried adding a few documents &amp; changing some parameter names to make it more obvious. 

Not sure if we want this level of comments in code, however. </PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38510</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Rename files in the compiler server</Title>
    <PullRequestDescription>This is the final part of the type hierarchy unwind. It renames the
files in the projects to match the new type names.</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38505</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190905.21
- **Date Produced**: 9/6/2019 1:51 AM
- **Commit**: e99f81b0e3289cfd851be0d927c1fcffa43af6b5
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19455.21

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)



</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38501</PullRequestID>
    <RepoID>1</RepoID>
    <Title>EnC: fix handing of added and design-time-only files</Title>
    <PullRequestDescription>Adds a `DesignTimeOnly` flag to `DocumentOperationService` that is set for documents created for design-time only purposes (.cshtml, intellisense-only .g.cs files) and not included in the compilation when the assembly is built. This allows the EnC service to ignore changes in such files.

Also fixes an issue in EnC analysis where a NRE might have been thrown when a file was added during run mode. 

Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/976731
Fixes https://github.com/aspnet/AspNetCore/issues/13284
Fixes https://dev.azure.com/devdiv/DevDiv/_workitems/edit/793522
</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38500</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Disposer cleanup for pooled objects.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38499</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Sort completion list by pattern matching results</Title>
    <PullRequestDescription>Address #38253 with two tweaks

1. Sort completion list by pattern matching results first, then by alphabetical order (current behavior is pure alphabetical order)
2. Selection will prefer unimported item with complete match if there's no in-scope items with complete match (current behavior is always prefer in-scope items, even if it has worse matching than unimported items)

---------------------------------

- Ctrl + space, when a complete match exists for both in-scope and unimported items. We will prefer in-scope items. Another impact of this change is, in case there's no complete match, we might end up selecting an in-scope item, with better matched unimported items above the selection (not shown in the gif).

&lt;a href="https://user-images.githubusercontent.com/788783/64370300-0a567c80-cfd3-11e9-8ece-1dffbba1b2ce.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/788783/64370300-0a567c80-cfd3-11e9-8ece-1dffbba1b2ce.gif" width="400" /&gt;&lt;/a&gt;

- Ctrl + J, same scenario as above, Notice all unmatched items remain sorted first by in-scope/unimported and then in alphabetical order *after* all matched items

&lt;a href="https://user-images.githubusercontent.com/788783/64371107-a0d76d80-cfd4-11e9-9d90-c805b16f973d.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/788783/64371107-a0d76d80-cfd4-11e9-9d90-c805b16f973d.gif" width="400" /&gt;&lt;/a&gt;

- Ctrl + space, when only unimport item has a complete match, then it will be selected

&lt;a href="https://user-images.githubusercontent.com/788783/64371278-0c213f80-cfd5-11e9-9a32-e0c953635350.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/788783/64371278-0c213f80-cfd5-11e9-9a32-e0c953635350.gif" width="400" /&gt;&lt;/a&gt;

Since this is a potentially impactful change, hide it behind an experiment for now.
Tag @ivanbasov @CyrusNajmabadi for review. 

FYI @davkean Does this address your feedback?

------------------------------- 

I have done some quick perf analysis, which is based on the following scenario:

1. Open Roslyn.sln, then navigate to the static constructor of `AbstractPersistentStorageTests` class. (I chose this file because it has ~20k items in the list with import completion enabled)
2. Ctrl + space to trigger completion list
3. slowly type "task"
4. slowly delete "task" by using backspace
5. hit "esc" to discard completion list
6. go to step 2 and repeat for another 3 times

This is repeated 3 time, with different roslyn release builds
1. Baseline: built directly from current master-vs-deps branch
2. With experiment disabled: with the change in this PR w/o enabling the experiments
3. With experiment enabled: does one more pass of sorting using pattern match, otherwise identical to build 2 above.

Here's the results (CPU stacks in perfview, with only frames under `ManagedModule!Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.AsyncCompletion.ItemManager.UpdateCompletionList()` included)

1. Comparing experiment on and off. The extra sorting doesn't show in the diff at all.

![image](https://user-images.githubusercontent.com/788783/64387430-cecaab00-cff0-11e9-963f-e3f0e8134c2f.png)

2. Comparing baseline and with experiment enabled. It seems the perf is better with the change (~~216 ms~~ even better now, see update below), due to calling pattern match fewer times.

![image](https://user-images.githubusercontent.com/788783/64387831-fc642400-cff1-11e9-87e0-c4f18be3a70f.png)

Update: 
with the change in https://github.com/dotnet/roslyn/pull/38499/commits/087bc0a3d72f80acb4cb5758cda7266debafb9d1, now the diff is -569 ms compare to baseline (~2000 vs ~1450)

![image](https://user-images.githubusercontent.com/788783/64393392-02640000-d006-11e9-8208-b6cab51a1920.png)

</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38498</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make sure we Dispose() the options processor of CPS projects</Title>
    <PullRequestDescription>Commit at a time recommended, as the first commit is just me adding nullable annotations.

- Fixes #38443
- Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/951410</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38496</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38495</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38494</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adjust dependency tracking for types with respect to added ability to nest types into interfaces.</Title>
    <PullRequestDescription>Related to #34704.

**We used to have the following rules:**

"When a class B derives from a class A, it is a compile-time error for A to depend on B. A class **directly depends on** its direct base class (if any) and **directly depends on** the ~~**class**~~ within which it is immediately nested (if any). Given this definition, the complete set of ~~**classes**~~ upon which a class depends is the reflexive and transitive closure of the **directly depends on** relationship."

It is a compile-time error for an interface to directly or indirectly inherit from itself.
The **base interfaces** of an interface are the explicit base interfaces and their base interfaces. In other words, the set of base interfaces is the complete transitive closure of the explicit base interfaces, their explicit base interfaces, and so on.

**Since we added ability to nest types into interfaces, we are adjusting them as follows:**

When a class B derives from a class A, it is a compile-time error for A to depend on B. A class **directly depends on** its direct base class (if any) and **directly depends on** the _**type**_ within which it is immediately nested (if any).

When an interface IB extends an interface IA, it is a compile-time error for IA to depend on IB. An interface **directly depends on** its direct base interfaces (if any) and **directly depends on** the type within which it is immediately nested (if any).

Given these definitions, the complete set of **types** upon which a type depends is the reflexive and transitive closure of the **directly depends on** relationship.</PullRequestDescription>
    <CreatedDate>04/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38493</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable xUnit2002: Assert.NotNull validation</Title>
    <PullRequestDescription>This enables xUnit analyzer rule xUnit2002 which validates the expression being passed to `Assert.NotNull` is not a value type. The Roslyn code base had ~2,000 violations of this rule mostly due to passing `SyntaxToken` here. Presumably this is a historical artifact from the times when `SyntaxNode` was defined as a `class` instead of `struct`. 

The code was mechanically transformed in the following way:

``` csharp
// old
Assert.NotNull(token);
// new
Assert.NotEqual(default, token)
```

I did give some consideration to just removing all the uses of `Assert.NotNull` when the argument passed in was side effect free (mostly locals). Eventually I decided against this though because I didn't want to mix potentially deleting valuable code with a mechanical transformation. If we do want to remove the non-sense comparisons here we should take that as a separate change.
</PullRequestDescription>
    <CreatedDate>04/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38492</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix violations of xUnit analyzers</Title>
    <PullRequestDescription>Turning on a few warnings and fixing violations of them.</PullRequestDescription>
    <CreatedDate>04/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38478</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190903.5
- **Date Produced**: 9/3/2019 10:25 PM
- **Commit**: 6e94f0da0f12c7663ab39ce5bd6a67c4ab58b5ee
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19453.5

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>04/09/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38476</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't offer Introduce local for expression statement if expr. stm is assignment.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>04/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38475</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>04/09/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38474</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>04/09/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38473</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>04/09/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38472</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update VS SDK to 16.3.2099</Title>
    <PullRequestDescription>Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/970596</PullRequestDescription>
    <CreatedDate>03/09/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38470</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Collapse redundant types in the server part 2</Title>
    <PullRequestDescription>Follow up to #308411

This is probably best reviewed commit by commit. 

Note: I've intentionally avoided re-naming files because I want to keep the history diff as easy as possible. Once this is merged I will have one final PR which does all of the proper file renaming to match the new class names.</PullRequestDescription>
    <CreatedDate>03/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38462</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Cache diagnostic ID strings in the AnalyzerConfigSet</Title>
    <PullRequestDescription>I'm not sure if this is exactly where we want to do the caching, so I've
taken the opportunity to make all the non-core AnalyzerConfig APIs internal.
There are no existing consumers depending on them, so this is not a breaking
change.

Fixes #38426</PullRequestDescription>
    <CreatedDate>03/09/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38461</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove SourceBuild.sln, and use ExcludeFromSourceBuild propert…</Title>
    <PullRequestDescription>@tmat @jaredpar for review. @dseefeld @crummel, what changes will this need on the source-build side to consume Roslyn.sln instead of SourceBuild.sln?</PullRequestDescription>
    <CreatedDate>03/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38460</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix type inference issue with nullability</Title>
    <PullRequestDescription>Nullability should only introduce warnings, but in a type inference scenario where two candidates differ only in nullability we were producing an error.

~~This PR introduces a breaking change which I'll confirm with compat council. Previously, we would only warn for implementing the same interface twice with different nullabilities, but it is more consistent with other checks to produce an error. Indirect duplicate implementations still just produce a warning.~~

Fixes https://github.com/dotnet/roslyn/issues/38168

While working on this, I noticed that tuple name checks are there for interface implementations , but missing for type constraints (`... : I&lt;(int a, int b)&gt;, I&lt;(int c, int d)&gt;). Filed https://github.com/dotnet/roslyn/issues/38427 for follow-up on that.</PullRequestDescription>
    <CreatedDate>03/09/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38457</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Disable failing tests</Title>
    <PullRequestDescription>Related to #38454.

These tests fail in the CI runs for #38417 which adds translations for various resources. The problem is the test compares localized text with the original English text; this worked fine until now because the localized text wasn't yet translated, and so just happened to be the same as the English.

The point of this change is to unblock #38417.</PullRequestDescription>
    <CreatedDate>03/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38456</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add a test for awaitable pattern with ref struct result</Title>
    <PullRequestDescription>Closes #37712</PullRequestDescription>
    <CreatedDate>03/09/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38451</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adjust inconsistent accessibility checks to properly handle protected types declared within interfaces.</Title>
    <PullRequestDescription>Fixes #38398.</PullRequestDescription>
    <CreatedDate>03/09/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38441</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move to a newer FlowAnalysis utilities package</Title>
    <PullRequestDescription>This addresses the memory leak in #38330. The underlying memory leak was fixed in the FlowAnalysis utilities assembly with https://github.com/dotnet/roslyn-analyzers/pull/2795. This PR just moves Roslyn to newer Flow analysis utilities package reference with the fix.

Fixes #38330</PullRequestDescription>
    <CreatedDate>01/09/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38438</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190830.3
- **Date Produced**: 8/30/2019 6:51 PM
- **Commit**: 316c80d0c373be63f991cc4d586db85273c1c553
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19430.3

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)







</PullRequestDescription>
    <CreatedDate>31/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38436</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38435</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove incorrect assertion</Title>
    <PullRequestDescription>Fixes #37783</PullRequestDescription>
    <CreatedDate>31/08/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38434</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38430</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Formatter throws a exception where HostObjectValue is null</Title>
    <PullRequestDescription>Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/971364

Always check if HostObjectValue is null, since any of these types might actually be a synthetic value as well.</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38425</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Support building the workspaces layer in source-build</Title>
    <PullRequestDescription>This requires conditionally excluding the SQLitePCLRawbundle_green dependency and conditionally excluding the code that depended on it. This code path was only used on Windows, so we shouldn't be breaking any functionality source-build was depending on. To verify that we don't accidentally break source-build, I've added a CI step that will run on linux and set the `DotNetBuildFromSource` flag.</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38421</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Handle invalid local function parameter with default value in GetDeclaredSymbol</Title>
    <PullRequestDescription>Avoids `ArgumentOutOfRangeException` in `CheckAndAdjustPosition`.</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>31/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38419</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190829.16
- **Date Produced**: 8/30/2019 1:19 AM
- **Commit**: e5aaea7fcfc46449b035d5b220032bfb933e98a4
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19429.16

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38418</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38417</PullRequestID>
    <RepoID>1</RepoID>
    <Title>LOC CHECKIN | dotnet/roslyn release/dev16.3-vs-deps | 20190830</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38416</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Formatting removes newline before semicolon</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38066.

This PR assumes that having a statement-ending semicolon at the start of a line is not a reasonable formatting, so it's okay to reformat it.</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38415</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Support compound operators with pattern Index/Range indexers</Title>
    <PullRequestDescription>When we added a pattern-based range, compound operator lowering was
not updated to deal with the new node, which it does pre-lowering, since
some bound nodes (like indexers) have different code gen in the presence
of compound operators.

This change implements compound operator support for pattern Index/Range.

Fixes #37789</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38414</PullRequestID>
    <RepoID>1</RepoID>
    <Title>disable unimported type in completion tests: not for merge</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38413</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Increase Editor Completion Timeout for tests</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38412</PullRequestID>
    <RepoID>1</RepoID>
    <Title>fix MEF issue.</Title>
    <PullRequestDescription>forgot to put ImportMany which cause ILanguageClient to not load.</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38411</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Collapse redundant types in the server</Title>
    <PullRequestDescription>The server has several instances of the following type hierarchy pattern:

```
interface IUtil { }
class Util : IUtil { }
class DesktopUtil : Util { } 
```

This was mostly done by myself for the following reasons:

1. At the time the compiler server only worked on desktop. It was believed that we'd need `CoreClrUtil` derivations to enable the same behavior on CoreClr. Luckily netstandard added all the types we needed hence we were able to use the `DesktopUtil` versions without modification.
1. There was a belief that we'd use an IPC mechanism other than named pipes on other operating systems. That is not the case as the named pipe implementation improved significantly and given a good deal of consistency across operating systems. 
1. Make it easier to test corner cases in the server. 

This change collapses many of the `DesktopUtil` types into the base `Util` type. 

There will likely be a few more of these changes. @agocke and I think the churn is worth the reduction in complexity and increase in code readability here. 

</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38410</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use shim for c#/vb liveshare gotodef, leave typescript as custom impl…</Title>
    <PullRequestDescription>…ementation requiring UI.

Split out the liveshare goto def into a shim and an implementation for typescript.  TS doesn't define a definition service, so must use FAR which must be called on the UI thread.</PullRequestDescription>
    <CreatedDate>30/08/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38409</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix underselection problem in invertlogical refactoring.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38407</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38406</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38400</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Cleanup InitializeParameterCodeRefactoring.</Title>
    <PullRequestDescription>Cleanup we've talked about with Shlomo but never got to do.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>31/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38399</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Show Quick Info nullable analysis if the analysis is turned on globally</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38346</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38397</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make only typescript handlers and run code actions switch to main thr…</Title>
    <PullRequestDescription>…ead.

Make the c#/vb handlers not require main thread execution.  

Left typescript and obsolete roslyn handler to request main thread (as it serves typescript as well).</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38396</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Consider nullability when comparing IReference instances during emit (#38249)</Title>
    <PullRequestDescription>Port the fix for #38183 to 16.3.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38395</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Call GetTextSynchronously when fetching in a synchronous way</Title>
    <PullRequestDescription>This code is trying to fetch the text of a single line, but since it's responding to an API that's synchronous it must be synchronous. We were doing it with GetTextAsync + WaitAndGetResult which can be slow if the thread pool is busy.

Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/974884</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38394</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Properly detect whether an explicit event implementation in an interface is a WinRT event.</Title>
    <PullRequestDescription>Fixes #36532.
Closes #34658.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38393</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add an IDE test covering https://github.com/dotnet/roslyn/issues/36052</Title>
    <PullRequestDescription>Now that https://github.com/dotnet/roslyn/issues/36052 is fixed, let's have a test in the IDE too -- the generate method tests were previously only using parameters since it avoided the bug.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38392</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Include SyntaxTree in Exception thrown from CheckAndAdjustPosition</Title>
    <PullRequestDescription>Include `SyntaxTree` in `ArgumentOutOfRangeException` thrown from `CSharpSemanticModel.CheckAndAdjustPosition()` to improve debuggability in cases where an exception is re-thrown from `Task` completion.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38389</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix misspelling in FeaturesResources</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>11/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38380</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove unnecessary AbstractFormatEngine.Partitioner</Title>
    <PullRequestDescription>As far as I can tell, https://github.com/dotnet/roslyn/pull/31276 (or, more specifically, https://github.com/dotnet/roslyn/commit/34b167a2b6c4a8046494f5ed2995a1676d938616) removed all parallelization from this code. In the case of `ApplySpaceAndWrappingOperations`, it set the `Partitioner` to always use only one partition and removed `Task`s. But that makes the whole `Partitioner` unnecessary, so this PR removes it, which also make the code that previously used it simpler.

cc: @sharwell </PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38375</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190828.9
- **Date Produced**: 8/28/2019 11:24 PM
- **Commit**: dc55bd4b7353be8e36b2f71b9557e84f743dd6f6
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19428.9

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38374</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38373</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38372</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38364</PullRequestID>
    <RepoID>1</RepoID>
    <Title>port typescript's remote syntactic classification tagger for A/B testing</Title>
    <PullRequestDescription>this code is only for A/B testing to see whether we can do syntactic classification remotely.

this code reuses existing code exactly the same as much as possible.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38362</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update operand flow state after an unboxing conversion</Title>
    <PullRequestDescription>Closes #38170

I incidentally found and fixed a bug where explicit nullable conversions to non-nullable value types would fail to update all affected slots.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38361</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Revert VSSDK and keep GoToBase UI</Title>
    <PullRequestDescription>Attempt to fix #38349, #38350 and #38351</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38359</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38356</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix deadlock due to VS Experiement service jumping to UI thread in certain cases.</Title>
    <PullRequestDescription>make sure to acquire IExperiementationService outside of a lock so that we don't get into deadlock in certain cases.</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38355</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove RestoreSources from Versions.props</Title>
    <PullRequestDescription>Responds to the change https://github.com/dotnet/arcade/pull/3041 in Arcade</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38354</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Record updated symbols for properties, fields, event access, and event assignments</Title>
    <PullRequestDescription>This expands the range of symbols for which `GetSymbolInfo` will return correct information. @dotnet/roslyn-compiler for a review please. /cc @jasonmalinowski @ryzngard.</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38353</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Bring features/localsinit branch up to date with master</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38348</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Bind some syntax nodes even in error recovery scenarios.</Title>
    <PullRequestDescription>Fixes #27060</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>31/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38338</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix test trait</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38337</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190827.8
- **Date Produced**: 8/27/2019 7:27 PM
- **Commit**: c02ca5d078b5b54bef8043d972082f41fd912190
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19427.8

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38336</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38335</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38334</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38328</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Show error every time CallHierarchyView doesn't a find suitable node.</Title>
    <PullRequestDescription>The simplest &amp; quickest hot-fix for #38303

Should be expended with allowing way more locations instead.</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38325</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Allow is operators to update null state of value types</Title>
    <PullRequestDescription>Closes #38213 

I saw that VisitIsOperator requires the operand type to not be value type in order to update the flow-state to not-null. I don't see a reason why it should require this, so I just removed the check and added a few tests for @sharwell's scenario.</PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38324</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove IVTs to liveshare</Title>
    <PullRequestDescription>Tested locally with liveshare running.  Runs fine.
Liveshare build should not be affected as the older DLLs build with specific roslyn versions.

Closes #35074 </PullRequestDescription>
    <CreatedDate>28/08/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38322</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove withinTypeSyntax restriction for UseExplicit/ImplicitType refactoring.</Title>
    <PullRequestDescription>Lifts a restriction that selection/caret must intersect the typeSyntax for Use[Explicit/Implicit]Type refactoring. 

While it potentially introduces noise (addition refactorings) it shouldn't be much of an issue do to the way ordering works. Since the applicableToSpan is still the type, the distance to it should be sufficiently larger than to any other refactoring. 

If it proves to be problematic the ordering via applicableToSpan should be updated to create distance for refactorings that whose applicableToSpan doesn't intersect current selection/caret location.

Work for #35525</PullRequestDescription>
    <CreatedDate>27/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38321</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Delete IEditorClassificationService</Title>
    <PullRequestDescription>F# has now moved to it's own service which is supported so this can be deleted.</PullRequestDescription>
    <CreatedDate>27/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38320</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Re-infer unary and binary operators in NullableWalker</Title>
    <PullRequestDescription>See #29605.</PullRequestDescription>
    <CreatedDate>27/08/2019</CreatedDate>
    <ClosedDate>13/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38319</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable tests disabled due to changes in behavior in runtime.</Title>
    <PullRequestDescription>Fixes #32576. Fixes #33564.</PullRequestDescription>
    <CreatedDate>27/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38318</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Report error for async-iterator with expression-body</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38201

Also adjusts the diagnostic reporting to avoid duplicates reported by `GetIteratorElementType`.</PullRequestDescription>
    <CreatedDate>27/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38313</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use inferred nullability of discards</Title>
    <PullRequestDescription>This addresses simple discards (ie. discards in assignments). Fixes https://github.com/dotnet/roslyn/issues/35036

Discards in `out` variables work (`Discard_OutDiscard`).
There's an issue tracking deconstruction more generally, so discards in deconstructions aren't handled. Same for patterns.</PullRequestDescription>
    <CreatedDate>27/08/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38307</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190826.12
- **Date Produced**: 8/26/2019 10:46 PM
- **Commit**: 36ce21e795e2e90081300f4cb645dfd8cf6eb2b3
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19426.12

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)



</PullRequestDescription>
    <CreatedDate>27/08/2019</CreatedDate>
    <ClosedDate>27/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38302</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Skip failing integration tests</Title>
    <PullRequestDescription>Step 1 of https://github.com/dotnet/roslyn/issues/38301</PullRequestDescription>
    <CreatedDate>27/08/2019</CreatedDate>
    <ClosedDate>27/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38300</PullRequestID>
    <RepoID>1</RepoID>
    <Title>FindMostSpecificImplementation shouldn't swallow useSiteDiagnostics</Title>
    <PullRequestDescription>Fixes #35851.</PullRequestDescription>
    <CreatedDate>26/08/2019</CreatedDate>
    <ClosedDate>27/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38298</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add comment to document the use of the variables in the signed build yml</Title>
    <PullRequestDescription>as suggested https://github.com/dotnet/roslyn/pull/38259#discussion_r317804589</PullRequestDescription>
    <CreatedDate>26/08/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38290</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Avoid posibility of a race around SynthesizedMethodBaseSymbol._iteratorElementType field in the future.</Title>
    <PullRequestDescription>Fixes #38285.</PullRequestDescription>
    <CreatedDate>26/08/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38288</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VB: Report access to members of an interface that are not supported by runtime.</Title>
    <PullRequestDescription>Fixes #35834. Fixes #35885.
Also addresses some scenarios related to #35824.</PullRequestDescription>
    <CreatedDate>26/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38278</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190824.1
- **Date Produced**: 8/24/2019 12:51 PM
- **Commit**: a7b5eb8de300b6a30bd797c4ecc8769f7028aeec
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19424.1

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>25/08/2019</CreatedDate>
    <ClosedDate>27/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38277</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into release/dev16.3-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/08/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38273</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Improved Markdown formatting of Breaking changes documents</Title>
    <PullRequestDescription>Not sure if release/dev16.4-preview1 is the right target branch for a PR that doesn't change any code, but targeting that branch just in case anyway.</PullRequestDescription>
    <CreatedDate>24/08/2019</CreatedDate>
    <ClosedDate>09/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38265</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/08/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38264</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.4-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/08/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38263</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/08/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38259</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add missing properties to the build pipeline for stages-based publishing</Title>
    <PullRequestDescription>See https://github.com/dotnet/core-eng/issues/7561

Sets up a few properties that were previously not documented as part of the onboarding process, and are causing issues in the publishing process.

Test build for this: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2972442&amp;view=results

You will notice a few differences in that build:

* The build stage doesn't publish anything to the dotnet-core feed, and instead publishes all artifacts to the build's containers.
* I set up a default channel for my testing branch to the ".NET Tools -latest" channel for testing purposes: `https://github.com/dotnet/roslyn @ refs/heads/dev/riarenas/add-stages-properties -&gt; .NET Tools - Latest`. Which causes publishing to happen as part of the channel's publishing stage:
![image](https://user-images.githubusercontent.com/23242101/63628210-092f5380-c5c0-11e9-866c-bcb9e8b62cac.png)


**Followup**:

The `Publish Ngen Logs` step failed in my test builds, I'm not sure if it's expected due to the configuration I used to queue the test build, or if it's a legitimate failure.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38258</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add null annotations to the Document API and fix various other problems</Title>
    <PullRequestDescription>Commit at a time is recommended.

**WARNING:** there is an public API breaking change in this, but I believe it's a case where anybody would already be broken so I'm comfortable making it.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38257</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Generalize the map used for storing BoundCall/MethodSymbols</Title>
    <PullRequestDescription>Generalize the map used for storing BoundCall/MethodSymbols to allow for any boundnode and original symbol -&gt; updated symbol pair, and update the rewriter generator to consume the map. Followup changes will capture more reinferred symbols, this change just sets up the infrastructure without breaking existing functionality. @dotnet/roslyn-compiler for review.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38254</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update null state of argument to delegate creation</Title>
    <PullRequestDescription>Closes #38171

Just a small oversight in delegate creation analysis. Passing a null argument to a delegate creation will always throw, so we should always update the null-state of the argument to not-null after the creation. This is similar to what is done in `CheckPossibleNullReceiver`.

Thanks @TessenR.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38251</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Allow static local functions to convert static functions to delegates</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38240.

The change in `VisitMethodGroup` means that the receiver of a method group is no longer checked automatically.

The changes in `VisitConversion` ensure that a method group is first properly checked for CS8421, and then that the receiver is checked, but only if the method selected by overload resolution has a receiver.

This PR targets the release/dev16.4-preview1 branch, because my previous PRs were sent there. If that's wrong, please tell me.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38249</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Consider nullability when comparing IReference instances during emit</Title>
    <PullRequestDescription>Fixes #38183</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38246</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Re-add master-vs-deps to the publish branch list</Title>
    <PullRequestDescription>master-vs-deps is the backup for all branch publishing, so it
must always be in the list.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38239</PullRequestID>
    <RepoID>1</RepoID>
    <Title>MemoryHelper.cs: Don't call Win32 API on Unix</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38211</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>27/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38235</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38234</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38232</PullRequestID>
    <RepoID>1</RepoID>
    <Title>A switch expression only has a common type if all arms can be converted to that type.</Title>
    <PullRequestDescription>Fixes #38226</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38231</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38230</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Avoid a race around initialization of TypeWithAnnotations structure and IsDefault check.</Title>
    <PullRequestDescription>Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/797080.

We have several Watson buckets that imply that a TypeWithAnnotations structure returned by RetargetingMethodSymbol.ReturnTypeWithAnnotations and RetargetingPropertySymbol.TypeWithAnnotations has null as its Type property. The properties are backed by fields that are initialized by an API that never produces structures like that (with null Type property). I suspect that the situation can arise in case of a race between two threads, where the structure is only partially initialized so that IsDefault check fails in one thread, but the underlying information for the Type property is still not initialized by another thread.

This change eliminates possibility of races like that.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38229</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>23/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38225</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Wire-up to text buffers even if there is no RDT DocDataReloaded</Title>
    <PullRequestDescription>In 735a653208407801d96ac75a1398fa81542bb03e we stopped listening to RDTA_DocumentInitialized as a trigger to know when the document might now be available. We believed it wasn't necessary since DocDataReloaded would cover it, but files being opened or manipulated via some DTE interfaces or with the invisible editor seem to still require it.

Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/937712</PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38222</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Minor change to address previous PR comments</Title>
    <PullRequestDescription>This is to address some minor comments left unaddressed in a previous PR #38101
</PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>24/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38220</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Do not report an NFW for analyzer exception diagnostic in IDE</Title>
    <PullRequestDescription>This seems to cause a noticable UI delay while the NFW gets reported. We already report the AD0001 diagnostic with exception callstack and the analysis context on which exception occurred, so user has enough information to file an actionable bug.
Fixes #38180</PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38214</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VB: Adjust merging of lookup result for inaccessible members of different kind, prefer more accessible candidate.</Title>
    <PullRequestDescription>Fixes #35948.</PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38208</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3 to release/dev16.3-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-to-release/dev16.3-vs-deps
git reset --hard upstream/release/dev16.3-vs-deps
git merge upstream/release/dev16.3
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38207</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3
git reset --hard upstream/release/dev16.3
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38202</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add release/dev16.3-vs-deps to publishing</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38200</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Exclude textual changes made in unchangeable document</Title>
    <PullRequestDescription>This is my third attempt of fixing the feedback below (see #38070 for another approach)
https://developercommunity.visualstudio.com/content/problem/682938/csharperenametrackingcodefixprovider-encountered-a.html 

The root cause is symbol finder returns all the references for a given symbol, including those from unchangeable document (i.e. *.g.cs file from Razor). As a result, refactoring uses "find reference" would end up fixing those references and cause workspace to throw when the change is being applied.

This added a new helper method that simply drop all changes made in those unchangeable document. And call this helper before refactoring returns final solution.

Affected refactoring:
1. rename
2. sync/change namespace (#37521)
3. change signature

Note that this change only avoids the crash. User code will be left in a broken state, which is really undesirable, but there's not much we can do until Razor provides us a way to modify closed files.</PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38199</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Skip flaky integration test</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38197</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>22/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38196</PullRequestID>
    <RepoID>1</RepoID>
    <Title>When a synthetic ref local is captured, variables referenced in its initializer must be captured too</Title>
    <PullRequestDescription>Fixes #36443</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38194</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add ETW events for recovering syntax trees</Title>
    <PullRequestDescription>Closes #37477

The steps for manually recording traces have already been updated to enable the provider.

![image](https://user-images.githubusercontent.com/1408396/63475983-fdaf2180-c433-11e9-9b55-b603c778c9fb.png)
</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38189</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Skip uninitialized field warning for generic constrained to nullable reference type</Title>
    <PullRequestDescription>Closes #37987

I wasn't able to find an API that did quite what I want, so I ended up adding it to TypeWithAnnotations. I would like to know if there's a better or already existing way to answer the question it is answering.</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38188</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Nullable annotations refactoring helpers &amp; bits and pieces elsewhere</Title>
    <PullRequestDescription>Based on #38166</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38187</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add infromation to bound nodes for converted tuples and switches to determine if they were target-typed.</Title>
    <PullRequestDescription>Fixes #37193
These changes are internal only, so no behavioral (test) changes are expected.
</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38186</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Split state for boolean constants</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38124 (`Debug.Assert(false)`)</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38185</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove the 7.3 languageversion from the BindSymbolInOtherFile test</Title>
    <PullRequestDescription>Ran locally both specifying languageversion="8" and not specifying a languageversion and the test passed.

Resolves #37097</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38184</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Change unused parameters analyzer configuration to analyze generated …</Title>
    <PullRequestDescription>…code

This fixes false reports for unused parameters of event handlers that are referenced/invoked from xaml generated code files. Fixes #37483</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38179</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38177</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Prevent static local functions from capturing local functions</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38129.

Also fixes a typo in a comment that I found when looking for tests that check for CS8421.</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38176</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VB: Add tests for consuming operators defined within interfaces.</Title>
    <PullRequestDescription>Closes #35998. Closes #35999.</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38175</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Revert "Revert "Adding Null Checks For All Parameters""</Title>
    <PullRequestDescription>This reverts the PR https://github.com/dotnet/roslyn/pull/38049, therefore adds back the new "Adding Null Checks For All Parameters" for 16.4.

@dotnet/roslyn-ide </PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38172</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190823.6
- **Date Produced**: 8/23/2019 5:47 PM
- **Commit**: c48732c894e73e4b1f491929392a465182eb7ba6
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19423.6

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)







</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>24/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38166</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Cleanup &amp; rework of `IsOnTypeHeader` usage</Title>
    <PullRequestDescription>~Based on: #37884~
Work for: #35525</PullRequestDescription>
    <CreatedDate>21/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38165</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>24/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38164</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38163</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>25/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38162</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38161</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38160</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into master.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38159</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update Generate Equals and GetHashCode to handle nullable members</Title>
    <PullRequestDescription>Fixes #37913</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38154</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adjust sequence point on await foreach and using declaration</Title>
    <PullRequestDescription>Highlight the `using` and `await` in `await foreach (...)`, `using var x = ...` and `await using var x = ...`.

Fixes https://github.com/dotnet/roslyn/issues/37402</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38153</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Show nullable annotations in tuple signature help</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37252</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38152</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Include nullability in symbol comparison for if SymbolsAreCompatibleCore</Title>
    <PullRequestDescription>Fixes #31849</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38151</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Disabling Mono leg</Title>
    <PullRequestDescription>Latest Mono nightly builds appear to have broken serialization during
remoting across AppDomain instances. That is pretty fundamental to how
we test. Temporarily disabling the Mono leg until this can be fixed.

Tracking Mono Issue: https://github.com/mono/mono/issues/16373</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38150</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Disabling Mono leg</Title>
    <PullRequestDescription>Latest Mono nightly builds appear to have broken serialization during
remoting across AppDomain instances. That is pretty fundamental to how
we test. Temporarily disabling the Mono leg until this can be fixed.

Tracking Mono Issue: https://github.com/mono/mono/issues/16373</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38148</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix check of BinaryOperatorKind</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/25231

Note: I don't think the change is observable at the moment.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38146</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable a deconstruction test</Title>
    <PullRequestDescription>Closes https://github.com/dotnet/roslyn/issues/13716</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38144</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove RuntimeIdentifiers</Title>
    <PullRequestDescription>The `$(RuntimeIdentifiers)` property was added some time ago to support
scenarios like self contained in our infrastructure. That is no longer
done during build and this property is no longer necessary. Further it's
causing us additional restore time to bring down runtimes we don't need.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38141</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix indenting</Title>
    <PullRequestDescription>This is breaking the official build because the indenting is a syntax error.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38140</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Prevent embedding of non-abstract interface members.</Title>
    <PullRequestDescription>Closes #35852. Closes #35911.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38139</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update PublishData.json</Title>
    <PullRequestDescription>It seems like publish data for 16.4-preview1 branch should be in here. /cc @JoeRobich </PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38136</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Do not fade code for IDE0016 (UseThrowExpressionDiagnosticId)</Title>
    <PullRequestDescription>Fixes #27213

Analyzer recommends using throw expression for null checks instead of throw statement within an if statement with null check. We used to fade the entire if statement for discoverability and increased code fix span, but this was undesirable as we want to fade only unnecessary or dead code. Instead, we now generate a hidden non-configurable fixable diagnostic for the increased code fix span and do not generate any fading.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38135</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Give LangVersion error when type is generic due to parent type</Title>
    <PullRequestDescription>Closes #38105</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38134</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190819.12
- **Date Produced**: 8/19/2019 5:30 PM
- **Commit**: 10b2260aeed5f07582bf8d8dcd4221a447b171c5
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19419.12

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38133</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38128</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix generated Equals(object) parameter nullability mismatch</Title>
    <PullRequestDescription>Fixes #38068

This fixes the Quick Action. What about the `Equal(object)` methods for anonymous types?</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38126</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update override completion for nullable reference support</Title>
    <PullRequestDescription>- Ensure we show the ? in all the appropriate places
- Ensure we don't spit ? if we shouldn't
- Ensure we drop ? for the special case of the ToString return. See in-code comments for details.

Closes #30317. Note the original request in the bug isn't granted due to the extensive design discussion afterwards, but it fixes all the other problems.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38125</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Replace obsolete vbNewLine</Title>
    <PullRequestDescription>When I run `build.cmd`, I get the following error:

&gt; C:\code\roslyn\src\Compilers\VisualBasic\Test\Symbol\SymbolsTests\SymbolErrorTests.vb(10539,25): error BC40000: 'Public Const vbNewLine As String' is obsolete: 'For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.'. [C:\code\roslyn\src\Compilers\VisualBasic\Test\Symbol\Microsoft.CodeAnalysis.VisualBasic.Symbol.UnitTests.vbproj]

This change fixes that.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38120</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38119</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38118</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38117</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix completion of local functions in static methods</Title>
    <PullRequestDescription>Contributes to https://github.com/dotnet/roslyn/issues/38074.</PullRequestDescription>
    <CreatedDate>20/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38116</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Reject pattern-matching operations on pointer types in C# versions less than 8.</Title>
    <PullRequestDescription>This fix intentionally does not introduce a "language version" diagnostic because I would
like this fix to be as simple as possible to hot-fix 16.3, and because we are past translation
deadlines.
Fixes #38052
</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38114</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Disable formatting analyzers</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38113</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Give LangVersion error when type is generic due to containing type</Title>
    <PullRequestDescription>Closes #38105
</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38112</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix null reference error when opening a miscellaneous files file</Title>
    <PullRequestDescription>Fix #38111</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38110</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Bail out from couple of IDE analyzers in presence of OperationKind.None operations</Title>
    <PullRequestDescription>1. https://github.com/dotnet/roslyn/commit/49806932395686a392efea1236e2edd1b066c6f2: Bail out for unused parameters analyzer. Fixes #37988
2. https://github.com/dotnet/roslyn/commit/8a8629cbfd00c25456f43014d1061d9700ea0e0b: Bail out for unused private members analyzer. Fixes #33142</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38109</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Restore constraint checking for reduced extension methods.</Title>
    <PullRequestDescription>Before C# 8, the reduction of an extension method would fail (return null) when the
method's constraints would not be satisfied.  But in C# 8 the unmanaged constraint requires
we know the language version, and therefore the compilation, to check.  That is not available
in `IMethodSymbol.ReduceExtensionMethod`.  So we dropped the constraint checking in #37022.
However this causes an unfortunate regression in the quality of the IDE experience.  So here we
restore the constraint checking, using the compilation's language version when available.
IMethodSymbol.ReduceExtensionMethod uses the C# 8 rules since it has no language version to check.
Fixes #37780</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>25/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38107</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Show code instead of designer if the designer is not installed</Title>
    <PullRequestDescription>See dotnet/winforms-designer#458

This avoids showing an error page when the designer package is not installed, but doesn't prevent the "View designer" command from showing in Solution Explorer (the command will just show code in this case).</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38103</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VB: Support protected access for interface members.</Title>
    <PullRequestDescription>Closes #35827.</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38101</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix ChangeNamespaceService to handle member access references</Title>
    <PullRequestDescription>fix #37891

</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38094</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Revert test workarounds/skip for IDE diagnostic configuration code fixes</Title>
    <PullRequestDescription>Now that `EditorConfigDocumentOptionsProviderFactory.ShouldUseNativeEditorConfigSupport` is defaulted to true for everyone, we can remove the unit test workarounds and also unskip the integration test for it. Note that the first two commits are just reverts of workarounds added to prior PR that enabled these configuration fixes.

Fixes #36330</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38089</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview2.

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview2
git reset --hard upstream/release/dev16.3-preview2
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38080</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview2.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview2
git reset --hard upstream/release/dev16.3-preview2
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>17/08/2019</CreatedDate>
    <ClosedDate>18/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38079</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190816.16
- **Date Produced**: 8/17/2019 12:33 AM
- **Commit**: 0e36c2410b72166a1b9a67142e652225e22feada
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19416.16

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>17/08/2019</CreatedDate>
    <ClosedDate>17/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38077</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add missed space in markdown title</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>17/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38070</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't include unchangeable references as renamable references</Title>
    <PullRequestDescription>Fix feedback https://developercommunity.visualstudio.com/content/problem/682938/csharperenametrackingcodefixprovider-encountered-a.html

I tried an alternative approach @jasonmalinowski suggested, i.e. creating a more general helper like
```cs
Solution ExcludeDisallowedChange(Solution oldSolution, Solution newSolution);
```
However, simply replacing the text/syntax in new document with the one from old one doesn't seem to work, because later when we apply the change, it just check the ref equality of the old and new DocumentState in `GetChangedDocuments`. So I ended up having the "fixed" document still being flagged as changed.

---

@CyrusNajmabadi @heejaechang The repro I have is to rename a type referenced in a .cshtml file, when the cshtml file is not opened in editor. In that scenario, the corresponding .g.cs document contains an auto-generated syntax tree that has the reference, which is then found by SymbolFinder. The part I don't quite understand is that it seems whenever the .cshtml is opened, it's added to the project on the fly and removed when closed, as a result for the .g.cs file, the one with auto-gen syntax tree is replaced with one with empty tree when cshtml is opened (and replaced back when it's closed). Is this how Razor works? 

That said, it seems FAR can handle this regardless of whether cshtml is opened nor not, do you know where it is implemented? It seems to be a different path from `FindReferencesSearchEngine.FindReferencesAsync` that is used by `SymbolFinder.FindRenamableReferencesAsync`? If possible, I'd rather fix this by making rename use whatever implementation that supports FAR.</PullRequestDescription>
    <CreatedDate>17/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38067</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>17/08/2019</CreatedDate>
    <ClosedDate>17/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38064</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix Metadata as Source caching stale generated files</Title>
    <PullRequestDescription>We maintain a cache of assembly file names and symbols to the generated file. We failed to ever include a version of some kind, so if the metadata file changed on disk, you would continue to get the old generated file.

Commit-at-a-time is recommended; I first nullable annotated the feature before doing work in it.</PullRequestDescription>
    <CreatedDate>16/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38063</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Check nullability for delegate creation arguments</Title>
    <PullRequestDescription>Closes #37984

Note that the nullability mismatch checks were already happening for method groups and lambdas, but not for delegate arguments.</PullRequestDescription>
    <CreatedDate>16/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38056</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add generation for all IOperation nodes</Title>
    <PullRequestDescription>Almost all IOperation implementations in Microsoft.CodeAnalysis are now being generated. Exceptions are main NoneOperation, InvalidOperation, and the operations that involve dynamic, as we have a special base class they all inherit from internally that's used to implement some public API functionality. Unfortunately, as in the previous PR, I was unable to generate these new classes in-place. I've done some reordering of properties in the xml to make the constructors generate parameters in the same order as they did previously, but in a few cases that wasn't possible, and for those cases I've reordered parameters in other files. I've also standardized the names of the IConvertibleConversion properties, which caused a few renames in the code as well.

I've also added a verification step for the XML, to help prevent simple errors from being introduced. It will ensure that children have an explicit ordering if required, that operations follow naming conventions, that base types are correctly specified, and that summaries are appropriately included. @dotnet/roslyn-compiler please review.</PullRequestDescription>
    <CreatedDate>16/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38049</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Revert "Adding Null Checks For All Parameters"</Title>
    <PullRequestDescription>Reverts dotnet/roslyn#36931

It was merged into wrong branch, should have targeted 16.4 instead.

FYI @stcahlon @jinujoseph @vatsalyaagrawal </PullRequestDescription>
    <CreatedDate>16/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38046</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VSSDK update</Title>
    <PullRequestDescription>Cherry pick of https://github.com/dotnet/roslyn/pull/37767 into dev16.4-preview1-vs-deps
</PullRequestDescription>
    <CreatedDate>16/08/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38045</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Handle escaping of ref/out parameters on non-regular CFG exit paths (…</Title>
    <PullRequestDescription>…throw, unstructured exception handling, etc.)

Fixes #37709
Fixes #37871</PullRequestDescription>
    <CreatedDate>16/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38038</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove inaccessible attributes when generating code</Title>
    <PullRequestDescription>This removes inaccessible attributes from some codegen scenarios. This helps (generally) the case where there are NullableAnnotation attributes in metadata and we want to drop them. We still will also need to do targeted work to remove those _anyways_ if you have InternalsVisibleTo, but this helps those scenarios regardless.</PullRequestDescription>
    <CreatedDate>16/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38037</PullRequestID>
    <RepoID>1</RepoID>
    <Title>TypeImportCompletionItem.GetCompletionDescriptionAsync should not return null</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36381
At least I could not find other provider returning null.

@genlu please let me know if you see an option to add a unit test here.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38029</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update contribution instructions</Title>
    <PullRequestDescription>Commit at a time might explain the steps.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38027</PullRequestID>
    <RepoID>1</RepoID>
    <Title>updating debugger implementation SDK</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37997</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38025</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move to a new Windows pool</Title>
    <PullRequestDescription>One possible cause of our git clone issues is it seems to be specific to
the Windows 2017 pool. Trying out a new pool to see if the issues stop
reproducing there.

Further this pool doesn't have Visual Studio installed hence will
force our clean build scenarios</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38024</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Bump the Roslyn package version to 3.3.1</Title>
    <PullRequestDescription>We've published intermediate 3.3.0 packages for some early consumers,
so our final shipping version will be 3.3.1.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>17/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38023</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38021</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Completion Tests: Remove WaitForAsynchronousOperationsAsync from explicit calls in tests</Title>
    <PullRequestDescription>Just a refactroing
Fixes https://github.com/dotnet/roslyn/issues/33379</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>24/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38020</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Annotate SymbolInfo and TypeInfo</Title>
    <PullRequestDescription>I am leaving some constructors of SymbolInfo as taking a non-null symbol, since it appears callers do actually try to use SymbolInfo.None in those cases. As the compiler is annotated it may be necessary to change.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38015</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Mark more M.VS.LanguageServer.* packages as private packages</Title>
    <PullRequestDescription>These dependencies are provided by VS.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38014</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix crash in nullable Equals analysis</Title>
    <PullRequestDescription>Closes #38010.

/cc @agocke

This fixes a crash when we successfully resolve the overload of the Equals method being called but there are not enough arguments to it. In practice this means that only object.ReferenceEquals which is not overloaded would crash VS. Also fixes the same issue in CompareExchange analysis which could crash if it was only declared it with one overload.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38008</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix typo</Title>
    <PullRequestDescription>Fix typo and simplify switch</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38006</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38002</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix calls to WaitAndGetResult in Peek</Title>
    <PullRequestDescription>This is allowed to be called on the background thread (since that's how the editor API works), so let's mark it as such.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38001</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>38000</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Writing code to call a function using identifiers that don’t exist yet</Title>
    <PullRequestDescription>
Fixes https://github.com/dotnet/roslyn/issues/33667

Writing code to call a function using identifiers that don’t exist yet.

```
class Program
{
    static void Main ( string[] args )
    {
        var mySvc = new MyService(10, otherSvc, $$);
    }        
}

class MyService
{
    public MyService (int id, OtherService otherService, string name)
    {
    }
}

class OtherService
{
}
```

In this scenario I’ve just put the comma in the call to new MyService in Main. I now enter a variable name name that doesn’t exist yet. As soon as you hit space or a dot (because this is an object) then IS autocompletes to the name: parameter name. This isn’t what I wanted so I have to stop my typing, go back and correct to the variable (I haven’t defined yet) and then continue typing. In VS 2017 it doesn’t autocomplete to the parameter name. It does recognize that the parameter name is the best choice, it just doesn’t auto complete it.

**Expected by user**
`        var mySvc = new MyService(10, otherSvc, name);`
**Actual**
`        var mySvc = new MyService(10, otherSvc, name:);`</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>24/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37999</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37998</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>15/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37992</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make CompletionItem.InlineDescription public</Title>
    <PullRequestDescription>Fixes #37926 </PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37989</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37986</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37985</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VB DIM work</Title>
    <PullRequestDescription>- Do not require to implement a method representing a re-abstraction of an interface method from base interface. Closes #35823.
- Enable tests verifying that class is required to implement a virtual interface method. Closes #35820.
- Report an attempt to implement an inaccessible interface member. Closes #35824.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37983</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Ensure SplitStringLiteralCommandHandler is ordered after the completion handler</Title>
    <PullRequestDescription>Since we started using `RegexEmbeddedCompletionProvider`, we noticed a regression where completing on a suggestion, inserted a new line, instead of the suggestion. 

On VS for Mac, it seems that the command handlers are loaded in an order that causes that particular regression, and makes `SplitStringLiteralCommandHandler` the first one that is invoked. On Windows, this doesn't appear to be the problem. 

We filed our regression under: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/951939

Note: this same change was done here https://github.com/dotnet/roslyn/blob/5a12be6a4002fb2ffa3d8d2ecbe81d4bc30d213a/src/EditorFeatures/CSharp/BlockCommentEditing/BlockCommentEditingCommandHandler.cs#L23 to fix a similar problem. I've tested the fix manually by dropping the compiled DLL into our app package, and it does fix the problem. I'm happy to write more specific tests though, if anyone has a requirement/idea.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37978</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37977</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37976</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview2.

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview2
git reset --hard upstream/release/dev16.3-preview2
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37973</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move to new suppression state column in error list</Title>
    <PullRequestDescription>Platform team recently moved our Suppression State column down to Microsoft.VisualStudio.Shell.Framework. This change deletes Roslyn's implementation of this column and moves all the uses to now reference the column from the shell framework assembly.

1. https://github.com/dotnet/roslyn/commit/91535578b5c02686e9efecaeed2514d8d549f469: Updates our VS dependencies
2. https://github.com/dotnet/roslyn/commit/c3c9fa56646bf74220fa3a0bcae21111a6770a5f: Moves our VS layer to new suppression state column. Verified manually that the new Suppression state column works fine after installing the locally built Roslyn VSIX.

Fixes VSO RPS bug [#940318](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/940318) due to perf refression in C++ solution loading Roslyn from the error list due to the Suppression state column.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37972</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37971</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Added references to M.VS.LanguageServer.Client to the CSharp and VB client projects</Title>
    <PullRequestDescription>After marking Microsoft.VisualStudio.LanguageServer.Client a private vs package (in https://github.com/dotnet/roslyn/pull/37939), the dependency no longer travels with the package reference to M.VS.LanguageServices. So adding it directly to these two projects.

failing merge pr build https://dev.azure.com/dnceng/public/_build/results?buildId=307755&amp;view=logs for reference</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37970</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>14/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37969</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't offer to change the set if the parameter nullability is different</Title>
    <PullRequestDescription>Fixes #37181 </PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37968</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add a tool which generates a reasonable VB grammar facsimile from our syntactic model.</Title>
    <PullRequestDescription>Followup to https://github.com/dotnet/roslyn/pull/37840

This is the VB side of things.  Because VB's syntax model generation is so different, this got a little simpler in some places and a little more involved in others.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37967</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add diagnostic for nullable annotation used in generated code</Title>
    <PullRequestDescription>Resolves #37829 

We received feedback that it's confusing for nullable to be off by default in generated code even when it's enabled in the project. This PR adds a new diagnostic specifically to let users know that `#nullable enable` needs to be present in source to use nullable annotations in generated code.
</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37966</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make sure to keep nullability information when generating the new field</Title>
    <PullRequestDescription>Fixes #37182 </PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37965</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't show nullability analysis for value types or constant values</Title>
    <PullRequestDescription>Fixes #37157 </PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37964</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Ensure that OriginalXSymbols are copied over when enabling nullability.</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37879, https://devdiv.visualstudio.com/DevDiv/_workitems/edit/125970/. Previously, original symbols would not be preserved when rewriting for nullability, because these were ad-hoc fields that weren't part of BoundNodes.xml file. As a result, `CSharpSemanticModel.GetMethodGroupSemanticSymbols` thought that overload resolution succeeded when it actually failed, resulting in returning bad symbols from the compiler layer. This change puts these symbol lists into the actual xml, so they're copied during Update. These fields are only necessary for the semantic model, so they don't need to be updated in later compiler phases. To avoid changing massive amounts of code, I looked through the existing usages of the constructors and Update methods, fixed the ones from initial binding, and then added compat shims. @dotnet/roslyn-compiler for review. /cc @jasonmalinowski.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37963</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix IOperation for asynchronous using and foreach statements</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/30362

- add `IsAsynchronous` to `IUsingOperation` and `IForEachLoopOperation`
- add `IsAsynchronous` to `ForeachEnumeratorInfo`
- add missing awaits on invocations of `DisposeAsync()` and `MoveNextAsync()`
- correct references to `IDisposable` to be `IAsyncDisposable`</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37958</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37957</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into master.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37956</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update MS.CA.EditorFeatures2.UnitTests splitting</Title>
    <PullRequestDescription>This DLL should be marked for splitting in our test runner. When we did
the great assembly rename though this was missed. Fixing.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37955</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Support multiple insertion text property names</Title>
    <PullRequestDescription>This change fixes a bug where if the guest invokes completion in a Live Share session in a ts file and selects an IntelliCode completion, the star will also be inserted (e.g.  console.★ log).

We were previously trying to extract the insertion text on the completion item by looking at the "InsertionText" property. TS IntelliCode uses "InsertionText" for their property name.

This same change was made in the Live Share code base and was never migrated to Roslyn. See [here](https://devdiv.visualstudio.com/DevDiv/_git/Cascade/pullrequest/189799?_a=overview). </PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37954</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Couple of fixes in analyzer drive in presence of editorconfig configu…</Title>
    <PullRequestDescription>…ration

Fixes #37876

1. For analyzer diagnostics with Location.None, we now apply diagnostic configuration based on editorconfig files, as long as there is at least one configuration entry and there is no mismatch between configuration entries in different editorconfig files.

2. Analyzers which are disabled by default are now properly enabled when there is any editorconfig entry for its reported descriptor(s) that enables them.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37952</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Test ReadOnlySpan initialization from static data (#24621)</Title>
    <PullRequestDescription>Follow-up to #33088</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37948</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Bail out from emit in presence of warnings reported as errors</Title>
    <PullRequestDescription>Fixes #37779</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37946</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.2-vs-deps
git reset --hard upstream/release/dev16.2-vs-deps
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37945</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37944</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37943</PullRequestID>
    <RepoID>1</RepoID>
    <Title>changed our task center status bar to say "low priority background pr…</Title>
    <PullRequestDescription>…ocess" rather than "live analysis" to reduce confusion on what "live analysis" means since term "live analysis" has strong association with "errors" in VS.

also, it now shows ## of pending work and whether BG process is paused or not.

![evaluating](https://user-images.githubusercontent.com/1333179/62934474-81547880-bd79-11e9-9fcc-7c0f1769a5f0.gif)

fix https://github.com/dotnet/roslyn/issues/37751</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37942</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Support Go to Base for VB</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37941</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Refactorings ordering report applicableToSpan</Title>
    <PullRequestDescription>Work for #35525
Based on #37777</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37940</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into release/dev16.3-preview2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37939</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Mark M.VS.LanguageServer.Client as a private package</Title>
    <PullRequestDescription>New VS dependency should be marked as a private package.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37938</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37937</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37936</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37935</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.2-vs-deps
git reset --hard upstream/release/dev16.2-vs-deps
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37934</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37933</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37932</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37931</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview2.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview2
git reset --hard upstream/release/dev16.3-preview2
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37930</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview1
git reset --hard upstream/release/dev16.3-preview1
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37929</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix some constructor-related generation refactorings with top-level nullability</Title>
    <PullRequestDescription>Commit at a time may be useful here.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37922</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't synthesize a parameter list out of nowhere.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37920</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Learn from null coalescing to bool constants</Title>
    <PullRequestDescription>Resolves #37394 

Put intuitively: if the RHS of a `??` operator is a constant boolean `b`, we know that the value `!b` could only be produced by the LHS of the `??` operator being not-null.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37918</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Moving publish to separate stage</Title>
    <PullRequestDescription>This changes our publish phase to be in a separate stage. This is a part
of our long term plans around publishing and validation. Details are
available here:

https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/YamlStagesPublishing.md

Note: at this point source link validation is still disabled.  Source
link validation depends on an artifact named "BlobArtifacts". Unsure
what this is and what it maps to in our current build. Skipping it
until this is resolved.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37917</PullRequestID>
    <RepoID>1</RepoID>
    <Title>added api usage telemetry reporter</Title>
    <PullRequestDescription>for now, it only reports method calls and member references from metadata reference.

it reports data as hash value to protect privacy

event name:"vs/compilers/api"
property name:"vs.compilers.api.pii"

example as raw data
```json
{
    "AssemblyName": "nunit.framework",
    "AssemblyVersion": "3.12.0.0",
    "Symbols": [
        "M:NUnit.Framework.Assert.IsNull(System.Object)",
        "M:NUnit.Framework.Assert.IsNull(System.Object,System.String,System.Object[])",
        "M:NUnit.Framework.Assert.IsNotNull(System.Object)",
        "M:NUnit.Framework.Assert.IsNotNull(System.Object,System.String,System.Object[])",
        "M:NUnit.Framework.Assert.AreEqual(System.Object,System.Object)",
        "M:NUnit.Framework.Assert.Throws(System.Type,NUnit.Framework.TestDelegate)",
        "M:NUnit.Framework.Assert.IsInstanceOf``1(System.Object)",
        "M:NUnit.Framework.Assert.AreSame(System.Object,System.Object)",
        "M:NUnit.Framework.Assert.AreNotSame(System.Object,System.Object)",
        "M:NUnit.Framework.Assert.IsTrue(System.Boolean)",
        "M:NUnit.Framework.Assert.IsFalse(System.Boolean)",
        "M:NUnit.Framework.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])",
        "M:NUnit.Framework.Assert.IsTrue(System.Boolean,System.String,System.Object[])",
        "M:NUnit.Framework.Assert.Fail(System.String)",
        "M:NUnit.Framework.Assert.That``1(``0,NUnit.Framework.Constraints.IResolveConstraint)",
        "M:NUnit.Framework.Is.TypeOf(System.Type)"
    ]
},
{
    "AssemblyName": "System.Runtime",
    "AssemblyVersion": "4.2.1.0",
    "Symbols": [
        "M:System.String.Equals(System.String,System.String,System.StringComparison)",
        "F:System.StringComparison.InvariantCultureIgnoreCase",
        "M:System.Type.GetProperties",
        "P:System.Reflection.MemberInfo.Name",
        "M:System.Reflection.PropertyInfo.GetValue(System.Object)",
        "P:System.Type.IsArray",
        "M:System.Object.GetType",
        "P:System.Type.Namespace",
        "P:System.Array.Length",
        "M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)",
        "M:System.Exception.GetType",
        "P:System.Type.FullName",
        "P:System.Exception.InnerException",
        "P:System.Exception.Message",
        "P:System.ArgumentException.Message",
        "M:System.Func`1.Invoke",
        "P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName"
    ]
},
{
    "AssemblyName": "System.Linq",
    "AssemblyVersion": "4.2.1.0",
    "Symbols": [
        "M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})",
        "M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})",
        "M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})"
    ]
},
{
    "AssemblyName": "System.Collections",
    "AssemblyVersion": "4.1.1.0",
    "Symbols": [
        "M:System.Collections.Generic.Dictionary`2.Add(`0,`1)",
        "M:System.Collections.Generic.List`1.Remove(`0)",
        "M:System.Collections.Generic.List`1.Add(`0)",
        "M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)",
        "P:System.Collections.Generic.Dictionary`2.Item(`0)"
    ]
},
{
    "AssemblyName": "Moq",
    "AssemblyVersion": "4.10.0.0",
    "Symbols": [
        "F:Moq.MockBehavior.Loose",
        "M:Moq.MockFactory.VerifyAll",
        "P:Moq.Mock`1.Object",
        "M:Moq.Language.IReturns`2.Returns(`1)",
        "M:Moq.Mock`1.Setup``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})",
        "M:Moq.It.IsAny``1"
    ]
}
```

actual reported
```json
{
    "AssemblyName": "B00CBB99C7AD1B8302A8A56CC4D81EAB0EAE3237FA35F15BC81BFE1C15103558",
    "AssemblyVersion": "3.12.0.0",
    "Symbols": [
        "FC7288D3E102882FEB627087604D82CB4CFD65D0C2F367722BA904222D135B36",
        "EAD055AA8382711322EC709E19D8C2920B38D73077947B84171E846FB792A393",
        "F1E3A84994AEFA63262799CB058601EFA56CD9CA4B670E3C2E475B2099CEC9C1",
        "FE3CDBE48C24DEBEC38881F84CF7FF0FE04ED5D37C2270BE9BF59019ED9CF7D6",
        "CBB9AAFE5A4C40A9D18FFD158CCC18F4839D95A7A19885E2A88712CD0B8D9057",
        "8865B8936015A51EC59CB56E4D1520038120F53AD9E9C8920AA5F297CE9D2E1F",
        "7E65BB6F524EE071CF96D6092866FEC5D6FF2E9B77E24E655CFBCD8FDD9FAB86",
        "2B8FB21A52D4075E8BB80EF71A1E6D4C7E8DAA8EE5F3A118CAC5305ED01910FB",
        "6C390D680C321913DAE46B4C55E9C37E8E82CA19E917805F99D655FBBD188B85",
        "95A1A1AE79B0118AB9FB6D0587114761BD38D2D6D565AB45208DBDE16121E7A9",
        "926AD4568C052F6A44A7572624FB40D5932749A2FA635B08E635DD1FDE655348",
        "9F98E869840D62E3F869A41C86E1CDD838C8CDDEFC50D46D069BAEC71149BCE8",
        "EC7E48021E5F0E3F7E4B6DD3A2291DCC177C3A19E31F5CCAD0C911C24B844396",
        "0AF892A2E223A6C089576D5B6E04DBACB285BBFC963C04D96178280981A59CFA",
        "7D2746E249EC17CFB8B5602FEAE20911FD2438FEB1181503A3D50B003551F90C",
        "6BFB60B228F6E6925F0E98813AB2414DC4F0799EB0AC0DAE19DC0F53A86A40A9"
    ]
},
{
    "AssemblyName": "755A00E2209CC5A08A684312640532F759CACEA41842A20DB7B44A34FA091794",
    "AssemblyVersion": "4.2.1.0",
    "Symbols": [
        "2047A6B64AAF7876DE88CE027B997B20D257020A770A2B407E23A2B1469C3B50",
        "9FE010513CF684B1D568B48737D0CCBE145CD6F96A083378BEEDBA6B6734EFC1",
        "EC7A2378F2D3EC571BFB7CE2A21FD3FCB610FF6C9001EE9AA5DD7D5568E556CC",
        "A0019BCB221061EA12FFDE4340D1E89F45F09DC5FAF1E8B76973F27C771C5E28",
        "7D822C2A0D327145FDE606065031BF27F33663FC9AB687F4EA2FF0B9E0F23D9E",
        "B6E3658E79DCAADD8A515A8FFDB5BA779C85DAD661E06E0D5C7CC225D3D02076",
        "FA0E672464B0CF319BD40414198F86EEFEA6EEA42A9813BB40CF67B136298ED7",
        "93451E816BE5817D606ABE6210A7FCA063E27E7CBAB77F26794D8E7C1AEB5A3A",
        "2326AB074E340E7D6E5CA32EE2D3E2B5DD313D4FFCB6FE06D895A8E0E5B1DE46",
        "46A71DCECCFCB68BFD8725CFB455D7AF5A3E42044F00C6425F5C528976374004",
        "CD353CF4B68ABB1F8836214B361E28621B4E1E689D81AAB51C105FB162B672E8",
        "9086308DC05C12A9CB71A7FE7EC6FFA909504D1815C127328730670D1302AF6E",
        "C81EC12F474F47A22B916EF4C50ED4E968A1C58E900BF63231632227ECD2AC7D",
        "10F4911DDC12FFA495E8DB387679C3FB27C0FACF1F9E895204B1FF346B36C8AE",
        "1A4651B19FF455FD0FD8B732F834CA8B245EAD681D953F1E814AE554C3AEC204",
        "8604B966FCB4C51E5B1052C1DA0E782F049EECFE5F93EE57CBD3DF70A6C2B6F4",
        "4DBE8AAEB4740285DA6CB1F048D91CA7C960CF943802ED723B2A899D29A13B2B"
    ]
},
{
    "AssemblyName": "61E64AE41D59A10E45BCDF3E045CEBA28D0B8CF4D3C1FC10ABBB3F564C31268E",
    "AssemblyVersion": "4.2.1.0",
    "Symbols": [
        "16792284DE117911C005CD512ADF04607B8A8063463C2268D1EACFDD68C34CBE",
        "9F9EBF0DEC9001199119E8BEDE32CDE6F6A729AAF1B41ABD3A06FF1BB2329DE2",
        "ACDD06638D695D9740DF687F312A77C66DFDBF9D60D5214D0F2CDBA1BDB1E41E"
    ]
},
{
    "AssemblyName": "8F6E759B03470A70A9BA96C3D3758F8D065F1B12B7E4311E283CA87ED1646598",
    "AssemblyVersion": "4.1.1.0",
    "Symbols": [
        "745F434841F4DD4B1F33B947B9E8AACFDB32C59AF37C5AF4B6B9FD0A19E76298",
        "77AE1EF3DC4276CD70AB0B72E00D30F685A3EB7EC245E04FDA59BA2D81D7AFCA",
        "8BC33A6F63F6B0E435BC0F9058989EF38BB35E132FDE9137F75EDFA1E9674852",
        "880CA0E9B9A3A363AD04F8DEE9793415CE86C4396DA55F01990D5752ACD4245F",
        "ABEF878B25B69633BF7947B9F3F266BB5B4183B91F7958C39DFAD44620A68024"
    ]
},
{
    "AssemblyName": "11436EDE3A696F6E8273ADF47D39420467657B4798089E9B874E11C32BB00162",
    "AssemblyVersion": "4.10.0.0",
    "Symbols": [
        "FB630FEABDB8B3579904757F081BE9F222B691E4B3A3C5CFA4A3D8DB7A8E601E",
        "E6D6C591938D1FB8B6C80EE0BCB09C060D89162C5146C3DBBB501156CB17ACEF",
        "720FA49148B4714CCB7FC3B5C8C8EF5F151D0B65F66A688BE845CE81E564E341",
        "209E8174D9B77FB72B572C6E572434136E7DC04E9977AF209EF6B2AD5D561345",
        "FAF7CF9F079B0131886138A9D216129BB5548ADDB05358C3D98B040A47F67BE6",
        "AE47A0A7D57C63DB2F4BC2EBCBAE4431488EA483305284393FE349B8241A6E9C"
    ]
}
```
</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37916</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update partial load dialog string to better match task center.</Title>
    <PullRequestDescription>For https://devdiv.visualstudio.com/DevDiv/_workitems/edit/894041/

![p_load](https://user-images.githubusercontent.com/5749229/62890892-4448a180-bcf9-11e9-9b05-3ad95f616ddb.gif)
</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37915</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Reduce memory consumption for string concatenation from O(n^2) to O(n)</Title>
    <PullRequestDescription>Fixes #7398
Fixes #37572
Relates to https://github.com/aspnet/Razor/issues/614 and many other customer accomodations that are no longer needed.

History of this bug:  When constant folding a long sequence of string concatentations, there is an intermediate constant value for every left-hand operand.  So the total memory consumed to compute the whole concatenation was *O(n^2)*.  The compiler would simply perform this work and eventually run out of memory, simply crashing with no useful diagnostic.  Later, the concatenation implementation was instrumented so it would detect when it was likely to run out of memory soon, and would instead report a diagnostic at the last step. See https://github.com/dotnet/roslyn/commit/f177077665a5bef862014f1898b961d1759c9248.  Test `Bug529600()` was added to demonstrate that we produced a diagnostic.  However, the compiler still consumed *O(n^2)* memory for the concatenation and this test used to consume so much memory that it would cause other tests running in parallel to fail because they might not have enough memory to succeed.  So the test was disabled and eventually removed.  The compiler would still crash with programs containing large string concatenations, or consume huge amounts of memory and take a long time before reporting a diagnostic, so the underlying problem had not been addressed.

Here we have revised the implementation of constant folding string concatenations so that it requires *O(n)* memory and remove the old instrumentation.  As a consequence the test `Bug529600()` now runs very quickly and does not consume gobs of memory.
</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37914</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Allow implementation of virtual interface methods in VB.</Title>
    <PullRequestDescription>Closes #35821.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37912</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VB: Check for script context in '#R' directive recommender</Title>
    <PullRequestDescription>Fixes #37911.</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37906</PullRequestID>
    <RepoID>1</RepoID>
    <Title>LOC CHECKIN | dotnet/roslyn master | 20190812</Title>
    <PullRequestDescription>bugfix for
https://devdiv.visualstudio.com/DevDiv/_workitems/edit/957918</PullRequestDescription>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37900</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enum member formatting should follow csharp_space_around_declaration_statements</Title>
    <PullRequestDescription>Fixes #37030: Enum member formatting should follow csharp_space_around_declaration_statements</PullRequestDescription>
    <CreatedDate>11/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37898</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fixed parsing of generic types in property patterns</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/38121

This is the simplest way to fix https://github.com/dotnet/roslyn/issues/38121 that I could think of. Since an expression cannot begin with `{`, this should not affect any previously compiling code. (Though it might affect what syntax tree is produced for invalid code in some cases.)

Since this PR makes claims about what the (virtual) C# 8.0 spec contains, it might require the attention of the LDM.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37896</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>10/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37895</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update package heuristic to include other invalid directories.</Title>
    <PullRequestDescription>For https://github.com/dotnet/roslyn/issues/37246
Now looks like
&lt;img width="868" alt="install_package" src="https://user-images.githubusercontent.com/5749229/62816126-8b574c80-bad7-11e9-9961-735ddef8cbef.PNG"&gt;

Couldn't find any tests for this feature, let me know if there are some I'm missing.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37894</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Comparable helper to compare by components</Title>
    <PullRequestDescription>A helper to compare objects by a series of components. If the first component are different, return the comparison. Otherwise, proceed with the second component and so on.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37893</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Comparable helper to compare by components</Title>
    <PullRequestDescription>A helper to compare objects by a series of components. If the first component are different, return the comparison. Otherwise, proceed with the second component and so on.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>10/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37892</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix use explicit type and nullable-annotated array syntax generation</Title>
    <PullRequestDescription>Fixes #37877.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37889</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into release/dev16.3-preview2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37888</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37887</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview2.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview2
git reset --hard upstream/release/dev16.3-preview2
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>10/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37886</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview1.

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview1
git reset --hard upstream/release/dev16.3-preview1
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37885</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix and unskip nullable-reference-type related project upgrade test</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/30027</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37884</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move some ComputeRefactoringsAsync to common helpers 6/n</Title>
    <PullRequestDescription>Work for #35525</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37883</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Unskip test that was skipped during nullable prototype work</Title>
    <PullRequestDescription>It passes now; I'm guessing something was doing bad analysis at one point and saying something was nullable when it wasn't.

Fixes https://github.com/dotnet/roslyn/issues/30035</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37881</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add nullable API annotations to Project/ProjectInfo and friends</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37878</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move to new ilasm version</Title>
    <PullRequestDescription>The latest version of ilasm produced by coreclr is now a fully
independent executable; it no longer depends on having a full runtime
laid down next to it.

This means we can vastly simplify how it is deployde in our
infrastructure. The package can now be included and have ilasm manually
copied out. This is similar to the approach that we take for our
diasymreader native dependencies.

closes #37582
related #25930, #25144</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37867</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37866</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37865</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37864</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37863</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37859</PullRequestID>
    <RepoID>1</RepoID>
    <Title>UseExplicitTupleName: Avoid NullRefException on Rest field</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/23867</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37857</PullRequestID>
    <RepoID>1</RepoID>
    <Title>don't crash Vs because OOP lost its connection</Title>
    <PullRequestDescription>we can lose OOP connection due to many reasons such as user explicitly killing OOP process.

we have made that not to kill VS but this one place it looks like it can still crash VS.

this could be due to StreamJsonRpc now throwing ConnectionLostException rather than general RemoteInvocationException it used to throw for everything.

when we get connection lost exception we do the normal pattern. showing info bar asking users to restart VS and send NFW but move on.

one can use s_infoBarReported
http://source.roslyn.io/#Microsoft.VisualStudio.LanguageServices/Implementation/Remote/RemoteHostCrashInfoBar.cs,21

to see whether VS (dump) is in this mode.

address 
https://devdiv.visualstudio.com/DevDiv/_workitems/edit/962450
https://microsoft.visualstudio.com/DefaultCollection/OS/_workitems/edit/23069518
</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37855</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Improve syntax recovery for use of `;` instead of `,` in switch expression</Title>
    <PullRequestDescription>Fixes #34482</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37853</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37851</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add nullability information to extract method</Title>
    <PullRequestDescription>The general premise is to favor non nullable reference types when possible, but we need to use flow analysis to be sure. 

* Use analysis on all parameters to determine if they are ever assigned to null (if a ref parameter) 
* Analyze if a parameter is never null in reference locations
* Analyze all returns of a generated method to determine if null is possible
* Add, hopefully, enough comprehensive tests to cover a wide array of possibilities</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37844</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix speculation of AsNewClause in Rename Rewriter</Title>
    <PullRequestDescription>Another case of building a SpeculativeModel from an AsNewClause and the tree being speculating on being generated from an EqualsValue node. Causing the nodes being speculated on to not exist in the tree.

Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/941271</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37840</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add a tool which generates a reasonable C# grammar facsimile from our syntactic model.</Title>
    <PullRequestDescription>Ready for review.

This PR updates our Syntax.xml processing tool to generate a reasonable .g4 grammar which can be used by the team (and 3rd parties) to get a reasonable understanding of hte syntax supported by Roslyn without having to wait for all our specs to be updated and without having to actually look at the entire Syntax.xml file.

Note: the generated grammar (https://github.com/dotnet/roslyn/pull/37840/files#diff-2b6f98b9a71d0ace7649354169675100) tries to be clean and clear to serve as a source of understanding.  However, it is not intended to serve as the actual input to other tools that want to actually generate parsers.

For example, the generated parser is more lenient than one might want a grammar to sometimes be.  Indeed, it's as lenient as our Syntax.xml is, and it doesn't attempt to codify the subset of files that would be parsed with error by roslyn, but which could be produced by teh syntax factory.  In general, this isn't much of a problem and the grammar still provides valuable information despite this lack of strictness.  

One area that it is lacking in, which I would be interested in finding ways to improve in the future is the area of precedence.  Currently, for example, you will see rules like:

```
conditional_expression
  : expression '?' expression ':' expression
  ;

binary_expression
  : expression ('+' | '-' | '*' | '/' | '%' | '&lt;&lt;' | '&gt;&gt;' | '||' | '&amp;&amp;' | '|' | '&amp;' | '^' | '==' | '!=' | '&lt;' | '&lt;=' | '&gt;' | '&gt;=' | 'is' | 'as' | '??') expression
  ;
```

It would be really nice to instead generate:

```
conditional_expression
    | null_coalescing_expression '?' expression ':' expression
    ;

null_coalescing_expression
    : conditional_or_expression
    | conditional_or_expression '??' null_coalescing_expression
    ;

... rest of the binary expressions in precedence encoding ...
```

But i think that can come in the future and be out of scope for now.

--

I've also done this work for VB, but would like to do it in a separate PR to keep this PR small and focused.

Relates to https://github.com/dotnet/csharplang/issues/2640</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37839</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update patch version in 16.2</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37838</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix bounds in on header attr #37837</Title>
    <PullRequestDescription>Fix for #37837</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37836</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Do not go back to syntax to determine if a source-property was an explicit implementation.</Title>
    <PullRequestDescription>Fix for https://github.com/dotnet/roslyn/issues/37476

Sightly easier to review with whitespace diffs off.</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>11/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37831</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Clean up dead code (#36138)</Title>
    <PullRequestDescription>Fix #36138</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37828</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190816.16
- **Date Produced**: 8/17/2019 12:33 AM
- **Commit**: 0e36c2410b72166a1b9a67142e652225e22feada
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19416.16

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)



















</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>17/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37827</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix "fixed" keyword formatting (#37031)</Title>
    <PullRequestDescription>Fix for #37031</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37826</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make Syntax.xml choices slightly more explicit.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37823</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add target framework 'netcoreapp3.0' or replace target framework 'netcoreapp2.1' with 'netcoreapp3.0' when adding is not possible</Title>
    <PullRequestDescription>I've tried to build [dotnet/source-build](https://github.com/dotnet/source-build) which uses [dotnet/roslyn](https://github.com/dotnet/roslyn) on FreeBSD with a bootstrap CLI. Building `SoureBuild.sln` failed because it targets `netcoreapp2.1` on FreeBSD, which is not supported by the bootstrap CLI. Therefore, I've applied the patches mentioned in [dotnet/source-build#1139](https://github.com/dotnet/source-build/issues/1139#issuecomment-518646067) to build it on FreeBSD. To avoid destroying the build on other platforms, I've changed the target framework in the whole project to `netcoreapp3.0`, which is also a future goal, I think.
cc: @wfurt</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37822</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove inaccessible attributes when generating from the navigation bar</Title>
    <PullRequestDescription>When generating code from the navigation bar, we should remove inaccessible attributes, since there's no value in spitting code that won't build.

Fixes https://github.com/dotnet/roslyn/issues/37621 although perhaps not in the ideal way. We may also want to generally drop all nullable attributes when generating VB code, but that's being tracked by https://github.com/dotnet/roslyn/issues/30327 as there's some design questions still out.</PullRequestDescription>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37820</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update ownership of CompilerGeneratorTools to the compiler team</Title>
    <PullRequestDescription>Otherwise the infrastructure team gets tagged and that's not useful.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37819</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Simplify away nullable annotations in non-nullable contexts</Title>
    <PullRequestDescription>We can use the simplifer to clean up ? in places where it was auto-generated but isn't valid due to nullable context. Please review commit-at-a-time, as commits have additional comments.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37818</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Handle hoisted temporary variables of the switch expression pattern-matching machinery.</Title>
    <PullRequestDescription>Fixes #37713

Note that before this bug fix we produce bad code for the added tests (we fail to hoist a needed temp or hoist a restricted type).
</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37817</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37816</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37815</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37814</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37813</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.2-vs-deps
git reset --hard upstream/release/dev16.2-vs-deps
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37812</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37811</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into master.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37810</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview2.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview2
git reset --hard upstream/release/dev16.3-preview2
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37807</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Liveshare Lsp syntax classifications</Title>
    <PullRequestDescription>Create an experiment to run syntactic classification on the remote host to see what the experience is like.

Note that we will be following up with more treatments (textmate) and more services (indentation).</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37804</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Clear Major/MinorVersion to keep arcade from overwriting our VersionPrefix</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37803</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Disable interprocedural dataflow analysis for DisposableFieldsShouldB…</Title>
    <PullRequestDescription>…eDisposedDiagnosticAnalyzer

This should fix the performance issues reported in VS feedback tickets [#672009](https://developercommunity.visualstudio.com/content/problem/672009/live-analysis-eats-up-memory-resulting-in-vs-crash.html) and [#672909](https://developercommunity.visualstudio.com/content/problem/672909/live-code-analysis-extremely-slow-and-vs-2019-cras.html).</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37802</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add Containing Type and Containing Member columns to FAR</Title>
    <PullRequestDescription>Fixes #34336 

This PR adds 2 new columns to the FAR window: Containing Type and Containing Member.  
![GroupByContaining](https://user-images.githubusercontent.com/25776963/64829257-7fe8bc80-d580-11e9-8874-d334cab00904.gif)
</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37800</PullRequestID>
    <RepoID>1</RepoID>
    <Title>completion unit test for reduce extension method does not check type constraints</Title>
    <PullRequestDescription>Unit tests for https://github.com/dotnet/roslyn/issues/37780
Feel free to either update the PR with a fix or cherry pick the test into a new PR with the fix</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37795</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add support to use editorconfig for set severity command in the Analy…</Title>
    <PullRequestDescription>…zers node context menu

Fixes #37846
1. Renamed "Set Rule Set Severity" command to "Set severity". Also renamed "Info" and "Hidden" sub-menus to "Suggestion" and "Silent" respectively to align with our editorconfig severity terminology.
2. The set severity command handler checks if the project uses no ruleset or the default built-in ruleset, and if so it adds or updates editorconfig to configure severity. Otherwise, we continue using specified ruleset for configuration.
3. Updated the effective ruleset severity computation for the rule nodes under Analyzers node to account for severity settings from editorconfig (analyzer config documents).
4. https://github.com/dotnet/roslyn/pull/37795/commits/c15ca2fcfe26442efdc6d8ef86d31197e6df1e65 hooks up the `Set severity` context menu and functionality from error list. Executing the command creates/updates editorconfig file.

![image](https://user-images.githubusercontent.com/10605811/62746448-87a6c580-ba04-11e9-828c-048b4d06b091.png)

Follow-up work for subsequent PR:
1. Add a new right click menu command to Analyzers node to open active editorconfig for project (and create one if none exists) - similar to the existing "Open Active Rule Set" command for rulesets.
2. Hide the "Open Active Rule Set" command, unless the project already has a non-default non-built in ruleset.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37791</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Generate IOperation visitors and simple implementation classes</Title>
    <PullRequestDescription>This change builds on https://github.com/dotnet/roslyn/pull/37624, adding generation for the OperationVisitor and OperationVisitor&lt;TArg, TResult&gt; classes, and for simple IOperation implementation classes.

Commit 1: Adds generation for the OperationVisitor classes.
Commit 2: Cleans up OperationVisitor generation a bit, and adds generation for simple IOperation implementations. Currently, the only classes being automatically generated are classes whose `Children` property is an empty list, and therefore do not need lazy/non-lazy versions. Followup prs will add generation for these other types.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37787</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37786</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37785</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37784</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37781</PullRequestID>
    <RepoID>1</RepoID>
    <Title>move to new OperationProgress API.</Title>
    <PullRequestDescription>existing OperationProgress API responded to any design-time build event and we would like to restrict it to the only one that caused by solution load scenario.

for that, platform team added new API and we are moving to that API.

other design-time build events caused by things like "Active Configuration change" or "git branch" switch scenario will be considered in next PLM (partial load mode) iteration.

in current iteration, it is only for solution load. and we are still under experiment on this PLM.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37778</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove flighting and have a checkbox opt out of new .editorconfig support</Title>
    <PullRequestDescription>At this point, the flighting controls we have aren't really useful anymore: we want this on for everybody unless the opt out, and that opt-out would be specific to certain users that are running into issues with the new system to keep them unblocked. I'm keeping this a per- machine setting (that doesn't roam) because it's really repo or VS version specific.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37777</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Initial support for CodeRefactorings ordering.</Title>
    <PullRequestDescription>Work for: #35525</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37776</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37775</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview2.

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview2
git reset --hard upstream/release/dev16.3-preview2
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37774</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adding Skip to CSharpInteractiveCommands.VerifyPreviousAndNextHistory</Title>
    <PullRequestDescription>Pass rate is below 99% - https://github.com/dotnet/roslyn/issues/18779
</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37772</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Eliminate host dependence for constant folding floating-point to integral conversions.</Title>
    <PullRequestDescription>Fixes #37527
</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37771</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update CODEOWNERS</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37770</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix namespace incremental parsing bug</Title>
    <PullRequestDescription>There was a previous parsing change (#32999) which modified namespace
parsing to allow modifiers and attributes on namespaces, to improve
error recovery.

This PR contained a bug because it didn't move the incremental parsing
check to before parsing attributes and modifiers, which should now
be included in incremental parsing to prevent changes from being dropped

Fixes #37665, #37664, #37663</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37767</PullRequestID>
    <RepoID>1</RepoID>
    <Title>VSSDK update</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37766</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Create a UIContext triggered by projects in the VisualStudioWorkspace</Title>
    <PullRequestDescription>Sometimes other features need to light up if there's a C# or VB project present. A good example is some of the test tooling: they don't want to load their components with Roslyn unless somebody is also using the test tooling, but you don't want to accidentally load Roslyn if somebody is using the test tooling only for C++.

Fixes https://devdiv.visualstudio.com/DevDiv/_queries/edit/844761/</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37764</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Skip tests requiring legacy EditorConfig</Title>
    <PullRequestDescription>Now that the integration test vm images have been updated with the latest preview build of 16.3 these tests are consistently failing in runs for branches dev16.3-preview1 and earlier.</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37762</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Treat parameters and local variables as having the default state for their type before they are assigned.</Title>
    <PullRequestDescription>Fixes #36052
</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37761</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Publish Ngen logs separately</Title>
    <PullRequestDescription>The NGEN log files are published inside our "Build Diagnostic Logs"
container today. That is regularly around 160MB in size of which the
NGEN logs take up ~700K.

Been working on some automation / processing that is specific to NGEN
log files. Downloading the other 159MB is fairly wasteful and slow for
this automation. Publishing the NGEN files separately so I can make this
automation more effecient.</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37757</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove module scope from NullableContextAttribute</Title>
    <PullRequestDescription>Following https://github.com/dotnet/roslyn/pull/37610</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37754</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37753</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37752</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37750</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable EnC and PDB tests on Core</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37137
Fixes https://github.com/dotnet/roslyn/issues/37047
Fixes https://github.com/dotnet/roslyn/issues/33564 for PDBs</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>10/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37748</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix a couple bugs in ChangeNamespaceService </Title>
    <PullRequestDescription>1. Exclude documents we can't change from referenced documents for change namespace #37521 
2. Fix the ChangeNamespaceService so the reference in the form of member access is handled correctly #37891</PullRequestDescription>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37747</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Revert "Full-ngen ResultProvider"</Title>
    <PullRequestDescription>Reverts dotnet/roslyn#37186

Now that the debugger test is fixed, partial ngen EE ResultProvider again.

FYI @vatsalyaagrawal </PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37746</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37745</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37744</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37743</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.2-vs-deps
git reset --hard upstream/release/dev16.2-vs-deps
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37742</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37741</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37740</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37739</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview2.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview2
git reset --hard upstream/release/dev16.3-preview2
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37736</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37735</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37734</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37733</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37732</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37731</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37730</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into master.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37729</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update signing cert used for EE.ResultProvider - 16.4 P1</Title>
    <PullRequestDescription>duplicate of https://github.com/dotnet/roslyn/pull/37683 for the 16.4 preview1 branch</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37728</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update signing cert used for EE.ResultProvider - 16.3 P3</Title>
    <PullRequestDescription>duplicate of https://github.com/dotnet/roslyn/pull/37683 for the 16.3 preview3 branch</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37727</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update signing cert used for EE.ResultProvider - 16.3 P2</Title>
    <PullRequestDescription>duplicate of https://github.com/dotnet/roslyn/pull/37683 for the 16.3 preview2 branch</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37726</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Explicitly call BindExpression in GetSpeculativeSymbolInfo, instead o…</Title>
    <PullRequestDescription>…f Bind, to be sure that we don't return type expression info instead of actual expression info.

Fixes https://github.com/dotnet/roslyn/issues/37659.
/cc @ivanbasov.</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37723</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update LanguageServices dependencies</Title>
    <PullRequestDescription>Restore Microsoft.CodeAnalysis.InteractiveHost the private assets attribute that was added in https://github.com/dotnet/roslyn/pull/34728

Fixes https://github.com/dotnet/roslyn/issues/37296 &amp; https://github.com/dotnet/roslyn/issues/36056#issuecomment-518046714</PullRequestDescription>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37718</PullRequestID>
    <RepoID>1</RepoID>
    <Title>UseExpressionBody cleanup</Title>
    <PullRequestDescription>I have this in another branch that I'm still working on, but I thought a separate PR would make reviewing easier.

See commit messages.

/cc @CyrusNajmabadi who wrote the original code</PullRequestDescription>
    <CreatedDate>04/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37716</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>04/08/2019</CreatedDate>
    <ClosedDate>04/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37715</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>04/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37714</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>04/08/2019</CreatedDate>
    <ClosedDate>04/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37711</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Permit stackalloc to be used in an async method as long as it need not be spilled.</Title>
    <PullRequestDescription>Fixes #37461</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37707</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190807.9
- **Date Produced**: 8/7/2019 11:00 PM
- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19407.9

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)











</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37706</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37705</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37704</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>04/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37702</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37701</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/NullableDogfood</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/NullableDogfood.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/NullableDogfood
git reset --hard upstream/features/NullableDogfood
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/NullableDogfood --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37700</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37699</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37698</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37697</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37696</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 into master</Title>
    <PullRequestDescription>This config was missing from the automerge</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37695</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37694</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37693</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37691</PullRequestID>
    <RepoID>1</RepoID>
    <Title>UniqueItem is not triggered when completion is initiated by backspace</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37231</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37690</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Skip BasicEditAndContinue integration tests that are failing</Title>
    <PullRequestDescription>Step one of https://github.com/dotnet/roslyn/issues/37689</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37688</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37687</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37686</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Revert "Activate editor after pausing the debugger"</Title>
    <PullRequestDescription>This reverts commit cb4b485aa7f3ef92cec018a0efa74cee646a44d8.</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37684</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make it clear in Syntax.xml when fields are exclusive of each other.</Title>
    <PullRequestDescription>This is a followup to https://github.com/dotnet/roslyn/pull/37674.  It will be easier to review once that goes in.

This is my **final** PR related to tweaking syntax.xml.    I'm at a happy point now.  

This PR adds some helper annotation nodes into the tree to make the relationship between different field-nodes in a type clearer.  For example, instead of just saying `a lambda has an optional block, or an optional expression`, the syntax now says `a lambda has either a block or an expression`.  This helps more clearly indicate that you really don't expect legal syntax to have neither of these, nor do you expect legal syntax to have both of them.

This is useful for some downstream tooling.  Specifically, it means we can generate better g4 productions like:

```g4
lambda_expression
  : parenthesized_lambda_expression
  | simple_lambda_expression
  ;

parenthesized_lambda_expression
  : 'async'? parameter_list '=&gt;' (block | expression)
  ;

simple_lambda_expression
  : 'async'? parameter '=&gt;' (block | expression)
  ;
```

instead of

```g4
lambda_expression
  : parenthesized_lambda_expression
  | simple_lambda_expression
  ;

parenthesized_lambda_expression
  : 'async'? parameter_list '=&gt;' block? expression?
  ;

simple_lambda_expression
  : 'async'? parameter '=&gt;' block? expression?
  ;
```</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37683</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update signing cert used for EE.ResultProvider</Title>
    <PullRequestDescription>Move off SHA1 cert</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37680</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update syntax document to better indicate when we expect a list to have at least one element in it.</Title>
    <PullRequestDescription>Tagging @gafter .  This helps with a piece of work i'm trying to contribute to roslyn where we can generate an g4 grammar like so from our syntax model: https://gist.github.com/CyrusNajmabadi/412c3209d1ce97236420218498e7c8d4

While not strictly necessary, this helps me generate cleaner and clearer code since we can replace stuff like:

```g4
attribute_list
  : '[' attribute_target_specifier? (attribute (',' attribute)*)? ']'
  ;
```

With the nicer, simpler and clearer:

```g4
attribute_list
  : '[' attribute_target_specifier? attribute (',' attribute)* ']'
```

Similarly, `AllowTrailingSeparator` means we can generate:

```
initializer_expression
  : '{' (expression (',' expression)* ','?)? '}'
  ;
```

Which is accurate, unlike:

```
initializer_expression
  : '{' (expression (',' expression)*)? '}'
  ;
```

Which is not (since it implies that `var v = { 1, 2, 3, }` is not legal.  We could a trailing optional comma in all productions.  But that wouldn't be very nice or representative of what the language actually thinks.  </PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37679</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Delete some dead code in analyzer driver</Title>
    <PullRequestDescription>`SIMULATED_EVENT_QUEUE` was an experimental approach for populating compilation event queue for IDE open file analysis. It is no longer been used or experimented.

Fixes #37434</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37674</PullRequestID>
    <RepoID>1</RepoID>
    <Title> Switch to a strongly typed version of anonymous-function syntax nodes for their "body"</Title>
    <PullRequestDescription>Instead of effectively having a property `SyntaxNode Body` we have a pair of `BlockSyntax Block` and `ExpressionSyntax ExpressionBody`.  This brings anonymous-functions in-line with the MethodDeclaration nodes that have a similar shape.</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37672</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/ide-cleanup</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/ide-cleanup.

``` bash
git fetch --all
git checkout merges/master-to-features/ide-cleanup
git reset --hard upstream/features/ide-cleanup
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/ide-cleanup --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>02/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37671</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>02/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37670</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>02/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37669</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>02/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37668</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37666</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix our MSB3270 warnings</Title>
    <PullRequestDescription>This is a port of PR #37646 into the master branch. </PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37658</PullRequestID>
    <RepoID>1</RepoID>
    <Title> Optimize memory allocation of LCS algorithm</Title>
    <PullRequestDescription>Consolidate allocations of many small int arrays to a few allocations of larger buffers.
Pool buffers.

Fixes https://devdiv.visualstudio.com/DevDiv/_queries/edit/947470/?triage=true</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>02/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37652</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37651</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37650</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37649</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37648</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge features/ide-cleanup back into master</Title>
    <PullRequestDescription>Merges all commits from https://github.com/dotnet/roslyn/tree/features/ide-cleanup back into master

</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37647</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update roslyn/features/ide-cleanup with the latest contents of master.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37646</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix our MSB3270 warnings</Title>
    <PullRequestDescription>There are a few parts to this change:

1. Ensure that MSB3270 and MSB3277 warnings are promoted to errors in CI
and hence block merging.
1. Move our DiaSymReader.Native logic into a separate targets file.
This resource cannot be consumed with a simple package reference but
rather requires a package reference and custom logic to pull out the
contained binaries. This logic used to be spread through our build. Now
it's in a single place.
1. Remove the x86 bootstrapping logic. This was testing a pretty obscure
scenario and the cost of maintaining that logic is siginificant at this
point. Can bring back if we ever find a bug in this area.

The root cause of the MSB3270 warnings is a subtle change in the SDK. It
now passes the runtime graph to NuGet for native assets. In the case of
DiaSymReader.Native there are runtime specific assets hence the SDK /
NuGet had to pick one for framework projects. This eventually lead to
`PlatformTarget` being set to x86 where it shoud have been AnyCPU.

Part of the change includes adding `ExcludeAssets=all` to the package
reference which means they no longer figure into this logic and hence
the binaries are marked as AnyCPU.

This regression in behavior is being tracked by
https://github.com/dotnet/sdk/issues/3495</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37645</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge features/ide-cleanup into master.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37644</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>02/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37643</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to features/razorSupport2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into features/razorSupport2.

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-features/razorSupport2
git reset --hard upstream/features/razorSupport2
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-features/razorSupport2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37642</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37641</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move comment to correct line of code</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37640</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix using statements to use correct copy of PooledObjects</Title>
    <PullRequestDescription>The Microsoft.CodeAnalysis.FlowAnalysis.Utilities assembly which we consume accidentally made it's copy of the PooledObjects helper public. That copy has a different namespace, so by using the wrong namespace we were pulling in that assembly's copy rather than using the copy we have in our assembly. This causes us to do an early assembly load when it's absolutely not necessary.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37638</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add an integration test for #37623</Title>
    <PullRequestDescription>Adds a typing integration test for https://github.com/dotnet/roslyn/pull/37623. Primary bug fixed in the PR: VSO [#957250](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/957250)

I verified that the test fails consistently without the fix in #37623 and passes consistently after the fix.

**NOTE:** https://github.com/dotnet/roslyn/pull/37638/commits/a9016164d74326db02f8596862e291a7e00d7e33 is just a cherry-pick from `release/dev16.3-preview2` branch. This is a test-only PR with https://github.com/dotnet/roslyn/pull/37638/commits/0d4753ecf0d9b3bffc6d7d8aeba2d02abb93b1ac as the only relevant commit.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37637</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37636</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37635</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37634</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37633</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview1
git reset --hard upstream/release/dev16.3-preview1
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37632</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move DiaSymReader.Native logic to targets file</Title>
    <PullRequestDescription>Will update with real description once I verify this actually works.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37631</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Consume the new compiler API for comparing symbols without nullability</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36044</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37630</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Deserialize to VSClientCapabilities</Title>
    <PullRequestDescription>Deserialize `ClientCapabilities` to `VSClientCapabilities` to get the available additional properties, e.g. `SupportsVisualStudioExtensions`.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37629</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Codefix and Code Refactoring for making local functions static</Title>
    <PullRequestDescription>Codefix: Passes in variables explicitly when static limits the scope of the variables within local functions @GovernessS  

Code Refactoring: Suggests to make the local function static and also passes in the variables explicitly to avoid errors @lavanyaguru  

#35136 and #35135 </PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>17/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37628</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update some skip attributes on TypeInferrer tests</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37627</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Consume the new IMethodSymbol.Construct overload that takes nullability</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37626</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix our MSB3270 warnings</Title>
    <PullRequestDescription>This has two changes:

- Elevates MSB3270 and MSB3277 to errors in our build
- Fixes the existing MSB3270 warnings in our code

SDK behavior change link: https://github.com/dotnet/sdk/issues/3495</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37624</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Generate IOperation Interfaces and OperationKind enum</Title>
    <PullRequestDescription>I've had generating IOperations on my backlog for a long time now, and as part of ripping out the laziness in IOperation I think it's a good time to finally accomplish it. This is the first in a series of PRs to accomplish this, generating _just_ the IOperation interfaces themselves and the OperationKind enum.

I highly, highly, highly, super highly, seriously recommend reviewing this commit by commit:
* Commit 1 introduces the generation structure and generates the interfaces and enum _in place_. This allows for easy diffing of the changes that the generator makes compared to the existing definitions. By an large it's just whitespace, with a couple of small comment changes. No binary changes were introduced.
* Commit 2 moves the generated output from being in the original files to being in 3 files, one for each namespace we're generating. It also enables verification like we have for the bound nodes, so if changes are made to the files or the xml we'll get a CI error.

@dotnet/roslyn-compiler for review. /cc @mavasani @genlu.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37623</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix typing crash during open file analysis</Title>
    <PullRequestDescription>Customer and scenario info
============================

**Who is impacted by this bug?**
Typing in C#/VB projects.
**NOTE:** This change only affects the IDE open file analysis code path. [CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsAsync](http://source.roslyn.io/#q=GetAnalyzerSemanticDiagnosticsAsync) is never invoked from the batch compiler.

**Bugs Fixed**
Fixes P0 VSO bugs [#957250](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/957250) and [#957243](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/957243)
Fixes #37567

**What is the customer scenario and impact of the bug?**
C#/VB developers typing in a source file with partial types that have partial type declarations across multiple files. When cancellation is triggered while typing, it leads to a crash with stack overflow exception.

**What is the workaround?**
None.

**How was the bug found?**
Crashes seen in RPS/DDRIT test failures

**If this fix is for a regression - what had regressed, when was the regression introduced, and why was the regression originally missed?**
My previous PR #37303 to improve IDE open file analysis performance led to a functional regression where attempting to compute open file diagnostics for a partial type leads to recursive attempt to force complete all partial trees, which in turn attempt force completion of original tree. In presence of cancellation request, this leads to a stack overflow and VS crash. The fix here ensures that we don't attempt partial tree analysis when invoked in context of partial analysis itself.

**Testing**
I have manually verified the crash before the fix and verified it does not repro after the fix. I am working on adding an integration test for the scenario with a follow-up commit/PR.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37622</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Formatting updates for C# 8</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37620</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update NuGet Dependencies in Release/dev16.2-vs-deps</Title>
    <PullRequestDescription>Need to flow the release dependencies into vs-deps to create new signed packages.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37619</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make Microsoft.CodeAnalysis.Analyzers reference conditional in source-build.</Title>
    <PullRequestDescription>/cc @dseefeld.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37615</PullRequestID>
    <RepoID>1</RepoID>
    <Title> Recognize existing GlobalSuppressions.cs when it has a using directive </Title>
    <PullRequestDescription>Fixes #37530</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37614</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Semantic model variable is never used</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37613</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Improve error priorities in case of using static class as a generic argument (#36203)</Title>
    <PullRequestDescription>Fix for #36203.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37612</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190806.7
- **Date Produced**: 8/7/2019 12:08 AM
- **Commit**: c155e609f88491128e1a66d09f413062f3344d4b
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19406.7

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)















</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37611</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37610</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove AttributeTargets.Module from NullableContextAttribute</Title>
    <PullRequestDescription>The C# compiler does not support module-level `NullableContextAttribute`. This change updates the spec-let and the `AttributeTargets` on the embedded attribute definition to reflect that.
</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37609</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix trailing whitespace and superfluous blank lines in generated GlobalSuppressions.cs</Title>
    <PullRequestDescription>Fixes #37529

Each thing is fixed with a pair of commits, one to add the failing test and the next to make all tests pass again.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37608</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.3-preview2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37607</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add back typescript gotodef on the client.</Title>
    <PullRequestDescription>Missed copying the typescript client export for goto def.  adding back so that TS liveshare clients can gotodef.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37606</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37605</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37604</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>31/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37602</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't show nullability information in quick info if it's not enabled</Title>
    <PullRequestDescription>We don't have this scenario fully polished and it can often be more confusing because the information shown won't always be useful or accurate.

Fixes https://github.com/dotnet/roslyn/issues/37314</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37600</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Backported fix for #37584 to 16.3-preview2</Title>
    <PullRequestDescription>Customer and scenario info
=============================
**Who is impacted by this bug?**
Typing for C#/VB developers which leads to erroneous broken code 

**Bugs fixed**
Fixes #37584

**What is the customer scenario and impact of the bug?**
Typing in C#/VB source files such that the file has syntax errors leads to the underlying exception firing in shared code refactoring service.

**What is the workaround?**
None

**How was the bug found?**
Dogfooding

**If this fix is for a regression - what had regressed, when was the regression introduced, and why was the regression originally missed?**
This is a regression from previous inserted Roslyn bits. We have been building on a core refactoring service that will be shared by all the C#/VB refactorings for improved discoverability of refactorings. This service is backed by large number of unit tests for existing refactorings, but the scenario failing here is erroneous broken code while typing.

**Testing**
We have added the necessary regression tests for this bug in this PR.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37598</PullRequestID>
    <RepoID>1</RepoID>
    <Title>EnC for nullables editing tests with lambdas</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37596</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix conversions on default literals</Title>
    <PullRequestDescription>This PR fixes two problems with `default` literal (from C# 7.1):
- from a language perspective, we should not have re-used the "null literal conversion" (which is specifically a conversion from the `null` literal to a nullable value type), so I'm introducing a "default literal conversion" (conversion from the `default` literal to any type)
- from a binding perspective, whenever a `default` was getting converted, we would incorrectly give it a natural type. This PR follows Neal's recent PRs by having a `BoundDefaultExpression` and a `BoundConvertedDefaultExpression`. This affects some scenarios
  1. `default as TClass`: becomes an error
  2. `$"{default}"`: use `object` as target-type for expressions that don't have a natural type
  3. `using (default) ...`: becomes an error
  Also, during return type inference of lambdas, expressions are neither required to be target-typed or to have a natural type.
- `x == default` will no longer bind as object equality.

But I reverted the part of this PR which affected public APIs (`.Type` in particular) because it had significant effect on the IDE (and therefore likely other consumers).

Fixes https://github.com/dotnet/roslyn/issues/31029
Fixes  https://github.com/dotnet/roslyn/issues/18609
Fixes https://github.com/dotnet/roslyn/issues/35684 and https://github.com/dotnet/roslyn/issues/36492 (incorrectly emitting `default` as `null`, missing error, fix is a breaking change)
Fixes https://github.com/dotnet/roslyn/issues/30384

Relates to https://github.com/dotnet/roslyn/issues/22125

Opened issue tracking spec changes: https://github.com/dotnet/roslyn/issues/37821

Update: this breaking change was later adjusted in 16.4p2.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>25/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37594</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add nullable annotations to speculative model creation and update code for bug found</Title>
    <PullRequestDescription>Commit at a time recommended, since this also changes the exception type we might throw in some case.

This isn't actually fixing any bug; this is just me cleaning up some code that I had to spend trying to decipher.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37592</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps
git reset --hard upstream/release/dev16.4-preview1-vs-deps
git merge upstream/release/dev16.4-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37591</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37590</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview2-vs-deps
git reset --hard upstream/release/dev16.3-preview2-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37589</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to release/dev16.4-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into release/dev16.4-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-release/dev16.4-preview1
git reset --hard upstream/release/dev16.4-preview1
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-release/dev16.4-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37588</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add tests for RefaHelpers with empty Attributes / empty decls. </Title>
    <PullRequestDescription>Add regression tests for #37584</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37587</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Some Inline Rename accessibility improvements</Title>
    <PullRequestDescription>1. More descriptive text when an Inline Rename session begins to let the user know:
    - The name of the identifier being renamed
    - More options exist, and you can access them by invoking inline rename again
    - That the identifier being renamed can be edited at any time
2. Keyboard tabbing around the dashboard now skips invisible controls
3. The Apply and Cancel (X) buttons now read automation text correctly</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37586</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37585</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Added language check to null-checked parameters in parsing</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37583</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Handle checking for language version in speculative semantic model</Title>
    <PullRequestDescription>Asking for Location.SourceTree may not produce a syntax tree, even if there
is a backing syntax tree, because a speculative tree node may produce NoLocation
when asked for one, even if there is a backing tree. This change stops us from
trying to do the SyntaxTree-&gt;Location-&gt;SyntaxTree roundtrip because it's not guaranteed
to succeed.

Fixes #37454

(cherry picked from commit 83e8f8f0602aecf68dd257ea24b0b4817d842f72)</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37571</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37570</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37569</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37568</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37560</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37559</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.2-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.2-vs-deps
git reset --hard upstream/release/dev16.2-vs-deps
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37558</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview1.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview1
git reset --hard upstream/release/dev16.3-preview1
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37547</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37546</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>30/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37545</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge from features/compilerNext to release/dev16.4-preview1</Title>
    <PullRequestDescription>Current code as of ~3:45pm. I'll do another check at the cutoff</PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37543</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Introduce IDisposable to ArrayBuilder.</Title>
    <PullRequestDescription>- Moved just _a few_ uses to `using ...` from `ToXXXAndFree` / `Free` (there are &gt;&gt; 500)
- Already found &amp; fixed one leak</PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37542</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Simplify code generation options code</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37541</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use expr/block body lambda simplification</Title>
    <PullRequestDescription>Our current approach around supplying triples of analyzers/fixers/refactorings is pretty brittle and error prone.  i.e. we may have a user option like "i like expression bodied lambdas".  However, based on that option we have to have analzyers that report the appropriate severity for the option.  We then need fixers that respect that severity (including when it's set to 'refactoring only').  We then need refactorings to look for the *opposite* direction to go in (since people can swithc to/from the desired form when they want).  The refactoring and analyzer shouldn't interfere with each other (i.e. we don't want two things to show up), etc. etc.

Getting this right is challenging, and we've done in wrong a number of times (i.e. "use explicit/var type").  This has also come up because a community member wants to provier the refactoring that can switch you from `a ? b : c` to `if (...)` form (since we have hte opposite already, but no way to switch back). Having to reinvent all this logic is difficult and difficult to properly test.

As such, this PR includes a simple *internal* scaffolding to make that easy and also moves the "use expression body lambdas" feature over to using it.

</PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37540</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Introduce IDisposable to ArrayBuilder</Title>
    <PullRequestDescription>Introduced IDisposable to ArrayBuilder to enable `using ….` pattern. ~Already found one leak. Only 2296d68 is new commit, the rest is from #37295~ Rebased.</PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>29/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37539</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use simpler null checks</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37538</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Snap 16.3-preview2</Title>
    <PullRequestDescription>Prepare for snap on 16.3-preview2 </PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37537</PullRequestID>
    <RepoID>1</RepoID>
    <Title>EE: Do not trim comments from expression preceding a quote</Title>
    <PullRequestDescription>Workaround to address https://dev.azure.com/devdiv/DevDiv/_workitems/edit/847849.

The real fix would be https://github.com/dotnet/roslyn/issues/37536 but it is much more involved.</PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37535</PullRequestID>
    <RepoID>1</RepoID>
    <Title>LambdaRewriter.SubstituteTypeArguments should make progress (#37487)</Title>
    <PullRequestDescription>Fix https://github.com/dotnet/roslyn/issues/37456 in 16.2 by cherry-picking commit a0009846c2bafedf2524f41aea2792157615a210 (from PR https://github.com/dotnet/roslyn/pull/37487)</PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37534</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update version of ICSharpCode.Decompiler and M.CA.FlowAnalysis.Utilities</Title>
    <PullRequestDescription>Move to release versions. This does not need to be inserted, but will be used to generate new build of Roslyn packages.</PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37526</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Warn when inlining a temporary into a conditional</Title>
    <PullRequestDescription>I had a suggestion to inline a temporary into a Debug.Assert, which would have semantically changed the meaning of the program, since the expression would not have been called in Release.

The suggestion was to change:
```csharp
var x = stack.Pop();
Debug.Assert(x == this);
```
to
```csharp
Debug.Assert(stack.Pop() == this);
```

Inline temporary expression can often change semantics, but in this case I think it is worth warning about, since it's impossible to tell semantics have changed without inspecting the method being called. In the above case the two have identical semantics in Debug (assuming `stack` is a local).

Here is the warning:

![image](https://user-images.githubusercontent.com/29174528/62050033-65dd5f80-b208-11e9-9d13-063d1ec7707f.png)

I only warn when the expression is being inlined into a single location, with the assumption being that if an expression is being inlined into multiple locations, it presumably doesn't matter how often it is called, and is probably side effect free from the perspective of the caller.

This change required moving MethodSymbol.IsConditional to the public API - I don't know if this is a problem, since it can trigger binding.</PullRequestDescription>
    <CreatedDate>29/07/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37525</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove unneeded method</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>28/07/2019</CreatedDate>
    <ClosedDate>29/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37524</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Extract readonly method</Title>
    <PullRequestDescription>Resolves #34647</PullRequestDescription>
    <CreatedDate>28/07/2019</CreatedDate>
    <ClosedDate>11/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37520</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/07/2019</CreatedDate>
    <ClosedDate>29/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37519</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37518</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use MaxSupportedLangVersion in CSharpUpgradeProjectCodeFixProvider</Title>
    <PullRequestDescription>When determining if a project can be upgraded, use the newly provided MaxSupportedLangVersion property that can identify if the project can correctly be upgraded to the necessary language version. </PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37516</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Handle speculation for AsNewClause by generating an EqualsValue node</Title>
    <PullRequestDescription>CreateSpeculativeSemanticModelForNode will create a speculativeModel from a generated EqualsValue node already, but the Type node we are searching for won't be part of the tree. So we generate the EqualsValue node instead and find the Type node so that we can get symbol information.

Fixes #23807</PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37513</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Handle checking for language version in speculative semantic model</Title>
    <PullRequestDescription>Asking for Location.SourceTree may not produce a syntax tree, even if there
is a backing syntax tree, because a speculative tree node may produce NoLocation
when asked for one, even if there is a backing tree. This change stops us from
trying to do the SyntaxTree-&gt;Location-&gt;SyntaxTree roundtrip because it's not guaranteed
to succeed.

Fixes #37454</PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37512</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Nullable annotations in IDE code</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37507</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Report WRN_UninitializedNonNullableField for uninitialized static members</Title>
    <PullRequestDescription>Fixes #34668</PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>28/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37497</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to demos/records</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into demos/records.

``` bash
git fetch --all
git checkout merges/master-to-demos/records
git reset --hard upstream/demos/records
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-demos/records --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37493</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't drop a token passed to a syntax factory method.</Title>
    <PullRequestDescription>Fixes #37467

@dotnet/roslyn-compiler May I please have a couple of reviews for this one-line bug fix for 16.3?
</PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37492</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Support GetDeclaredSymbol on ForeachStatementSyntax and add tests for…</Title>
    <PullRequestDescription>… deconstruction as well. @dotnet/roslyn-compiler for review, /cc @jasonmalinowski @ryzngard.</PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37490</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37489</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>26/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37488</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use signature return type to determine task type in NullableWalker</Title>
    <PullRequestDescription>`_methodSignatureOpt.ReturnType` might differ from `((MethodSymbol)_symbol).ReturnType` in the case of errors in method inference with lambdas.

Fixes #37269</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37487</PullRequestID>
    <RepoID>1</RepoID>
    <Title>LambdaRewriter.SubstituteTypeArguments should make progress</Title>
    <PullRequestDescription>Fix https://github.com/dotnet/roslyn/issues/37456

@gafter Looking back at https://github.com/dotnet/roslyn/pull/35284, I still think the use of reference equality is correct, but I want to check with you in case you think we should return to the original `.Equals(..., ConsiderEverything)` comparison.</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37486</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Simplify readonly MetadataAsSource</Title>
    <PullRequestDescription>I felt that including the 'readonly' keyword when the containing type is already readonly introduces too much noise. Note that:

1. by design we already don't emit the readonly attribute on methods/properties/events within readonly structs for a similar reason (attributes excessively increase the size).
2. we already have a similar behavior for Quick Info (show the 'readonly' modifier on the method/property/event only if the containing type is not readonly)

Before (many members omitted for brevity):
&lt;img width="433" alt="readonly-mas-1" src="https://user-images.githubusercontent.com/5833655/61908307-3ff04c00-aee4-11e9-810b-0c09ee872db3.PNG"&gt;

After:
&lt;img width="377" alt="readonly-mas-2" src="https://user-images.githubusercontent.com/5833655/61908932-b04b9d00-aee5-11e9-8776-462d7dee35a4.PNG"&gt;
</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>27/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37485</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adjust ngen priority of assemblies for perf gains</Title>
    <PullRequestDescription>These changes support an effort to improve VS performance after an update by tuning the assemblies ngen'd during setup.

After this change, the following assemblies should be ngen'd at priority 1:

common7\ide\commonextensions\microsoft\managedlanguages\vbcsharp\languageservices\microsoft.codeanalysis.csharp.dll
common7\ide\commonextensions\microsoft\managedlanguages\vbcsharp\languageservices\microsoft.codeanalysis.dll
common7\ide\commonextensions\microsoft\managedlanguages\vbcsharp\languageservices\microsoft.codeanalysis.features.dll
common7\ide\commonextensions\microsoft\managedlanguages\vbcsharp\languageservices\microsoft.codeanalysis.remote.servicehub.dll
common7\ide\commonextensions\microsoft\managedlanguages\vbcsharp\languageservices\microsoft.codeanalysis.workspaces.dll
common7\ide\commonextensions\microsoft\managedlanguages\vbcsharp\languageservices\microsoft.visualstudio.languageservices.dll
 
msbuild\current\bin\roslyn\microsoft.build.tasks.codeanalysis.dll
msbuild\current\bin\roslyn\microsoft.codeanalysis.csharp.dll
msbuild\current\bin\roslyn\microsoft.codeanalysis.dll
msbuild\current\bin\roslyn\vbcscompiler.exe
</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37472</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37471</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37466</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use AnalyzerConfigOptionsProvider when available</Title>
    <PullRequestDescription>This pull request updates the NuGet formatting analyzer to use `AnalyzerConfigOptionsProvider` instead of Microsoft.VisualStudio.CodingConventions whenever the analyzers are used with Roslyn 3.3+. The new options provider overwhelmingly outperforms the .editorconfig implementation in Visual Studio, so we are expecting performance gains of nearly 50% across the build for solutions using this analyzer.</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37463</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37462</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>25/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37459</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Support local constants being captured in static local functions</Title>
    <PullRequestDescription>Fixes #36091</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37452</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove Microsoft.Tpl.Dataflow references</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37450</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix region tracking for regions with local functions</Title>
    <PullRequestDescription>Fixes #37427

/cc @agocke
@CyrusNajmabadi I suspect this will address the anomaly you are seeing in your PR.</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37449</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update TPL Dataflow to 4.9.0</Title>
    <PullRequestDescription>Note that this leaves the old ID Microsoft.TPL.Dataflow at 4.5.24 (the only one that shipped) and updates the newer ID System.Threading.Tasks.Dataflow.

Why is the old one still here? Should we remove it now, particularly since the two versions no longer match?</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37448</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37447</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37445</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add IMethodSymbol.Construct overload with nullable annotations</Title>
    <PullRequestDescription>Fixes #37310
Fixes #37279</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37442</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge NullableAnnotation.NotApplicable and Disabled to None, and rename NullableFlowState.NotApplicable to None for consistency</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/37441. @dotnet/roslyn-compiler for review. /cc @jasonmalinowski @ryzngard </PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37440</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/ide-cleanup</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/ide-cleanup.

``` bash
git fetch --all
git checkout merges/master-to-features/ide-cleanup
git reset --hard upstream/features/ide-cleanup
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/ide-cleanup --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37439</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37438</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>24/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37437</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Split liveshare handlers</Title>
    <PullRequestDescription>Export liveshare handlers on a per language basis and update the client to import the per language server.

Related PR - https://devdiv.visualstudio.com/DevDiv/_git/Cascade/pullrequest/193071

Might be easier to review the commits in order, the first changes the server side handler exports, the second changes the client implementation to retrieve them.</PullRequestDescription>
    <CreatedDate>23/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37433</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update code style analyzer</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>23/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37431</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use NullableAnnotation.NotAnnotated for value types</Title>
    <PullRequestDescription>Use `NullableAnnotation.NotAnnotated` always for value type annotations in the public API.

Previously, the annotation was `NotAnnotated` if the type reference was from source and `Disabled` if the type reference was from metadata.

Fixes #34412</PullRequestDescription>
    <CreatedDate>23/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37426</PullRequestID>
    <RepoID>1</RepoID>
    <Title>React to Live Share Language Services API Changes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>23/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37425</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190729.29
- **Date Produced**: 7/29/2019 10:51 PM
- **Commit**: 84d9a013b66c3e14a67ace0a99ae84e6eb8b6a7d
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19379.29

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

















</PullRequestDescription>
    <CreatedDate>23/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37419</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/ide-cleanup</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/ide-cleanup.

``` bash
git fetch --all
git checkout merges/master-to-features/ide-cleanup
git reset --hard upstream/features/ide-cleanup
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/ide-cleanup --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>23/07/2019</CreatedDate>
    <ClosedDate>23/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37416</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Sort Traits.Features members alphabetically</Title>
    <PullRequestDescription>I opened the file in Notepad++, selected the members inside Features, and ran Edit &gt; 'Line operations' &gt; 'Sort lines lexicographically ascending.'</PullRequestDescription>
    <CreatedDate>22/07/2019</CreatedDate>
    <ClosedDate>23/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37414</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>22/07/2019</CreatedDate>
    <ClosedDate>23/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37413</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>22/07/2019</CreatedDate>
    <ClosedDate>23/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37412</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix Build badges:</Title>
    <PullRequestDescription> - Update generate script
 - Update readme.me with latest run of script</PullRequestDescription>
    <CreatedDate>22/07/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37403</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add dotnet-format feature branch to myget publishing</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>22/07/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37397</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Convert To Interpolated Strings refactoring provider should treat cha…</Title>
    <PullRequestDescription>…r literals the same way it treats string literals.

See https://github.com/dotnet/roslyn/issues/37324

</PullRequestDescription>
    <CreatedDate>22/07/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37396</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add CI telemetry for bootstrap build and test</Title>
    <PullRequestDescription>This should allow us to query the azure event API to figure out if a particular run failed because of failure to build or test failure. This should help us categorize the causes of CI flakiness and drive it down.</PullRequestDescription>
    <CreatedDate>22/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37395</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add new feature to add assignments for unassigned 'out' parameters.</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/15430

Looks like: 

![image](https://user-images.githubusercontent.com/4564579/61596762-72d0d200-abbc-11e9-842e-9f97bb394fcd.png)

Note: this needed adding an actual new compiler API for determining definite-analysis information of variables, as per https://github.com/dotnet/roslyn/issues/15430.

TODO

- [x] VB side of new API.
- [x] VB tests.
- [x] Tests for IDE features.</PullRequestDescription>
    <CreatedDate>21/07/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37393</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190719.2
- **Date Produced**: 7/19/2019 5:55 PM
- **Commit**: a190d4865fe3c86a168ec49c4fc61c90c96ae051
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19369.2

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)



</PullRequestDescription>
    <CreatedDate>20/07/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37390</PullRequestID>
    <RepoID>1</RepoID>
    <Title>add new vs search provider to Roslyn</Title>
    <PullRequestDescription>vs search is new search experience VS is adding. this new feature is based on LSP extensions. so we added ILanguageClient and LSP server in Roslyn which for now only support new vs search capability.

in future, we might move some features over to LSP such as existing GoTo or FAR.</PullRequestDescription>
    <CreatedDate>20/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37389</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/ide-cleanup</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/ide-cleanup.

``` bash
git fetch --all
git checkout merges/master-to-features/ide-cleanup
git reset --hard upstream/features/ide-cleanup
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/ide-cleanup --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/07/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37388</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/07/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37387</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>20/07/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37381</PullRequestID>
    <RepoID>1</RepoID>
    <Title>IOperation for Parameter Nullchecking</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37380</PullRequestID>
    <RepoID>1</RepoID>
    <Title>IOperation / CFG changes for Parameter Nullchecking</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37378</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Pr feedback</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37373</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Handle reduced extension method invocations in remove unused member a…</Title>
    <PullRequestDescription>…nalyzer

Fixes #37213</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37370</PullRequestID>
    <RepoID>1</RepoID>
    <Title>🚧 Remove broken PackageReference heuristic and prevent incorrect framework assembly references</Title>
    <PullRequestDescription>See #37246

🚧 I'm expecting tests to fail in CI that I need to mark as skipped...</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37369</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/ide-cleanup</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/ide-cleanup.

``` bash
git fetch --all
git checkout merges/master-to-features/ide-cleanup
git reset --hard upstream/features/ide-cleanup
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/ide-cleanup --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37368</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37367</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37365</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Include netstandard2.1 in the set of default C# 8 frameworks</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>20/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37360</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Initialize the remote workspace on the UI thread.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37359</PullRequestID>
    <RepoID>1</RepoID>
    <Title>WIP: Expose Roslyn OOP as a limited LSP server supporting code search via extended LSP</Title>
    <PullRequestDescription>Polish for @olegtk's PR #37190... I don't have permissions to push directly to the existing PR.

This prototype exposes RoslynCodeAnalysis service hub service as a limited LSP server supporting only extended (streaming) version of LSP's workspace symbol search. This allows Roslyn to support VS search on par with GoTo.

More context: VS Search (former Quick Launch) public extensibility is LSP only, it supports both standard workspace/symbol and extended workspace/beginSymbol and workspace/publishSymbol (not yet documented). Standard LSP's workspace/symbol doesn't support streaming of results yet (expected in next version via microsoft/vs-streamjsonrpc#139), that's why until it does we need to extend LSP with workspace/beginSymbol.

This implementation is reusing AbstractNavigateToSearchServic, just like GoTo, but unlike GoTo it uses PrimaryWorkspace as LSP doesn't support workspace synchronization.

Initialization of this Roslyn LSP server is left to VS LSP client for now, it will initialize it when user starts interacting with VS Search (based on "Capability" metadata).</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37357</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/ide-cleanup</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/ide-cleanup.

``` bash
git fetch --all
git checkout merges/master-to-features/ide-cleanup
git reset --hard upstream/features/ide-cleanup
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/ide-cleanup --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37356</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37355</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>19/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37353</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix typo in CSharpTestBase</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37351</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update the LangVersion and Nullable command line text</Title>
    <PullRequestDescription>Fixes #33821</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>20/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37341</PullRequestID>
    <RepoID>1</RepoID>
    <Title>More IDE suggestion cleanup.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37331</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move lsp code actions</Title>
    <PullRequestDescription>## Summary
Moves run code actions down to the library layer by implementing `workspace/executeCommand` and update the code actions request structure.  Additionally add new thread context variable for preserving thread context.
These are all in one PR as they all require each other to function.

### Update code action structure
This modifies the implementation of `textdocument/codeActions` to return an array of codeAction or command per https://microsoft.github.io/language-server-protocol/specification#textDocument_codeAction rather than very nested commands.
Also updated the liveshare implementation to re-nest the values and update the name as they have specific dependencies on that shape in both the server and client.

### Move run code actions down
Implemented handlers that the `workspace/executeCommand` handler delegates to based on the command name.  Created an implementation for run code actions and updated the structure to match the code actions request.

### Thread context
Introduced a new keepThreadContext variable to the handlers to allow the caller to specify if the thread context should be kept inside the handler implementation.  This allows us to switch to the main thread for certain liveshare cases while still keeping the library unaware of VS dependencies.

It might be helpful to go commit by commit.</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>29/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37330</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix InvalidOperationException in AbstractRemoveUnusedParametersAndVal…</Title>
    <PullRequestDescription>…uesDiagnosticAnalyzer.ShouldReportUnusedParameters

We recently changed the enum values for `UnusedParametersPreference` (see https://github.com/dotnet/roslyn/commit/ee61cc53ff02b55df8c9d756235c0e1085dafa4b), which seems to lead to this exception if customers had explicitly changed this option in the Tools Option page prior to that fix. I have changed the code to be much more defensive.

Fixes #37326</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37327</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Replace ApplyPartialNgenOptimization with ApplyNgenOptimization</Title>
    <PullRequestDescription>The ApplyPartialNgenOptimization property is an old name for ApplyNgenOptimization=partial and shouldn't be used anymore.

Fixes merging IBC data to inserted dependencies.</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37323</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add ref and qualified generic name detection for SpeculativeT completion.</Title>
    <PullRequestDescription>Fixes #37224 
Fixes #37268 
Fixes #37361 </PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37322</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add initial GetDeclaredSymbol support for inferred VariableDeclaratorSyntax and SingleVariableDesignationSyntax nodes</Title>
    <PullRequestDescription>Add GetDeclaredSymbol support for nullability in variable declarations. Not handled are linq or foreach iteration variable declarations. @dotnet/roslyn-compiler for review. Foreach and linq are tracked by https://github.com/dotnet/roslyn/issues/37321.
/cc @jasonmalinowski @ryzngard.
Fixes https://github.com/dotnet/roslyn/issues/32459.
Fixes https://github.com/dotnet/roslyn/issues/30150.</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37320</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Delay pointer managed type check on type members until after binding</Title>
    <PullRequestDescription>Fixes #37051 by delaying the CheckManagedAddr check on pointers in type members until after type members are bound. Here is the scenario fixed by this change:

```cs
public unsafe class A
{
    public virtual T* M&lt;T&gt;() where T : unmanaged =&gt; throw null!;
}

public unsafe class B : A
{
    // before this we would crash when checking the unmanaged constraint on `T*`
    public override T* M&lt;T&gt;() =&gt; throw null!;
}
```

Similar to other scenarios where we delay constraint checking, this change makes it impossible to detect the illegal usage of a pointer type a la the following:

```cs
class A { public class B { } }
class C&lt;T&gt; : A { }

class Test
{
    // today this gives ErrorCode.ERR_ManagedAddr,
    // but in post-binding checks the type is seen as `A.B` so there's nothing to error about
    C&lt;object*&gt;.B f;
}
```

The fact that `Test.f` resolves to type `A.B` can be verified in the IL produced by this compiler:
```cil
.class private auto ansi beforefieldinit Test
	extends [mscorlib]System.Object
{
	// Fields
	.field private class A/B f

        // constructor, etc...

} // end of class Test
```</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37319</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Syntax kinds service cleanup </Title>
    <PullRequestDescription>New PR due to devops issues #37236</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37318</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37317</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>18/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37316</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update System.Threading.Tasks.Extensions to 4.5.3</Title>
    <PullRequestDescription>VS is trying to update other dependencies and these need the newer version.</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37312</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix make method async/sync and some related code fixes</Title>
    <PullRequestDescription>Fixes #30325.</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37311</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Consume construction with nullable in type inferrer</Title>
    <PullRequestDescription>This consists of two parts:

1. Fixing a compiler bug in NormalizeWhitespace that I hit while trying to test the second part and
2. Updating the type inferrer and the appropriate tests.</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37307</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update WRN_UninitializedNonNullableField message</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37305</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix bad merge</Title>
    <PullRequestDescription>A couple of PRs used API that was removed in between validation and merge.</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37303</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Analyzer driver performance fixes for IDE open file analysis</Title>
    <PullRequestDescription>IDE analyzer host invokes [CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsAsync](http://source.roslyn.io/#q=CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsAsync) APIs to compute open file semantic diagnostics. This PR performs the following optimizations on this code path:
1. `AnalysisState.PerAnalyzerState`: Delay allocations of per-symbol dictionary values stored in `_pendingDeclarations` map until we actually start analyzing the first declaration for the symbol. This avoids unncessary allocation overhead on the dictionary pool from which these dictionaries are allocated.
2. `CompilationWithAnalyzers` and `AnalyzerDriver`: Ensure that we force complete partial type trees only for symbol start analyzer(s) in the original analysis scope for which diagnostics were requested. Our current logic force completed partial tree diagnostics for all analyzers if at least one of the analyzer is a symbol start analyzer, which is always true as IDE already has few symbol start analyzers.

Addresses VS Feedback performance issues [#922802](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/922802) and [#922837](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/922837)

**NOTE:** ~~This PR currently targets master branch, but we need to decide if this meets the current 16.3 bar as the code changes are in the compiler layer, even though the affected code path/APIs are only ever invoked during IDE open file analysis.~~ Retargeted to `features/compilerNext` based on offline discussion.</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37301</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Syntax factory for switch statement adds parens when needed.</Title>
    <PullRequestDescription>Fixes #33685

/cc @jcouv @agocke 
</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>20/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37298</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Small cleanup.</Title>
    <PullRequestDescription>Found small issues when trying to look for solution to #37224

1. Removed a no longer needed variable `text`, it was needed to get `FilterSpan` before 4445deb5

1. The first overload of `IsMemberDeclarationContext` does not handle cases with modifiers, removed from comments.

No functional changes in this PR.</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37295</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move some ComputeRefactoringsAsync to common helpers 5/n</Title>
    <PullRequestDescription>Work for: #35525 and #35180
Based on (previous) PRs:  #37272 (and thus subsequently on #37236,  #37196)</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37294</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make refactoring boilerplate more consistent.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37293</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37291</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update filename to match contained type.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37290</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fully qualify unimported type name when in import directive</Title>
    <PullRequestDescription>Fix #37038
Fix #37523</PullRequestDescription>
    <CreatedDate>17/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37289</PullRequestID>
    <RepoID>1</RepoID>
    <Title>More IDE suggestion cleanup.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37286</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/NullableDogfood</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/NullableDogfood.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/NullableDogfood
git reset --hard upstream/features/NullableDogfood
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/NullableDogfood --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>03/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37285</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37284</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix missing nullable annotations</Title>
    <PullRequestDescription>Fix some various features that needed to be updated to pass the new display option.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37283</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Respect root editorconfig files when getting options for a file</Title>
    <PullRequestDescription>Walk the AnalyzerConfigDocuments from most nested to least nested. Check each applicable editorconfig for whether it is the root or not before continuing.

Fixes #37282</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>20/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37277</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190718.7
- **Date Produced**: 7/18/2019 11:09 PM
- **Commit**: eecde8a8751dbe7fdb17ba4dfbd032e26f4cae7d
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19368.7

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)







</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37275</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Unskip tests around tuple nullable annotations</Title>
    <PullRequestDescription>Now that https://github.com/dotnet/roslyn/issues/36047 is fixed, unskip type inferrer tests.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37272</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move some ComputeRefactoringsAsync to common helpers 4/n</Title>
    <PullRequestDescription>Work for: #35525 and #35180

Based on (previous) PRs: #37236 (and thus subsequently on #37196)</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37271</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add INamedType.Construct overload with nullable annotations</Title>
    <PullRequestDescription>Fixes #36046</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37270</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable code actions to configure code style options and diagnostic severity from light bulb</Title>
    <PullRequestDescription>Fixes #36330

Now that editorconfig discovery is enabled by default, we can enable the light bulb actions to configure code style options and diagnostic severity via editorconfig</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37266</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add ref var decl detection for for/foreach</Title>
    <PullRequestDescription>Fixes #37223
</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37263</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add feature to introduce a local variable immediately after writing its initializer.</Title>
    <PullRequestDescription>requested by customer (@johanlarson)

Looks like this:

You start by just writing any particular expression, like so:

![image](https://user-images.githubusercontent.com/4564579/61262535-6111a980-a73a-11e9-8694-1d6839f49afc.png)

Bringing up the lightbulb you get:

![image](https://user-images.githubusercontent.com/4564579/61262551-71298900-a73a-11e9-871a-8ab7e2f7e646.png)

Invoking it gives you:

![image](https://user-images.githubusercontent.com/4564579/61262562-7ab2f100-a73a-11e9-90fe-49b94dc5fcc8.png)

--

TODO: 

- [x] VB
- [x] VB tests.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37258</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/compilerNext</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/compilerNext.

``` bash
git fetch --all
git checkout merges/master-to-features/compilerNext
git reset --hard upstream/features/compilerNext
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/compilerNext --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37257</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37256</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to demos/records</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into demos/records.

``` bash
git fetch --all
git checkout merges/master-to-demos/records
git reset --hard upstream/demos/records
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-demos/records --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37255</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to features/razorSupport2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into features/razorSupport2.

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-features/razorSupport2
git reset --hard upstream/features/razorSupport2
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-features/razorSupport2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37254</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37253</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>16/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37250</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move to latest FlowAnalysis Utilities assembly</Title>
    <PullRequestDescription>Fixes #36643
Fixes #37065</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37249</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190715.4
- **Date Produced**: 7/15/2019 7:17 PM
- **Commit**: fb27fd4d8a2b67d4333e33d4b898c65171c9f3c1
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19365.4

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37248</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove features/lspSupport from publishing to myget</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37247</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Symbol equality comparer</Title>
    <PullRequestDescription>Implements Symbol equality with comparers:
- Adds a SymbolEqualityComparer that implements IEqualityComparer&lt;ISymbol&gt;
- Adds an overload to ISymbol that takes a comparer
- Implements various static comparers, exposing two of them as public
- Uses comparers internally to ensure dictionaries and hashsets etc work correctly
- Updates the bound tree generator to use comparers rather than equals for all symbols

This is probably easiest reviewed commit by commit. In order commited:

1. Add the overload and make TypeSymbol implement it
2. Remove internal type comparers and use symbol comparers instead
3. Fixup internal comparisons
4. Make SubstitutedMethodSmbol type compare aware
5. Make some new hashset/dictionary pools to restore potentially lost perf

---

This PR was made by flipping the default rules back to `IgnoreNullability`, and initially running tests to see what broke. I then implemented the default equals call to call with both `IgnoreNullability` and `ConsiderEverything` and added an assert for when we got a different result (we might consider a mode in the future that we can do this for debugging equality bugs).

Each usage where the default and everything rules diverged was replaced with an explicit comparison to include everything.

This PR does not include a complete change to every usage of compare (tracked in #37382), just the minimum changes required to restore compatibility without breaking any internal comparisons. Nor does it completely fix equality for all symbols that could be affected by nullability (tracked in #37383). 

Because we're restoring the code to the original, C#7.3 behavior, the only things we can break are new code targeting C# 8.0 with nullability enabled, and any analyzers that opt in to consider nullability. While not ideal, we're already shipping with nullable bugs, so it is more desirable to be bug free in the back compat case and add bugs to the new feature than the other way around.


</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37245</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190715.4
- **Date Produced**: 7/15/2019 7:17 PM
- **Commit**: fb27fd4d8a2b67d4333e33d4b898c65171c9f3c1
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19365.4

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37244</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add MaxLangVersion</Title>
    <PullRequestDescription>Will be consumed by tooling to recommend LangVersion upgrades</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37242</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Let #nullable directive enable/disable all nullable-related warnings</Title>
    <PullRequestDescription>Resolves #32742

Would like to know what people think about:
1. the decision to control all nullable-related warnings via `#nullable enable warnings` (except using the annotation outside of nullable annotations context warning)
2. this solution to ensure via tests/automated checks that any new nullable-related warnings are either manually added to the set or marked as non-nullable-related</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37241</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Prepare for compilerNext version number</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37240</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add compilerNext packages to be published to myget</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37239</PullRequestID>
    <RepoID>1</RepoID>
    <Title> Fix EnC debug information emitted for patterns</Title>
    <PullRequestDescription>Update calculation of syntax offset to account for a new case when a node (a switch expression) that is associated with a variable, closure or lambda may share start offset with other node of the same kind (`expr switch { … } switch { … }`). Use the offset of the `switch` keyword instead of the starting offset of the expression to disambiguate.

Assign ordinals to variables synthesized for storing pattern values across cases. This is required to support complex patterns since we can no longer rely on the type of these variables to be distinct. This will require follow up in the IDE to disallow updating/adding/reordering the case clauses of switch expression which there an active statement is present within the switch statement. If the cases are unmodified the compiler guarantees that the order in which the synthesized variables are generated remains the same, so we can map the variables using their ordinal.

Mark all variables synthesized during lowering of switch expression as short-lived. Their lifespan is limited to the switch expression, which does not include a sequence point.

We will need to disallow editing methods that contain switch expression. This is necessary until bugs https://github.com/dotnet/roslyn/issues/37232, https://github.com/dotnet/roslyn/issues/37237 are fixed.
</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37236</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Syntax kinds service cleanup</Title>
    <PullRequestDescription>Based on #37196 (only last commit is new).
</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37227</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190714.1
- **Date Produced**: 7/14/2019 1:05 PM
- **Commit**: 0c81c2bbdc49749e9940bc8858ebd16026d51277
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19364.1

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37222</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Test3</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37221</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Testing impact of potential data flow change.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37220</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Testing impact of potential data flow change.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37219</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37218</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>15/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37216</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Report nullable warnings for receiver of pattern indexers</Title>
    <PullRequestDescription>Fixes #36241</PullRequestDescription>
    <CreatedDate>14/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37215</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make IEquatable contravariant for the purpose of nullability</Title>
    <PullRequestDescription>Fixes #37187</PullRequestDescription>
    <CreatedDate>14/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37214</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Reinfer discard in assignment and out vars</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36503 (warning in discarding assignment)
Fixes https://github.com/dotnet/roslyn/issues/29635 (reinfering discards), but issue https://github.com/dotnet/roslyn/issues/35010 tracks the remaining scenarios around deconstructions (including discards there)</PullRequestDescription>
    <CreatedDate>14/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37207</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use pattern matching in a few more places.</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>13/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37203</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>13/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37202</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix parsing for double-slash langver</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/35719</PullRequestDescription>
    <CreatedDate>13/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37201</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Honor NotNullIfNotNull(string)</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/31549

Relates to https://github.com/dotnet/csharplang/blob/master/meetings/2019/LDM-2019-05-15.md#nullness-dependencies-between-inputs-and-outputs</PullRequestDescription>
    <CreatedDate>13/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37200</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Working State</Title>
    <PullRequestDescription>@tmat As discussed.</PullRequestDescription>
    <CreatedDate>12/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37196</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move some ComputeRefactoringsAsync to common helpers 3/n</Title>
    <PullRequestDescription>Continuation of work on #35525 and #35180</PullRequestDescription>
    <CreatedDate>12/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37194</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Check for implicit 'this' copy when binding pattern indexers</Title>
    <PullRequestDescription>Resolves #36872</PullRequestDescription>
    <CreatedDate>12/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37192</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove support for '#pragma warning enable' directive (take 2)</Title>
    <PullRequestDescription>Related to #36550. Disables the syntax without ripping out the logic in DiagnosticFilter and PragmaWarningMap.</PullRequestDescription>
    <CreatedDate>12/07/2019</CreatedDate>
    <ClosedDate>14/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37189</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190713.1
- **Date Produced**: 7/13/2019 12:59 PM
- **Commit**: 8c94bc75d29cd84e3592e4044100d45a341653f7
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19363.1

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)





</PullRequestDescription>
    <CreatedDate>12/07/2019</CreatedDate>
    <ClosedDate>14/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37188</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>12/07/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37186</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Full-ngen ResultProvider</Title>
    <PullRequestDescription>Working around an optprof issue. The assembly seems to be just 150kb in size so it feels like we should be able to get away with a full ngen.</PullRequestDescription>
    <CreatedDate>12/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37173</PullRequestID>
    <RepoID>1</RepoID>
    <Title>IDE EnC support for all C# 8.0 features</Title>
    <PullRequestDescription>Methods containing switch expressions can't be edited due to https://github.com/dotnet/roslyn/issues/37172.

Handle all kinds of `stackalloc` nodes.

Validate updated modifiers of local functions (fixes https://github.com/dotnet/roslyn/issues/37054).

Treat `await foreach` and `await using` as state machine suspension points, report appropriate rude edits when changing these statements.

Relax restrictions on editing using statements around active statement - allow updates when the statements does not generate a temp variable.

Test edits around `using` declarations.

Report rude edits when editing cases of a switch statement containing patterns while the switch governing expression is a non-leaf active statement. Non-leaf active statement can't be edited and the patterns contribute to the decision tree covered by this active statement.

Report rude edits when editing switch cases while a `when` clause is active. This is necessary since `when` clause might be followed by a branch back to the decision tree. The decision tree emits synthesized variables that need to be mapped to the corresponding synthesized variables in the new decision tree (after edit). The compiler is only able to map the variables if the decision tree is unchanged.

Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/891931.

Fixes handling of active statements in nested VB single-line lambdas (e.g. `Function(a) Function(b) a + b`), where previously the logic might have confused the lambda the active statement belongs to leading to misreported rude edits and potentially allowing changes that shouldn't be allowed.</PullRequestDescription>
    <CreatedDate>12/07/2019</CreatedDate>
    <ClosedDate>26/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37170</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Ensure that IVsContainedLanguage.SetHost(null) won't fail a second time</Title>
    <PullRequestDescription>If you called SetHost(null) we didn't null out our internal field, so a second call would call ontainedLanguage.OnDisconnect() a second time.

Fixes https://dev.azure.com/devdiv/DevDiv/_workitems/edit/857221</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37166</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove support for '#pragma warning enable' directive</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37164</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make test unconditional</Title>
    <PullRequestDescription>Fixes build break introduced by the merge of https://github.com/dotnet/roslyn/pull/37025.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37163</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix master build</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37162</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move 'Wrapping' code actions down to 'Feature' layer.</Title>
    <PullRequestDescription>This had to be at the 'Editor' layer previous because 'indentation computation' was defined at the editor-layer.

We've since moved 'indentation computation' down to teh workspace layer (since it is only dependent on formatting), so we can move these actual code action features down to the appropriate layer where the rest of the code actions live.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37160</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37159</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Tweak interaction of Maybe/NotNull with Not/MaybeNullWhen</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36410</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37158</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Rename TypeArgumentsNullableAnnotations to TypeArgumentNullableAnnotations</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/35927. @dotnet/roslyn-compiler @jasonmalinowski / @ryzngard for review.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37156</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix attribute params with regards to nullability</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36974

I'm also ~~adding `[Obsolete]` on~~ removing  `NullableContextOptions` API which we intend to remove, but don't want to rush.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37154</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Run EnC semantic validation tests on netcoreapp3.0</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37151</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Define IProjectSiteEx.SetProperty</Title>
    <PullRequestDescription>We currently have no way to pass arbitrary property values (that is,
those beyond what is covered by the compiler command line arguments)
from the CSProj project system to the Language Service. Instead the LS
must go back to the `IVsHierarchy` for the project, query for the
`IVsBuildPropertyStorage` interface, and then query for the desired
property. This must all happen on the UI thread and thus risks UI
delays.

This commit expands the `IProjectSiteEx` interface to include a
`SetProperty` method that takes the property name and value. This allows
the project system to "push" values to the LS rather than requiring the
LS to "pull them".</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37150</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190710.8
- **Date Produced**: 7/10/2019 11:51 PM
- **Commit**: a6ae1b637ed236354529992729af875f6c8a180a
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19360.8

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)



</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37149</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move GenerateConstructorFromMembers to language dependent implementations</Title>
    <PullRequestDescription>fixes #33287 

In VB, we can't generate null checks in the same way and it currently throws when we try. The setting is language dependent, but could potentially be enabled for VB, so just ignore the value. If possible, could we move this setting to CSharp only? Is it a breaking change to move that setting? </PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37148</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Issue #31417: Add SARIF v2.1.0 support</Title>
    <PullRequestDescription>## Summary

We enable the Roslyn C# and VB compilers to produce error logs in the standardized SARIF v2.1.0 format. This is not a breaking change because the existing, non-standardized SARIF v1.0 format is still the default.

The command line syntax for producing SARIF v2.1.0 is TBD. The proposal in this PR is to specify the options `/errorlog:&lt;logFileName&gt; /sarifversion:2`. The `/errorlog` option by itself still produces SARIF v1.0.

## Details

### Product code

The class `StreamErrorLogger`, which produced SARIF v1.0 output, is renamed to `SarifV1ErrorLogger`. We introduce a new class `SarifV2ErrorLogger` to produce SARIF v2.1.0. The common code (there is a surprising lot of it) is pushed into the common base class `SarifErrorLogger`.

The `SarifDiagnosticComparer`, used by both concrete logger classes, is extracted into a separate file.

### Test code

The tests are treated similarly. The classes `ErrorLoggerTests` (there were three of them)
are renamed to `SarifV1ErrorLoggerTests`, we introduce `SarifV2ErrorLoggerTests`, and the common code is pushed into the common base class(es) `SarifErrorLoggerTests`. In the case of the tests, _all_ of the logic is in the base classes. The derived classes simply specify

1. Which logger class to instantiate (`SarifV1ErrorLogger` or `SarifV2ErrorLogger`), and
2. What output string is expected.

The derived classes also include the actual test methods, for example:

```
[Fact]
public void NoDiagnostics()
```

but they just delegate to base class methods (for example, `NoDiagnosticsImpl`). We do it this way because XUnit doesn't find test methods in abstract base classes.

(I suppose I could try making the base classes concrete and see what happens, but I won't do that unless you want me to try it.)

**NOTE**: While running some of the Roslyn tests I found that they broke because they didn't handle a profile directory name with a space in it (C:\Users\Larry Golding). I fixed several of these by adding quotes.

### Miscellaneous

The PR includes the resources for the C# and VB command line error messages for the `/sarifversion` option, as well as the help text for both C# and VB (`csc /?`, `vbc /?`).

The public API declarations are updated.

## Logistics

Per @jcouv, we'll need to do the following before taking this change:

- Discuss the command line option and default further.
- Identify a beta partner (like O365) to ensure that the end-to-end is sound, also perform round-trip testing to verify that running new output through the SARIF SDK's v2-to-v1 converter results in same/similar old output.
- There is still uncertainty around scheduling: this won't make it into 16.3, and there are constraints on what we can do in the first release following 16.3. Julien suggests we discuss when Jared returns.

Per @michaelcfanning:

- We discussed looking for telemetry attempting to assess customer use of existing v1 errorlogger support. If anyone has thoughts here, would appreciate them.
- As discussed, this change effectively repackages existing data into a new structure (i.e., no data loss or additions over the v1 feature). The only substantive request I’ve received for new v2 data is to provide a substantive description of all analyzers that were enabled for the run (to audit the effective min-bar in place for the run). We’re deferring discussion of this. I mention it because we should keep it in mind as we think about command-line configurability (i.e., we want to minimize new cmd arg knobs, so as we tackle the v2 version knob, let’s consider a solution that allows us to address ‘comprehensive configuration’ in a way that doesn’t entail a new arg, e.g., by allowing the /errorlog command to be qualified in arbitrary ways moving forward for SARIF scenarios).

Fixes https://github.com/dotnet/roslyn/issues/37147</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>16/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37144</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>14/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37143</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37140</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Less SymbolKey allocations.</Title>
    <PullRequestDescription>SymbolKey was written ages ago.  Long before we adopted policies of not heavily using linq, and before we were good about pooling temporary collections. 

This PR brings SymbolKey up to more modern standards by moving to:

1. allocation-free enumeration of types like SymbolKeyResolution.
2. No use of `yield`
3. No linq.
4. Intermediary collectoins pooled whenever possible.

With this approach, it should be possible to reach near allocation-free resolutoin of SymbolKeys.  Some things will still require allocations though.  For example, we often have to embed strings into the key we build.  As we are building one large string, and because the compiler APIs have no ways to use Spans, we have to allocate strings as we break the key apart. </PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37139</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add error for multiple null suppressions</Title>
    <PullRequestDescription>Fixes #37111</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37135</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Apply Maybe/NotNull when getting default value of fields and properties</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36830</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37133</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Try task.logissue to get error message to show in build summary</Title>
    <PullRequestDescription>/cc @JoeRobich </PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37131</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37130</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>11/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37123</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Copy sources from Versions.props to NuGet.config</Title>
    <PullRequestDescription>**TL;DR**

We need that all restore sources are located in `NuGet.config` since internal feeds can only be restored from there. More details including next steps [here](https://github.com/dotnet/arcade/blob/master/Documentation/RestoreSourcesUpdateStatus.md)</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37118</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix for #37051 and add test.</Title>
    <PullRequestDescription>This PR provides a possible fix for #37051 where the C# compiler crashes when it meets an `override` method with a generic pointer (`T*`) return type.

The crash is caused by an `NullReferenceException` when trying to locate the override's parent method. The crash happens because a `TypeWithAnnotations.Type` property is `null` but assumed not to be. I believe the reason it's `null` is because this code path is triggered when a higher level method tries to resolve the return type or the generic constraints in the first place (and the overridden properties for overrides take control and they make the assumption that everything is already resolved).

</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>20/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37117</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remove reflection based workaround for IRecursivePatternOperation</Title>
    <PullRequestDescription>The API was made public in #36709, so we don't need a reflection based workaround

Fixes #36866

NOTE: We already have unit tests verifying the affected code path.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37116</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable .editorconfig discovery by default</Title>
    <PullRequestDescription>Time to turn this on!</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37115</PullRequestID>
    <RepoID>1</RepoID>
    <Title>EnC support for DIM</Title>
    <PullRequestDescription>Allow editing existing interface member bodies.

Disallow adding new ones - virtual and abstract ones are not supported in general in abstract types, non-virtual should in theory work but don't (https://github.com/dotnet/roslyn/issues/37128).

Adding a nested types is supported.

Disallow declaring a new local function in a body of an interface method. We synthesize the IL method directly to the containing interface, which does not work. Lambdas, async, and iterators are supported since they synthesize a nested type.


</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37114</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37113</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37112</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Tweak error message for publish failure</Title>
    <PullRequestDescription>/cc @JoeRobich </PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37109</PullRequestID>
    <RepoID>1</RepoID>
    <Title>WIP: Fixes possible NRE in VisualStudioDebugStateChangeListener</Title>
    <PullRequestDescription>Not sure if this is the right fix yet. The debugger might address it on their end.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37108</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Introduce CodeFixContext.IsBlocking</Title>
    <PullRequestDescription>...to tell TypeScript whether code fixes are being requested for a
blocking operation or a speculative background operation.  Since
TypeScript only has one thread, it wants to preempt running operations
if the code fix request is blocking, but not otherwise.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37102</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37101</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37100</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>14/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37096</PullRequestID>
    <RepoID>1</RepoID>
    <Title>EnC compiler tests for nullables</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37095</PullRequestID>
    <RepoID>1</RepoID>
    <Title>fix for insert a new line on pressing Enter if the suggested word was typed completely</Title>
    <PullRequestDescription>fixes https://github.com/dotnet/roslyn/issues/37082

Scenario:
1. The CompletionOptions.EnterKeyBehavior option is set to EnterKeyRule.AfterFullyTypedWord
2. Start completion and type the full word (like the whole `Length`).
3. Type Enter

**Expected**
The item has been committed and a new line has been added.

**Actual**
The item has been committed and **no** new line has been added.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>30/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37094</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37093</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37092</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37091</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37090</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>14/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37089</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37085</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Show suppression fixes in the light bulb under the squiggle/faded dia…</Title>
    <PullRequestDescription>…gnostic

Prevents us from showing a light bulb under the squiggle/faded diagnostic without any code actions

![image](https://user-images.githubusercontent.com/10605811/60926608-eb01d400-a25b-11e9-94aa-719f7090d2bc.png)

Fixes #29589</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37084</PullRequestID>
    <RepoID>1</RepoID>
    <Title>fixing crash at GetMemberBodySpanForSpeculativeBinding</Title>
    <PullRequestDescription>There is a crash in 16.2 Preview 3 with high number of hits. I have found from dumps that it crashes at the line fixed and `node == null`. Please let me know if the fix is correct, who knows how what tests to be added and so on. My PR is just to point to the issue.

It is valid for 16.2 GA if we can provide a reasonable fix.

FYI: @jinujoseph </PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37083</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable EnC tests on Core</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37079</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37078</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37077</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37076</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37074</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make C# 8.0 the default, latest, and latest-major language version</Title>
    <PullRequestDescription>Note that there's one significant change here: 'preview' is now a "real" language version, in that we don't necessarily map it to a new language version via `MapSpecifiedToEffectiveVersion`. This avoids either mapping to a version which is no longer in preview (like 8.0), or mapping to a version that doesn't exist yet (like 9.0).

Tests have been rebaselined where necessary (this was mostly mechanical).

Fixes #29819</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37073</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Check for uninitialized non-nullable field-like events</Title>
    <PullRequestDescription>Fixes #30067</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37072</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move some ComputeRefactoringsAsync to common helpers 2/n</Title>
    <PullRequestDescription>Continuation of work on #35525 and #35180</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37066</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Completion should select IntelliCode item when possible</Title>
    <PullRequestDescription>Here is a summary of the design meeting with the IntelliCode team:

1. Intellicode items should always be preferred comparing to non-Intellicode items.
2. All current Roslyn heuristics such as MRU or matching should be kept without changes.
3. If there is a starred copy for an item to be selected, the starred copy should be selected.
4. If user committed the unstarred instance of an item in a previous session, the starred instance should be considered in the MRU selection.
5. If the current selected item is a starred one and changing selection switches the item to a non-starred one, selection should make a jump in the completion popup maybe many frames below.
6. If the current selected item is a non-starred one and changing selection switches the item to an item with a starred copy, selection should make a jump in the completion popup to the starred one maybe many frames above.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37062</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37061</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37060</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.2-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.2-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.2-vs-deps
git reset --hard upstream/release/dev16.2-vs-deps
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.2-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37059</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview1.

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview1
git reset --hard upstream/release/dev16.3-preview1
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37057</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Ensure we have stack spilling support for the recently-added expression node `BoundReadOnlySpanFromArray`</Title>
    <PullRequestDescription>Fixes #36856

@dotnet/roslyn-compiler May I please have a couple of reviews of this tiny bug fix?
</PullRequestDescription>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37053</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Use switch expressions to simplify GetAccessibilityAndModifiers</Title>
    <PullRequestDescription>Follow-up to #32943

See https://github.com/dotnet/roslyn/pull/32943#discussion_r294012072</PullRequestDescription>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37052</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Target-typed switch expression</Title>
    <PullRequestDescription>This PR adds support for a target-typed switch expression.

This is the first time where we have an expression form that must be converted when it is used with its natural type.  That is because an expression such as `e switch { 1 =&gt; a, 2 =&gt; b }` must not convert `a` to `b` if the target type is some common supertype (e.g. `object`), but must do the conversion if it is needed to use the expression in its natural type.  Moreover, there might be errors using the expression in its natural type (e.g. an obsolete user-defined conversion).  These errors must only be reported when the expression is used without being converted to some type.

In order to do this we add a new bottleneck for converting an expression to its natural type.  Every rvalue expression must either be converted, or be passed through `BindToNaturalType(e, diagnostics)`.  To ensure that we've handled all contexts, we instrument every reference to a local or parameter, and add a flag to it when it has "been converted" (in debug mode only).  Then, in definite assignment analysis we assert that every rvalue expression that needs to have been converted (including switch expressions, tuple literals, parameters and locals) has indeed been converted.  Since we have excellent test coverage of language forms that have subexpressions using parameters and locals, this flushed out scores of places where binding required changes.  This will also help ensure that new language constructs are handled properly.

A new invariant is that after binding, there are no unconverted tuple literals or unconverted switch expressions remaining.  Every one of them has been replaced by (converted to) its "converted" form.  The assertion mentioned above also checks this.

The PR also includes an overhaul to the handling of tuple equality.  Now, in initial binding, we simply produce converted tuples or converted tuple literals for operands.  In lowering, we reorder the operations so that conversions that should be deferred are done later.

Fixes #14965 
Fixes #35958
Specified by https://github.com/dotnet/csharplang/issues/2389
</PullRequestDescription>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37048</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add nullability parameters to Compilation.Create*Type()</Title>
    <PullRequestDescription>Fixes #36047</PullRequestDescription>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37045</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merges/master to features/lsp support</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37042</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Remark about F# not supported</Title>
    <PullRequestDescription>Issue was raised in the dotnet docs about this API. I've filed a fix for the API docs dotnet/roslyn-api-docs#64 and I wanted to sync here.</PullRequestDescription>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37036</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix significant wrong translation in CodeStyle.Resources.zh-Hans.xlf</Title>
    <PullRequestDescription>This could be agreed by anyone who understands Chinese. I just used the correct translation from Traditional Chinese version.</PullRequestDescription>
    <CreatedDate>07/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37034</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Show infobar for recommending installation of FxCopAnalyzers NuGet/VSIX</Title>
    <PullRequestDescription>Addresses part of https://github.com/dotnet/roslyn-analyzers/issues/2023. This is the first item in our 16.3 user story to **improve discoverability and ease of installation of Microsoft recommended FxCop analyzers inside Visual Studio**.

This PR converts our current experimental feature that recommends installation of [FxCopAnalyzers VSIX](https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MicrosoftCodeAnalysis2019) into a non-experimental feature that recommends installation of [FxCopAnalyzers NuGet or VSIX](https://docs.microsoft.com/en-us/visualstudio/code-quality/install-fxcop-analyzers?view=vs-2019).
All the experimental checks have been removed, but I have retained all the existing logic about when the info bar shows up (light bulb invoked on 3 separate days for separate VS sessions).

![image](https://user-images.githubusercontent.com/10605811/60764141-9af6f780-a038-11e9-8fb9-fc59f8dca204.png)

1. `Build + Live Analysis (NuGet package)`: Opens NuGet package manager with `Microsoft.CodeAnalysis.FxCopAnalyzers` as the search string to enable single click installation of analyzer package for current project/solution
2. `Live Analysis (VSIX Extension)`: Opens Microsoft Code Analysis 2019 VSIX (https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MicrosoftCodeAnalysis2019)
3. `Learn more`: Opens Microsoft [documentation](https://docs.microsoft.com/visualstudio/code-quality/install-fxcop-analyzers) on FxCop analyzers installation
4. `Never show this again`: Disables this feature for the user</PullRequestDescription>
    <CreatedDate>07/07/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37028</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>06/07/2019</CreatedDate>
    <ClosedDate>06/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37027</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>06/07/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37026</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>06/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37025</PullRequestID>
    <RepoID>1</RepoID>
    <Title>EnC emit tests for C# 8.0 patterns</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37022</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix crash in semantic model when using unmanaged constraint</Title>
    <PullRequestDescription>The semantic model often creates ReducedExtensionMethods for the public API,
but the creation of ReducedExtensionMethod does constraint checking, which
requires a compilation, which isn't always available. This change removes constraint
checking from all creation of ReducedExtensionMethod and adds asserts that we
always have a compilation during constraint checking.

Fixes #37021</PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37020</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Optimize flow analysis</Title>
    <PullRequestDescription>This is porting #36964 to master. 

I have verified the optprof config files in this build:
https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=2827883

Now I need to test if the optprof run actually generate the data for flow analysis assembly and if consuming it would fix some RPS regressions related to this assembly, before sending #36964 for 16.2 approval.

FYI @tmat @mavasani @vatsalyaagrawal @jinujoseph 


</PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37019</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Avoid generating or emitting NullablePublicOnlyAttribute when no other nullable attributes are emitted</Title>
    <PullRequestDescription>Fixes #36977</PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37017</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add initial nullable context api definitions</Title>
    <PullRequestDescription>This is a draft PR with initial definitions with documentation.

This will not compile, I've created it so that we have an easier-to-review look at the API.

@jcouv @gafter @agocke @jasonmalinowski @ryzngard @CyrusNajmabadi</PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37016</PullRequestID>
    <RepoID>1</RepoID>
    <Title>IDE0066 code fix adds parentheses when needed</Title>
    <PullRequestDescription>fix #36995 </PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37015</PullRequestID>
    <RepoID>1</RepoID>
    <Title>ENC editing tests for C# 8.0 pattern matching</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37014</PullRequestID>
    <RepoID>1</RepoID>
    <Title> Make NullableWalker aware of calls to Interlocked.CompareExchange</Title>
    <PullRequestDescription>Related to #36911 </PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37001</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190709.1
- **Date Produced**: 7/9/2019 7:41 AM
- **Commit**: ef3834feb8615429a58808cdcf9ad9284d767654
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19359.1

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

Fixes https://github.com/dotnet/roslyn/issues/37141








</PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>37000</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36999</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36996</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update liveshare diagnostic list table to use new constructor.</Title>
    <PullRequestDescription>3 arg constructor removed, bad merge was let through, see https://github.com/dotnet/roslyn/pull/36969#issuecomment-508644518 </PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>07/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36994</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Make Field Readonly - Keep leading trivia</Title>
    <PullRequestDescription>This addresses #36759 by keeping leading trivia when removing the original node.</PullRequestDescription>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36988</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>04/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36987</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>04/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36982</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix Solution.WithDocumentFilePath not updating the file path of the tree</Title>
    <PullRequestDescription>DocumentState.UpdateFilePath was still passing in the old attributes when producing a new tree source -- oops!</PullRequestDescription>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36979</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Nullchecked Iterators + Error Messages</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36976</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add netstandard to the exclusion list for the AnalyzerConsistencyChecker</Title>
    <PullRequestDescription>Fixes #36963</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36975</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add nullability information to GetSymbolInfo for invocations.</Title>
    <PullRequestDescription>This will conflict with https://github.com/dotnet/roslyn/pull/36869, so I'll wait on that to be merged.

This PR adds a very simple cache for just BoundCalls, so calls to GetSymbolInfo involving them will return information including analyzed nullability. @dotnet/roslyn-compiler @chsienki for review.
This addresses a single case of https://github.com/dotnet/roslyn/issues/35031, but there will be more required.

FYI @jasonmalinowski @ryzngard.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36973</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Workaround IExperimentationService having a UI thread dependency</Title>
    <PullRequestDescription>Right now we are seeing deadlocks where MEF is trying to create the RoslynVisualStudioWorkspace on a background thread, and that deadlocks because the IExperimentationService it tries to use has a UI thread dependency. This breaks that specific cycle by avoiding using the IExperimentationService until on the UI thread -- we know we can't be asked for document options until we have documents, and that can't happen until we get projects. Thankfully, the creation of projects are still UI affinitized so we can initialize it there.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36972</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add type equality comparer to public API</Title>
    <PullRequestDescription>- Extend ITypeSymbol to have new equals overload
- Implement that overload in CS/VB type symbols which defer to comparer
- Add a new interface ITypeSymbolComparable that allows internal implementation-independent symbol comparison with a type kind
- Update api and add tests</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36971</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36969</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36968</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>06/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36967</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>04/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36966</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into master.
(created from a manual run of the PR generation tool)

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36965</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add nullable annotations to parts of the Workspace API</Title>
    <PullRequestDescription>This is an initial pass through a few files in the workspace API adding annotations and fixing warnings. The primary goal of this exercise was dogfooding and kicking the tires of some features, but it also did find a few bugs in our APIs as well which is fantastic.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36964</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Optimize flow analysis assembly</Title>
    <PullRequestDescription>@tmat @mavasani 

Do I need to add an assembly entry in OptProf.json as well?</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36960</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Complete statement - don't move semicolon outside of lambda statements.</Title>
    <PullRequestDescription>Fixes #36945</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36959</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Port new liveshare changes to roslyn.</Title>
    <PullRequestDescription>these are new changes from the liveshare side since stuff was copied.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36958</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Include AttributeUsageAttribute with synthesized nullable attributes</Title>
    <PullRequestDescription>Include `[AttributeUsage(…, Inherited=false)]` for synthesized nullable attributes so `NullableAttribute` and `NullableContextAttribute` are not interpreted as inherited.

For instance, if a base class has `[NullableContext(2)]`, that attribute should apply to the base type only, and not to derived types that have no explicit `NullableContextAttribute`.

Fixes #36934</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36956</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update to System.Memory 4.5.3</Title>
    <PullRequestDescription>This will update Roslyn and Visual Studio to System.Memory 4.5.3, which is needed by MSBuild's reference to System.Resources.Extensions, which depends on System.Memory 4.5.3.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36955</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36954</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36953</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36952</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36949</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update incorrect seealso link</Title>
    <PullRequestDescription>Seems the seealso link is incorrect (or maybe outdated).</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36948</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix broken See also links</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36944</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36943</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36942</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36941</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36940</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Hang on applying code action on a single unopened file</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36938

`Microsoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(System.Func&lt;Microsoft.CodeAnalysis.Document&gt; getFromDocument, Microsoft.CodeAnalysis.Shared.Utilities.IProgressTracker progressTracker, System.Threading.CancellationToken cancellationToken) `
calls
`EditHandler.Apply(Async)`

ApplyAsync has the only asynchronous call to 
```
// ConfigureAwait(true) so we come back to the same thread as 	                
// we do all application on the UI thread.
var text = await singleChangedDocument.GetTextAsync(cancellationToken).ConfigureAwait(true);
```
which could lead to a deadlock with the caller.
  </PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36939</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update .NET Core SDK Url in build on Windows instructions</Title>
    <PullRequestDescription>dotnet-maestro was inconsiderate and [updated the dotnet version in global.json](https://github.com/dotnet/roslyn/commit/ea4ab12b29aae25a5188af9e0ae0350f74a17f26#diff-274660eb4b1b1d963a330b471e10f41c) without updating the url in Building on Windows documentation.
</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36936</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Completion timebox</Title>
    <PullRequestDescription>Fix #36624

Verified the timeout works manually, not sure if there's good way to test this as unittest.

TODO:

- [x] Perf analysis</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36935</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Unskip BasicEditAndContinue Tests</Title>
    <PullRequestDescription>Call `Editor.Activate` before `ReplaceText` following calls to `Debugger.Go`

Fixes https://github.com/dotnet/roslyn/issues/36763</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36931</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Adding Null Checks For All Parameters</Title>
    <PullRequestDescription>Work in progress

#20986 </PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36929</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36925</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge liveshare changes to do dual insertion.</Title>
    <PullRequestDescription>1.  ~~1 more fix https://github.com/dotnet/roslyn/pull/36916~~
2.  ~~Signoff from liveshare / our testing.~~

Merging the features/lspSupport branch into master.

Some notes - Everything in external access liveshare directly copied.  It will be deleted once the razor support is working and we can switch away from using the c#_lsp content type.  It contains all the client side code that calls into Roslyn for a liveshare guest.

The other liveshare project contains the liveshare server side handlers.  Most are just shims to the actual LSP implementation, but there are some custom liveshare handlers + LSP implementations with VS dependencies.  The goal is for all the LSP implementations to just be shims.</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36924</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Require System.Index/Range to be present to offer to use the new language features.</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36909

A while back the compiler had a permissive view of indexing into a string or array with an `^` indexer, or a Range.  Specifically, it would allow doing this *even if* there was no System.Index or System.Range present.  This was fine as the compiler wasn't using those types anyways, it was just translating things to the underlying calls to the int based indexers/substrings/array-copies.

When i added the "use index or range operator" feature i took this into account, and we would offer the feature on strings/arrays when possible.

However, at some point teh compiler changed their strategy, and these types are still required to be present (even if they are unused).

This changes the IDE feature to respect that and to not offer the feature unless those types are present.

</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36923</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36922</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36921</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36920</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36919</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36916</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add liveshare local forwarders for C#_LSP content type</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>01/07/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36914</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add cache to target-typed completion</Title>
    <PullRequestDescription>This helps address a performance issue discovered in a very specific scenario with a huge multitargeted VB file. In the case of the compiler not yet being warmed up, I've seen this drop perf from ~200ms to ~100ms. Once the compiler is warmed up, things are much faster. Perhaps there is more to be done here (parallelization, timeboxing, etc.) but this is definitely an improvement that I think we can use to justify re-enabling for internal teams.</PullRequestDescription>
    <CreatedDate>01/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36907</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix NullableAttribute.Flags-&gt;NullableFlags in docs</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>01/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36905</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Revert "Fix couple of false positives in unused parameter analyzer"</Title>
    <PullRequestDescription>Reverts dotnet/roslyn#36818 in order to make the release branch state match what we've shipped</PullRequestDescription>
    <CreatedDate>01/07/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36903</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't lose tree DiganosticOptions when we recover or replace a tree</Title>
    <PullRequestDescription>We were not passing through DiagnosticOptions when we created a recoverable tree or when we called Solution.WithDocumentSyntaxRoot. This implementation takes a straightforward approach that we simply hold onto the DiagnosticOptions in the process (rather than recovering it); we could improve on that but it makes things a bit trickier since DiagnosticOptions would have to be fetched on demand.

Fixes #26391</PullRequestDescription>
    <CreatedDate>01/07/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36900</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>01/07/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36898</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Consistently name C#/VB editors</Title>
    <PullRequestDescription>This changes the names of the C# and VB editors so that they have a name that matches the other editors and usage elsewhere.

Old Name|New Name
---|---
CSharp Editor|C# Editor
CSharp Editor with Encoding|C# Editor with Encoding
Microsoft Visual Basic Editor|Visual Basic Editor
Microsoft Visual Basic Code Page Editor|Visual Basic Editor with Encoding

This PR renames this usage:

![image](https://user-images.githubusercontent.com/1103906/60408567-cde95780-9c02-11e9-8d7f-f03be54dff12.png)
![image](https://user-images.githubusercontent.com/1103906/60408598-eeb1ad00-9c02-11e9-901a-667e88febce0.png)</PullRequestDescription>
    <CreatedDate>01/07/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36896</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Enable nullable for BoundNodes</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>30/06/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36895</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix typo in EmitStreamSignKind</Title>
    <PullRequestDescription>Just a small typo fix in an internal enum I happened to stumble across :)</PullRequestDescription>
    <CreatedDate>29/06/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36893</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Features/nullable dogfood</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>29/06/2019</CreatedDate>
    <ClosedDate>29/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36892</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/06/2019</CreatedDate>
    <ClosedDate>29/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36890</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Expand introduced using statement to include encompassed locals</Title>
    <PullRequestDescription>Track all local variable declarations and last usages. Expand the using statement's contained statements to include local lifetime of encompassed variables.

Fixes https://github.com/dotnet/roslyn/issues/35237</PullRequestDescription>
    <CreatedDate>29/06/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36888</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/06/2019</CreatedDate>
    <ClosedDate>29/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36887</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>29/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36886</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Relax the rule that tries to get rid of this./me. in Roslyn code.</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/36874</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36883</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Revert NullableContextAttribute metadata compaction</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36881</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Don't update analyzed nullability for parameter conversions</Title>
    <PullRequestDescription>Fixes https://github.com/dotnet/roslyn/issues/35012</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36879</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Move ComputeRefAsync of some Refactorings to common helpers 1/n</Title>
    <PullRequestDescription>#35525 and #35180</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36878</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Add tests for C# simplification around NRT</Title>
    <PullRequestDescription>Shows #34723 is currently fixed. However, it looks like simplification for NRT is currently not working. There's an added test that is skipped for now, pending issue filing (or current issue)</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36875</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix IntelliCode-related Completion Tests</Title>
    <PullRequestDescription>Fixing up a mis-merge.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36873</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Another thousand cleanup suggestions in IDE</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36869</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Turn on nullable semantic analysis by default</Title>
    <PullRequestDescription>Commit 1 ties the nullable semantic analysis to whether or not we will run the nullable walker during compilation.
Commit 2 fixes some DebugVerifier asserts caught after the verifier is run over more code.
Commit 3 updates the method compiler to not use the rewritten method body for emit.
Commit 4 adjusts IOperation to correctly retrieve anonymous properties, and adds a test. Caught by the debug bootstrap compiler.
Commit 5 adjust the BoundAnonymousObjectCreation handling and fixes https://github.com/dotnet/roslyn/issues/35044, thanks @cston for pointing out the correct way to do the comparisons.

Fixes https://github.com/dotnet/roslyn/issues/35374.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36867</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Format this()/base() calls uniformly in the IDE.</Title>
    <PullRequestDescription>It's always been an annoyance of mine how these calls are inconsistent across the IDE.  I did a check to see what the numbers were like, and it was about 350 (across the entire codebase, around 150 in the IDE) of the form:

```c#
public Foo(...) :
    this(...)
{
}
```

And about *16,000* of the form:

```c#
public Foo(...)
    : this(...)
{
}
```

That's less than 3% of the code uses the first form.  So this PR just makes the IDE codebase consistent here on this one style.

Note: in the future, i'd love a formatting rule that checked fort his (and would be happy to contribute it).  that way you'd get a nice squigle if you didn't write it either on the same line, or in this form.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36864</PullRequestID>
    <RepoID>1</RepoID>
    <Title>use JTF to avoid hang on OperationProgress API</Title>
    <PullRequestDescription>OperationProgress API we use to detect whether a solution is fully loaded calls into various providers that attribute to solution load. and some of them, unfortunately, require UI thread to proceed. 

according to the platform team, it is almost impossible to get rid of those restrictions since one of those providers could be a legacy component which we might not even have a control on it.

so now OperationProgress API (Workspace Status API is our abstraction) is only allowed to be used with await or JTF.Run on UI thread, we can never call it with "Wait" on UI thread otherwise, we can get into a deadlock.

this goes over all usage of OperationProgress API and uses JTF when needed.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36863</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190703.19
- **Date Produced**: 7/3/2019 10:58 PM
- **Commit**: 733f8297b68dd824044a77d955e62305b9dc43d5
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19353.19

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)













</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36862</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36861</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36860</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36855</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix code actions projects</Title>
    <PullRequestDescription>Fix the server handlers to respond to updates in the LSP package.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36854</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Handle synthesized top-level types in EnC symbol matcher</Title>
    <PullRequestDescription>The symbol matcher does not handle embedded attributes that the compiler emits to support features like `ref readonly`, nullable reference types, etc. The matcher needs to be aware of these attributes so that we can perform EnC on code that emits them.

This change comprises of several refactoring-only commits that clean up and simplify related code,
fix to https://github.com/dotnet/roslyn/issues/36926 and finally changes to symbol matcher to be able to match synthesized top-level types in potentially synthesized namespaces.

Also remove rude edits related to using `ref readonly` returns, `in` parameters and `ref` structs.
</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36853</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Throw exception in PlaceCaret</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36851</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36850</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master-vs-deps to features/razorSupport2</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master-vs-deps into features/razorSupport2.

``` bash
git fetch --all
git checkout merges/master-vs-deps-to-features/razorSupport2
git reset --hard upstream/features/razorSupport2
git merge upstream/master-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/master-vs-deps-to-features/razorSupport2 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36849</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/lspSupport</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/lspSupport.

``` bash
git fetch --all
git checkout merges/master-to-features/lspSupport
git reset --hard upstream/features/lspSupport
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/lspSupport --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36848</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36847</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36846</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36845</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>29/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36843</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update PublishData.json</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36842</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Bump master to 3.3.0-beta2</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36841</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Small Compiler Refactors</Title>
    <PullRequestDescription>Did a couple of small refactors as separate commits.

Commit 1: Unify our two EnumerableExtensions static classes. Fixes https://github.com/dotnet/roslyn/issues/36590
Commit 2: Add DebuggerHidden or DebuggerStepThrough to more visitor boilerplate methods to allow for easier debugging.

@jcouv this is what I mentioned in Teams earlier.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36836</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix header reading for Narrator on Pull Members Up dialog</Title>
    <PullRequestDescription>With a StackPanel in the custom header, Narrator reads the StackPanel class name. We could implement [ITableItemProvider](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.automation.provider.itableitemprovider) with a custom user control to correctly handle this, or just use a `CheckBox.Content` property to display the text. Now Narrator correctly reads the checkbox content when the header value needs to be read. </PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36834</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix formatting issues being flagged by the analyzer</Title>
    <PullRequestDescription>This doesn't fix all the issues: I'm filing bugs for the other ones where things seem broken.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36833</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Wire GetSpeculativeTypeInfo with nullability information</Title>
    <PullRequestDescription>@dotnet/roslyn-compiler @chsienki for review. /cc @jasonmalinowski @ryzngard 

Fixes https://github.com/dotnet/roslyn/issues/35037</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>29/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36832</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Nullchecked Lambdas and Local Functions + Constructor Tests</Title>
    <PullRequestDescription>
    </PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36831</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[WIP] Allow completion to be triggered from background thread</Title>
    <PullRequestDescription>_PR For Personal Review Only_

Experiment with initializing completion on the worker thread</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36828</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36827</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36826</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36825</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36824</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1-vs-deps to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/release/dev16.3-preview1-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36823</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36822</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.2-vs-deps
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36821</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to master</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into master.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-master
git reset --hard upstream/master
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-master --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36820</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.2 to release/dev16.3-preview1</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview1.

``` bash
git fetch --all
git checkout merges/release/dev16.2-to-release/dev16.3-preview1
git reset --hard upstream/release/dev16.3-preview1
git merge upstream/release/dev16.2
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.2-to-release/dev16.3-preview1 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36818</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Fix couple of false positives in unused parameter analyzer</Title>
    <PullRequestDescription>1. Do not flag parameters whose name has not yet been written (empty string). Fixes #36817
2. Do not flag parameters of partial method definition part. Fixes #36816</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36815</PullRequestID>
    <RepoID>1</RepoID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <PullRequestDescription>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:567feadf-e495-4ebb-cee4-08d67668456c)
## From https://github.com/dotnet/arcade
- **Build**: 20190626.44
- **Date Produced**: 6/27/2019 6:59 AM
- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Arcade.Sdk** -&gt; 1.0.0-beta.19326.44

[marker]: &lt;&gt; (End:567feadf-e495-4ebb-cee4-08d67668456c)

</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36813</PullRequestID>
    <RepoID>1</RepoID>
    <Title>EE formatters for IntPtr and UIntPtr</Title>
    <PullRequestDescription>Fixes Roslyn part of https://developercommunity.visualstudio.com/content/problem/491378/vb-intptr-error-bc30657-topointer-has-a-return-typ.html</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36811</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Update VS editor SDK version</Title>
    <PullRequestDescription>New version contains completion expander support.

@ivanbasov @jinujoseph @vatsalyaagrawal </PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36810</PullRequestID>
    <RepoID>1</RepoID>
    <Title> Honor DoesNotReturn and DoesNotReturnIf</Title>
    <PullRequestDescription>Implements part of https://github.com/dotnet/roslyn/issues/35816</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36809</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to features/param-nullchecking</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into features/param-nullchecking.

``` bash
git fetch --all
git checkout merges/master-to-features/param-nullchecking
git reset --hard upstream/features/param-nullchecking
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/param-nullchecking --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36808</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.

``` bash
git fetch --all
git checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps
git reset --hard upstream/release/dev16.3-preview1-vs-deps
git merge upstream/release/dev16.3-preview1
# Fix merge conflicts
git commit
git push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
  <PullRequest>
    <PullRequestID>36807</PullRequestID>
    <RepoID>1</RepoID>
    <Title>Merge master to master-vs-deps</Title>
    <PullRequestDescription>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</PullRequestDescription>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
  </PullRequest>
</PullRequests>