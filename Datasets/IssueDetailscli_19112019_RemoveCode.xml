<IssueDetails>
  <IssueDetail>
    <IssueLabelID>13047</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
    </Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>13040</IssueLabelID>
    <Title>Set DOTNET_ROOT in tests</Title>
    <Description>
    </Description>
    <Title_Description>Set DOTNET_ROOT in tests </Title_Description>
    <Label>tell-mode</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>13039</IssueLabelID>
    <Title>Set DOTNET_ROOT in tests</Title>
    <Description>
    </Description>
    <Title_Description>Set DOTNET_ROOT in tests </Title_Description>
    <Label>tell-mode</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>13033</IssueLabelID>
    <Title>WIP: Installation Script Update Test</Title>
    <Description>Installation Script Update Test</Description>
    <Title_Description>WIP: Installation Script Update Test Installation Script Update Test</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>13031</IssueLabelID>
    <Title>Update SDK to get mac10.15 signing fix</Title>
    <Description>part of https://github.com/dotnet/sdk/issues/3773</Description>
    <Title_Description>Update SDK to get mac10.15 signing fix part of https://github.com/dotnet/sdk/issues/3773</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>13030</IssueLabelID>
    <Title>Installation script update</Title>
    <Description>Installation script update

Addresses: https://github.com/dotnet/sdk/issues/3827</Description>
    <Title_Description>Installation script update Installation script update

Addresses: https://github.com/dotnet/sdk/issues/3827</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>13028</IssueLabelID>
    <Title>Merge release/2.1.5xx to 2.1.6xx to get mac 10.15 signing change</Title>
    <Description>
    </Description>
    <Title_Description>Merge release/2.1.5xx to 2.1.6xx to get mac 10.15 signing change </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>13027</IssueLabelID>
    <Title>Update SDK with mac10.15 signing fix</Title>
    <Description>part of https://github.com/dotnet/sdk/issues/3773</Description>
    <Title_Description>Update SDK with mac10.15 signing fix part of https://github.com/dotnet/sdk/issues/3773</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>13003</IssueLabelID>
    <Title>Remove signature on MAC host for dotnet tools</Title>
    <Description>Part of https://github.com/dotnet/sdk/issues/3773

@swaroop-sridhar</Description>
    <Title_Description>Remove signature on MAC host for dotnet tools Part of https://github.com/dotnet/sdk/issues/3773

@swaroop-sridhar</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>30/10/2019 11:57:49 PM +00:00</CreatedAt>
    <ClosedAt>31/10/2019 9:06:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12991</IssueLabelID>
    <Title>Merge release/3.0.1xx to release/3.1.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to release/3.1.1xx 
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>29/10/2019 12:04:50 PM +00:00</CreatedAt>
    <ClosedAt>29/10/2019 8:08:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12983</IssueLabelID>
    <Title>Port to release/3.1.1xx - Fix eventProperties.Add mutate _commonProperties</Title>
    <Description>port of this https://github.com/dotnet/cli/pull/12899</Description>
    <Title_Description>Port to release/3.1.1xx - Fix eventProperties.Add mutate _commonProperties port of this https://github.com/dotnet/cli/pull/12899</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12979</IssueLabelID>
    <Title>Razor build server (process 27970) failed to shut down: The shutdown command failed: The application to execute does not exist</Title>
    <Description>## Steps to reproduce






</Description>
    <Title_Description>Razor build server (process 27970) failed to shut down: The shutdown command failed: The application to execute does not exist ## Steps to reproduce






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12974</IssueLabelID>
    <Title>Merge release/3.0.1xx to release/3.1.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to release/3.1.1xx 
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>24/10/2019 12:05:09 AM +00:00</CreatedAt>
    <ClosedAt>25/10/2019 10:33:25 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12972</IssueLabelID>
    <Title>Fix typo</Title>
    <Description>Error made during 3.0.x servicing changes</Description>
    <Title_Description>Fix typo Error made during 3.0.x servicing changes</Title_Description>
    <Label>tell-mode</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>23/10/2019 9:27:44 PM +00:00</CreatedAt>
    <ClosedAt>25/10/2019 9:50:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12966</IssueLabelID>
    <Title>Port change to other branches</Title>
    <Description>- [x] https://github.com/dotnet/cli/pull/12955
- [x] https://github.com/dotnet/cli/pull/12899
</Description>
    <Title_Description>Port change to other branches - [x] https://github.com/dotnet/cli/pull/12955
- [x] https://github.com/dotnet/cli/pull/12899
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12955</IssueLabelID>
    <Title>Fix mark of the web</Title>
    <Description>
    </Description>
    <Title_Description>Fix mark of the web 
</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12925</IssueLabelID>
    <Title>Merge release/3.1.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.1.1xx into master.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.1.1xx to master 
This is an automatically generated pull request from release/3.1.1xx into master.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>19/10/2019 12:05:09 AM +00:00</CreatedAt>
    <ClosedAt>23/10/2019 9:15:08 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12913</IssueLabelID>
    <Title>Merge release/3.1.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.1.1xx into master.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.1.1xx to master 
This is an automatically generated pull request from release/3.1.1xx into master.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/10/2019 12:05:18 PM +00:00</CreatedAt>
    <ClosedAt>18/10/2019 10:19:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12912</IssueLabelID>
    <Title>Merge release/3.0.1xx to release/3.1.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to release/3.1.1xx 
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.


Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/10/2019 12:05:10 PM +00:00</CreatedAt>
    <ClosedAt>23/10/2019 9:17:13 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12915</IssueLabelID>
    <Title>dotnet tool manifest on windows container throws a COM error</Title>
    <Description>## Steps to reproduce the issue

Try to build the following Dockerfile with windows containers:

</Description>
    <Title_Description>dotnet tool manifest on windows container throws a COM error ## Steps to reproduce the issue

Try to build the following Dockerfile with windows containers:

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12903</IssueLabelID>
    <Title>Merge release/2.2.4xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.4xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>16/10/2019 12:04:16 PM +00:00</CreatedAt>
    <ClosedAt>17/10/2019 12:41:35 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12899</IssueLabelID>
    <Title>Fix eventProperties.Add mutate _commonProperties</Title>
    <Description>
    </Description>
    <Title_Description>Fix eventProperties.Add mutate _commonProperties </Title_Description>
    <Label>ask-mode</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12897</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/2.2.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/2.2.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/2.2.4xx 
This is an automatically generated pull request from release/2.2.2xx into release/2.2.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>16/10/2019 12:04:01 AM +00:00</CreatedAt>
    <ClosedAt>17/10/2019 2:14:55 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12886</IssueLabelID>
    <Title>publish -f netcoreapp3.0 errorneously looks for 'Microsoft.NETCore.App' version '2.0.0-preview1-002111-00'</Title>
    <Description>




</Description>
    <Title_Description>publish -f netcoreapp3.0 errorneously looks for 'Microsoft.NETCore.App', version '2.0.0-preview1-002111-00' 




</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12883</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>13/10/2019 12:03:51 PM +00:00</CreatedAt>
    <ClosedAt>15/10/2019 10:21:54 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12877</IssueLabelID>
    <Title>Run selenium in a global tool</Title>
    <Description># Steps to reproduce

1. Create a console app (.NET Core 2.1)
2. Add NuGet references for  output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100
 Commit:    04339c3a26

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100\

Host (useful for support):
  Version: 3.0.0
  Commit:  7d57652f33

.NET Core SDKs installed:
  1.0.0-preview2-003131 [C:\Program Files\dotnet\sdk]
  1.0.0 [C:\Program Files\dotnet\sdk]
  1.0.3 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.1.2 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007517 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007597 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300-preview2-008533 [C:\Program Files\dotnet\sdk]
  2.1.300-rc1-008673 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]
  2.1.502 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009426 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009472 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009497 [C:\Program Files\dotnet\sdk]
  2.1.600 [C:\Program Files\dotnet\sdk]
  2.1.601 [C:\Program Files\dotnet\sdk]
  2.1.602 [C:\Program Files\dotnet\sdk]
  2.1.700 [C:\Program Files\dotnet\sdk]
  2.2.108 [C:\Program Files\dotnet\sdk]
  3.0.100-rc1-014190 [C:\Program Files\dotnet\sdk]
  3.0.100 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-rc1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
  Microsoft.WindowsDesktop.App 3.0.0 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]


OP: https://stackoverflow.com/questions/58227979/how-to-embed-a-selenium-exe-into-a-nuget-package

Sample project: 
[SeleniumToolPoC.zip](https://github.com/dotnet/cli/files/3719482/SeleniumToolPoC.zip)

@wli3 </Description>
    <Title_Description>Run selenium in a global tool # Steps to reproduce

1. Create a console app (.NET Core 2.1)
2. Add NuGet references for  output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100
 Commit:    04339c3a26

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100\

Host (useful for support):
  Version: 3.0.0
  Commit:  7d57652f33

.NET Core SDKs installed:
  1.0.0-preview2-003131 [C:\Program Files\dotnet\sdk]
  1.0.0 [C:\Program Files\dotnet\sdk]
  1.0.3 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.1.2 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007517 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007597 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300-preview2-008533 [C:\Program Files\dotnet\sdk]
  2.1.300-rc1-008673 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]
  2.1.502 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009426 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009472 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009497 [C:\Program Files\dotnet\sdk]
  2.1.600 [C:\Program Files\dotnet\sdk]
  2.1.601 [C:\Program Files\dotnet\sdk]
  2.1.602 [C:\Program Files\dotnet\sdk]
  2.1.700 [C:\Program Files\dotnet\sdk]
  2.2.108 [C:\Program Files\dotnet\sdk]
  3.0.100-rc1-014190 [C:\Program Files\dotnet\sdk]
  3.0.100 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-rc1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
  Microsoft.WindowsDesktop.App 3.0.0 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]


OP: https://stackoverflow.com/questions/58227979/how-to-embed-a-selenium-exe-into-a-nuget-package

Sample project: 
[SeleniumToolPoC.zip](https://github.com/dotnet/cli/files/3719482/SeleniumToolPoC.zip)

@wli3 </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12874</IssueLabelID>
    <Title>Merge release/2.1.8xx to release/2.2.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.8xx into release/2.2.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.8xx to release/2.2.4xx 
This is an automatically generated pull request from release/2.1.8xx into release/2.2.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12869</IssueLabelID>
    <Title>Merge release/3.1.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.1.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.1.1xx to master 
This is an automatically generated pull request from release/3.1.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/10/2019 12:04:33 AM +00:00</CreatedAt>
    <ClosedAt>17/10/2019 4:13:47 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12868</IssueLabelID>
    <Title>Merge release/3.0.1xx to release/3.1.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to release/3.1.1xx 
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12867</IssueLabelID>
    <Title>Merge release/2.2.4xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.4xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12866</IssueLabelID>
    <Title>Merge release/2.1.8xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.8xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.8xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.8xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/10/2019 12:04:00 AM +00:00</CreatedAt>
    <ClosedAt>11/10/2019 3:48:59 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12865</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>11/10/2019 12:03:47 AM +00:00</CreatedAt>
    <ClosedAt>13/10/2019 4:31:53 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12856</IssueLabelID>
    <Title>Button "Uninstall" is truncated on the SDK uninstallation wizard with Japanese</Title>
    <Description>## Steps to reproduce
1.Open the sdk installation file (.NET core SDK 3.1.100-preview1-014459) and install it.
2.Open control panel and uninstall the SDK(3.1.100-preview1-014459)
2.Observe the button "アンインストール" .

## Expected  behavior
Button content isn't truncated

## Actual behavior
Button content is truncated
![image](https://user-images.githubusercontent.com/38854445/66559124-6a6ab080-eb87-11e9-897d-0104c0ee3b5a.png)
![image](https://user-images.githubusercontent.com/38854445/66559579-317f0b80-eb88-11e9-9414-19598bd10c80.png)

## Environment data
 output:
.NET Core SDK (global.json を反映):
 Version:   3.1.100-preview1-014459
 Commit:    ac3b59712d

ランタイム環境:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.1.100-preview1-014459\

Host (useful for support):
  Version: 3.1.0-preview1.19506.1
  Commit:  bbf5542781

.NET Core SDKs installed:
  3.1.100-preview1-014394 [C:\Program Files\dotnet\sdk]
  3.1.100-preview1-014459 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.1.0-preview1.19475.24 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.1.0-preview1.19480.27 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.1.0-preview1.19480.27 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>Button "Uninstall" is truncated on the SDK uninstallation wizard with Japanese ## Steps to reproduce
1.Open the sdk installation file (.NET core SDK 3.1.100-preview1-014459) and install it.
2.Open control panel and uninstall the SDK(3.1.100-preview1-014459)
2.Observe the button "アンインストール" .

## Expected  behavior
Button content isn't truncated

## Actual behavior
Button content is truncated
![image](https://user-images.githubusercontent.com/38854445/66559124-6a6ab080-eb87-11e9-897d-0104c0ee3b5a.png)
![image](https://user-images.githubusercontent.com/38854445/66559579-317f0b80-eb88-11e9-9414-19598bd10c80.png)

## Environment data
 output:
.NET Core SDK (global.json を反映):
 Version:   3.1.100-preview1-014459
 Commit:    ac3b59712d

ランタイム環境:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.1.100-preview1-014459\

Host (useful for support):
  Version: 3.1.0-preview1.19506.1
  Commit:  bbf5542781

.NET Core SDKs installed:
  3.1.100-preview1-014394 [C:\Program Files\dotnet\sdk]
  3.1.100-preview1-014459 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.1.0-preview1.19475.24 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.1.0-preview1.19480.27 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.1.0-preview1.19480.27 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12849</IssueLabelID>
    <Title>'dotnet publish' ignores file name casing.</Title>
    <Description>## Steps to reproduce
Create a project named with Pascal casing style and DO NOT set  output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100
 Commit:    04339c3a26

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.18362
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100\

Host (useful for support):
  Version: 3.0.0
  Commit:  7d57652f33</Description>
    <Title_Description>'dotnet publish' ignores file name casing. ## Steps to reproduce
Create a project named with Pascal casing style and DO NOT set  output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100
 Commit:    04339c3a26

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.18362
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100\

Host (useful for support):
  Version: 3.0.0
  Commit:  7d57652f33</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12795</IssueLabelID>
    <Title>dotnet tool install fails behind authenticated proxy on linux</Title>
    <Description>## Steps to reproduce
export http_proxy=&lt;proxy info here&gt;
export https_proxy=&lt;proxy info here&gt;
dotnet tool install --global dotnet-trace

## Expected  behavior
It should install the dotnet-trace tool

## Actual behavior
It fails with
/dotnet/sdk/3.0.100/NuGet.targets(1235): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/tmp/nmcypofv.dnl/restore.csproj]
/dotnet/sdk/3.0.100/NuGet.targets(1235): error :   Response status code does not indicate success: 407 (authenticationrequired). [/tmp/nmcypofv.dnl/restore.csproj]

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   3.0.100
 Commit:    04339c3a26

Runtime Environment:
 OS Name:     centos
 OS Version:  7
 OS Platform: Linux
 RID:         centos.7-x64
 Base Path:   /dotnet/sdk/3.0.100/

Host (useful for support):
  Version: 3.0.0
  Commit:  7d57652f33

.NET Core SDKs installed:
  3.0.100 [/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.App 3.0.0 [/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 3.0.0 [/dotnet/shared/Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Description>
    <Title_Description>dotnet tool install fails behind authenticated proxy on linux ## Steps to reproduce
export http_proxy=&lt;proxy info here&gt;
export https_proxy=&lt;proxy info here&gt;
dotnet tool install --global dotnet-trace

## Expected  behavior
It should install the dotnet-trace tool

## Actual behavior
It fails with
/dotnet/sdk/3.0.100/NuGet.targets(1235): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/tmp/nmcypofv.dnl/restore.csproj]
/dotnet/sdk/3.0.100/NuGet.targets(1235): error :   Response status code does not indicate success: 407 (authenticationrequired). [/tmp/nmcypofv.dnl/restore.csproj]

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   3.0.100
 Commit:    04339c3a26

Runtime Environment:
 OS Name:     centos
 OS Version:  7
 OS Platform: Linux
 RID:         centos.7-x64
 Base Path:   /dotnet/sdk/3.0.100/

Host (useful for support):
  Version: 3.0.0
  Commit:  7d57652f33

.NET Core SDKs installed:
  3.0.100 [/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.App 3.0.0 [/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 3.0.0 [/dotnet/shared/Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12750</IssueLabelID>
    <Title>Enable SDK version harvesting from a global.json file</Title>
    <Description>Enable SDK version harvesting from a global.json file

Addresses: https://github.com/dotnet/cli/issues/12175
Related: https://github.com/actions/setup-dotnet/issues/14

**Adding a "jsonfile" parameter:**
scripts/obtain/dotnet-install.ps1
scripts/obtain/dotnet-install.sh

**Adding a install script 'dryrun' test:**
TestAssets/InstallationScriptTests/InstallationScriptTests.json
test/InstallationScript.Tests/GivenThatIWantToInstallTheSdkFromAScript.cs 

</Description>
    <Title_Description>Enable SDK version harvesting from a global.json file Enable SDK version harvesting from a global.json file

Addresses: https://github.com/dotnet/cli/issues/12175
Related: https://github.com/actions/setup-dotnet/issues/14

**Adding a "jsonfile" parameter:**
scripts/obtain/dotnet-install.ps1
scripts/obtain/dotnet-install.sh

**Adding a install script 'dryrun' test:**
TestAssets/InstallationScriptTests/InstallationScriptTests.json
test/InstallationScript.Tests/GivenThatIWantToInstallTheSdkFromAScript.cs 

</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12744</IssueLabelID>
    <Title>Merge release/3.0.1xx to release/3.1.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to release/3.1.1xx 
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>28/09/2019 12:03:56 PM +00:00</CreatedAt>
    <ClosedAt>10/10/2019 9:11:00 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12734</IssueLabelID>
    <Title>[release/3.1.1xx] Update dependencies from dotnet/sdk</Title>
    <Description>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)
## From https://github.com/dotnet/sdk
- **Build**: 20190927.1
- **Date Produced**: 9/27/2019 5:24 PM
- **Commit**: 2dca73e46cfbb24b3fc429ae4e2095fc6ba8ef5b
- **Branch**: refs/heads/release/3.1.1xx
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.1.100-preview1.19477.1

[marker]: &lt;&gt; (End:3731cb06-cbf9-46bf-a883-08d7219800a1)



</Description>
    <Title_Description>[release/3.1.1xx] Update dependencies from dotnet/sdk This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)
## From https://github.com/dotnet/sdk
- **Build**: 20190927.1
- **Date Produced**: 9/27/2019 5:24 PM
- **Commit**: 2dca73e46cfbb24b3fc429ae4e2095fc6ba8ef5b
- **Branch**: refs/heads/release/3.1.1xx
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.1.100-preview1.19477.1

[marker]: &lt;&gt; (End:3731cb06-cbf9-46bf-a883-08d7219800a1)



</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12727</IssueLabelID>
    <Title>[release/3.1.1xx] Update dependencies from dotnet/templating</Title>
    <Description>This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)
## From https://github.com/dotnet/templating
- **Build**: 20190926.7
- **Date Produced**: 9/26/2019 9:06 PM
- **Commit**: fa98e14b1b8d84a1a711ef909384f16ada8bbe7c
- **Branch**: refs/heads/release/3.1
- **Updates**:
  - **Microsoft.TemplateEngine.Cli** -&gt; 3.1.0-preview1.19476.7

[marker]: &lt;&gt; (End:2f46839f-4f80-4d33-eeee-08d727dab80f)

</Description>
    <Title_Description>[release/3.1.1xx] Update dependencies from dotnet/templating This pull request updates the following dependencies

[marker]: &lt;&gt; (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)
## From https://github.com/dotnet/templating
- **Build**: 20190926.7
- **Date Produced**: 9/26/2019 9:06 PM
- **Commit**: fa98e14b1b8d84a1a711ef909384f16ada8bbe7c
- **Branch**: refs/heads/release/3.1
- **Updates**:
  - **Microsoft.TemplateEngine.Cli** -&gt; 3.1.0-preview1.19476.7

[marker]: &lt;&gt; (End:2f46839f-4f80-4d33-eeee-08d727dab80f)

</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12713</IssueLabelID>
    <Title>"dotnet new -l" using a 3.1.100 preview SDK welcomes me to .NET Core 3.0 instead</Title>
    <Description>(Copying from mail) Encountered by scenario testing on .NET Core 3.1.100-preview1-014066 SDK:

![welcome](https://user-images.githubusercontent.com/12819531/65627984-1e6c1900-df96-11e9-92f6-756a8ef87408.png)

It looks like this string controls it:

https://github.com/dotnet/cli/blob/5dd9784ad7f75ee4ebd74f7a177667470c9ec36e/src/Microsoft.DotNet.Configurer/LocalizableStrings.resx#L121
</Description>
    <Title_Description>"dotnet new -l" using a 3.1.100 preview SDK welcomes me to .NET Core 3.0 instead (Copying from mail) Encountered by scenario testing on .NET Core 3.1.100-preview1-014066 SDK:

![welcome](https://user-images.githubusercontent.com/12819531/65627984-1e6c1900-df96-11e9-92f6-756a8ef87408.png)

It looks like this string controls it:

https://github.com/dotnet/cli/blob/5dd9784ad7f75ee4ebd74f7a177667470c9ec36e/src/Microsoft.DotNet.Configurer/LocalizableStrings.resx#L121
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12663</IssueLabelID>
    <Title>Latest version of 3.0.xx/release branch cannot be found</Title>
    <Description>The latest stable version of the sdk can be found here:
https://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/latest.version

</Description>
    <Title_Description>Latest version of 3.0.xx/release branch cannot be found The latest stable version of the sdk can be found here:
https://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/latest.version

</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12648</IssueLabelID>
    <Title>Enh request: Update dotnet-install script to cache and use previously downloaded SDK</Title>
    <Description>This is an enhancement request for .  

Can we get a new parameter to request that this script only download the selected SDK **if** it can't find a find previously downloaded SDK in the temp directory (or wherever it places the SDK archive upon download)?  

I know a lot build machines these days start with a fresh image but that isn't the case for our build machines. There really is no need to re-download a several hundred MB file just to overwrite the very same file.  Seems like this could also save bandwidth on Microsoft's Azure servers.</Description>
    <Title_Description>Enh request: Update dotnet-install script to cache and use previously downloaded SDK This is an enhancement request for .  

Can we get a new parameter to request that this script only download the selected SDK **if** it can't find a find previously downloaded SDK in the temp directory (or wherever it places the SDK archive upon download)?  

I know a lot build machines these days start with a fresh image but that isn't the case for our build machines. There really is no need to re-download a several hundred MB file just to overwrite the very same file.  Seems like this could also save bandwidth on Microsoft's Azure servers.</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12635</IssueLabelID>
    <Title>https://dot.net/v1/dotnet-install.ps1  does not support `windowsdesktop` `Runtime` </Title>
    <Description>Support for  was added by https://github.com/dotnet/cli/pull/12315 and the website download copy was (I think) updated by https://github.com/dotnet/dotnet-core-website/pull/1458. 

Still it looks like the copy of dotnet-install.ps1 hosted at https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script is the one that seems to be a version prior to when windowsdesktop support was added.

/cc @johnbeisner @dagood </Description>
    <Title_Description>https://dot.net/v1/dotnet-install.ps1  does not support  was added by https://github.com/dotnet/cli/pull/12315 and the website download copy was (I think) updated by https://github.com/dotnet/dotnet-core-website/pull/1458. 

Still it looks like the copy of dotnet-install.ps1 hosted at https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script is the one that seems to be a version prior to when windowsdesktop support was added.

/cc @johnbeisner @dagood </Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12632</IssueLabelID>
    <Title>Unable to download latest SDK 2.2</Title>
    <Description>## Steps to reproduce
Running the following step in our builds fails due to the "latest" available package not being correct.  From the git repo the version should  be 2.2.402 not 2.2.804.

.\dotnet-install.ps1 -Channel 2.2 -Version latest -Architecture x64

Explicitly adding -Version "2.2.402" does download the sdk.

## Expected  behavior
The correct latest package should be retrieved and downloaded

## Actual behavior
The install script is using version 2.2.804...

=== Install DotNet SDK ===

dotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.802/dotnet-sdk-2.2.802-win-x64.zip
dotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.802/dotnet-sdk-2.2.802-win-x64.zip
dotnet-install: Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.802/dotnet-dev-win-x64.2.2.802.zip
dotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.802/dotnet-dev-win-x64.2.2.802.zip
powershell.exe : Could not find/download: ".NET Core SDK" with version = 2.2.802






</Description>
    <Title_Description>Unable to download latest SDK 2.2 ## Steps to reproduce
Running the following step in our builds fails due to the "latest" available package not being correct.  From the git repo the version should  be 2.2.402 not 2.2.804.

.\dotnet-install.ps1 -Channel 2.2 -Version latest -Architecture x64

Explicitly adding -Version "2.2.402" does download the sdk.

## Expected  behavior
The correct latest package should be retrieved and downloaded

## Actual behavior
The install script is using version 2.2.804...

=== Install DotNet SDK ===

dotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.802/dotnet-sdk-2.2.802-win-x64.zip
dotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.802/dotnet-sdk-2.2.802-win-x64.zip
dotnet-install: Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.802/dotnet-dev-win-x64.2.2.802.zip
dotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.802/dotnet-dev-win-x64.2.2.802.zip
powershell.exe : Could not find/download: ".NET Core SDK" with version = 2.2.802






</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12622</IssueLabelID>
    <Title>Merge release/3.0.100-preview9 to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.100-preview9 to release/3.0.1xx 
This is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>12/09/2019 7:47:08 PM +00:00</CreatedAt>
    <ClosedAt>14/09/2019 2:52:57 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12621</IssueLabelID>
    <Title>Missing github releases of 2.2.109 2.2.206 and 2.2.402</Title>
    <Description>Hey there y'all
I was just looking at the .Net release page and notice y'all had cut releases of the SDK but haven't cut any versions here. I was wondering if there was a reason that there were no github release and also if it would be possible to get those release cut +dependencies?





</Description>
    <Title_Description>Missing github releases of 2.2.109, 2.2.206, and 2.2.402 Hey there y'all
I was just looking at the .Net release page and notice y'all had cut releases of the SDK but haven't cut any versions here. I was wondering if there was a reason that there were no github release and also if it would be possible to get those release cut +dependencies?





</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12602</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/09/2019 12:03:51 PM +00:00</CreatedAt>
    <ClosedAt>10/10/2019 8:42:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12591</IssueLabelID>
    <Title>Fix resource names that regressed with move to arcade</Title>
    <Description>## Description

Due to a build misconfiguration most resources in satellite assemblies have incorrect names.

## Customer Impact

 checked resource names in ILSpy.

## Risk
Low

-- 

The setting of EmbeddedResource.ManifestResourceName was moved to arcade but happens too late in the build to have the desired effect.

This change adds a dependency on to the arcade target to force it to happen with correct timing.

Filed https://github.com/dotnet/xliff-tasks/issues/206 so that neither arcade nor cli need any of this build customization for this case.</Description>
    <Title_Description>Fix resource names that regressed with move to arcade ## Description

Due to a build misconfiguration most resources in satellite assemblies have incorrect names.

## Customer Impact

 checked resource names in ILSpy.

## Risk
Low

-- 

The setting of EmbeddedResource.ManifestResourceName was moved to arcade but happens too late in the build to have the desired effect.

This change adds a dependency on to the arcade target to force it to happen with correct timing.

Filed https://github.com/dotnet/xliff-tasks/issues/206 so that neither arcade nor cli need any of this build customization for this case.</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>10/09/2019 9:53:38 PM +00:00</CreatedAt>
    <ClosedAt>11/09/2019 7:55:50 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12571</IssueLabelID>
    <Title>dotnet-install.sh not installing the latest SDK version</Title>
    <Description>## Steps to reproduce



## Expected  behavior
To install the latest SDK version (2.2)

## Actual behavior
It's installing 2.1.701 version

Original issue: https://github.com/dotnet/docs/issues/10447


</Description>
    <Title_Description>dotnet-install.sh not installing the latest SDK version ## Steps to reproduce



## Expected  behavior
To install the latest SDK version (2.2)

## Actual behavior
It's installing 2.1.701 version

Original issue: https://github.com/dotnet/docs/issues/10447


</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12506</IssueLabelID>
    <Title>Merge release/3.0.100-preview9 to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.100-preview9 to release/3.0.1xx 
This is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>6/09/2019 12:04:07 AM +00:00</CreatedAt>
    <ClosedAt>12/09/2019 6:00:23 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12505</IssueLabelID>
    <Title>Remove unused files</Title>
    <Description>Some files got added to the packaging/ directory that came from 2.2 -&gt; master merges. These files are not needed as this repo does not build the installer packages anymore.

More importantly the eula.rtf file is tripping a wire for source build which is why I've targeted this cleanup at 3.0.

## Description
An unused eula.rtf file in the repo is flagged by source build as not being an appropriate license.

## Customer Impact

None for actual customers. The file is not used

Blocking for source build though.

### Workaround

Special steps could be added to source build to exclude the file from the tarball but that is pointless since the file is actually unused so simply deleting it is the obvious best fix.

## Regression?

Yes at some point extra files were integrated from 2.x branch to 3.0 unnecessarily

## Testing

N/A just deleting unused files.

## Risk
Very low.</Description>
    <Title_Description>Remove unused files Some files got added to the packaging/ directory that came from 2.2 -&gt; master merges. These files are not needed as this repo does not build the installer packages anymore.

More importantly the eula.rtf file is tripping a wire for source build which is why I've targeted this cleanup at 3.0.

## Description
An unused eula.rtf file in the repo is flagged by source build as not being an appropriate license.

## Customer Impact

None for actual customers. The file is not used

Blocking for source build though.

### Workaround

Special steps could be added to source build to exclude the file from the tarball but that is pointless since the file is actually unused so simply deleting it is the obvious best fix.

## Regression?

Yes at some point extra files were integrated from 2.x branch to 3.0 unnecessarily

## Testing

N/A just deleting unused files.

## Risk
Very low.</Title_Description>
    <Label>source-build</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>5/09/2019 11:18:03 PM +00:00</CreatedAt>
    <ClosedAt>10/09/2019 5:56:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12485</IssueLabelID>
    <Title>Better error message for "windowsdesktop" usage</Title>
    <Description>If the string "windowsdesktop" is used with "-runtime"; then and only then give the windowsdesktop error message.
</Description>
    <Title_Description>Better error message for "windowsdesktop" usage If the string "windowsdesktop" is used with "-runtime"; then and only then give the windowsdesktop error message.
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12476</IssueLabelID>
    <Title>Getting NULL when using ResourceManager.GetString() with strings using placeholders</Title>
    <Description>I have a embedded Resource.resx file and a Resource.Designer.cs autogenerated containing many string resources some of them have placeholders (i.e. "Hello '{0}'") and these are the ones that are returning **null** when calling from code i.e. Resource.KeyName. This Resource.resx file exist in a library project with TargetFrameworks net452 netstandard2.0 and netstandard2.1. I'm dealing with this issue when I run my Test Project (net452 netcoreapp3.0 netcoreapp2.2) and make use of that Resource.

This issue is only happening when the tests are ran using **net452** (I have tried with net472 also and behaves the same) with resources containing placeholders and compiling/running tests from **CLI** (dotnet test) when using VS it's working fine. I had to add the following to my .csproj of the library because it was failing at compiling: 



**SDK used: 3.0.100-preview8-013656**
</Description>
    <Title_Description>Getting NULL when using ResourceManager.GetString() with strings using placeholders I have a embedded Resource.resx file and a Resource.Designer.cs autogenerated containing many string resources some of them have placeholders (i.e. "Hello '{0}'") and these are the ones that are returning **null** when calling from code i.e. Resource.KeyName. This Resource.resx file exist in a library project with TargetFrameworks net452 netstandard2.0 and netstandard2.1. I'm dealing with this issue when I run my Test Project (net452 netcoreapp3.0 netcoreapp2.2) and make use of that Resource.

This issue is only happening when the tests are ran using **net452** (I have tried with net472 also and behaves the same) with resources containing placeholders and compiling/running tests from **CLI** (dotnet test) when using VS it's working fine. I had to add the following to my .csproj of the library because it was failing at compiling: 



**SDK used: 3.0.100-preview8-013656**
</Title_Description>
    <Label>
    </Label>
    <Assignee>rainersigwald</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12422</IssueLabelID>
    <Title> [loc][Query][cli] Localizability of "0; "ToolInstallationFailedWithRestoreGuidance</Title>
    <Description>Hi
please help localization team to answer question from translator.
In case translator is not sure about context/meaning/localizability of string we raise a question.

Source:
Tool '{0}' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons including package naming enforcement visit https://aka.ms/failure-installing-tool

File Name:
dotnet\commands\dotnet-tool\install\xlf\LocalizableStrings.xlf

==========================================
Query:
Please explain the meaning of "package naming enforcement".</Description>
    <Title_Description> [loc][Query][cli] Localizability of "0; "ToolInstallationFailedWithRestoreGuidance Hi
please help localization team to answer question from translator.
In case translator is not sure about context/meaning/localizability of string we raise a question.

Source:
Tool '{0}' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons including package naming enforcement visit https://aka.ms/failure-installing-tool

File Name:
dotnet\commands\dotnet-tool\install\xlf\LocalizableStrings.xlf

==========================================
Query:
Please explain the meaning of "package naming enforcement".</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12345</IssueLabelID>
    <Title>Merge release/3.1.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.1.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.1.1xx to master 
This is an automatically generated pull request from release/3.1.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>23/08/2019 12:04:42 AM +00:00</CreatedAt>
    <ClosedAt>10/10/2019 8:44:04 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12344</IssueLabelID>
    <Title>Merge release/3.0.1xx to release/3.1.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to release/3.1.1xx 
This is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12343</IssueLabelID>
    <Title>Merge release/3.0.100-preview9 to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.100-preview9 to release/3.0.1xx 
This is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>23/08/2019 12:04:27 AM +00:00</CreatedAt>
    <ClosedAt>5/09/2019 7:25:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12342</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.100-preview9</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.100-preview9.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.100-preview9 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.100-preview9.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>23/08/2019 12:04:20 AM +00:00</CreatedAt>
    <ClosedAt>10/10/2019 9:09:00 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12328</IssueLabelID>
    <Title>The install scripts rely on a failure to download as a normal procedure</Title>
    <Description>The install scripts rely on a failure to download as a normal procedure.

The 'primary' blob storage location is tried
    if the download fails
The 'legacy' blob storage location is tried

This can be confusing to users as they see an 'error' in a successful process.


**Proposal:**
1. Maintain a hint path table with presedential ordering
2. Perform a 'lookup' first before trying a download [retry]
3. If found then download [retry]
4. if not found error-out with all the paths attempted.





</Description>
    <Title_Description>The install scripts rely on a failure to download as a normal procedure The install scripts rely on a failure to download as a normal procedure.

The 'primary' blob storage location is tried
    if the download fails
The 'legacy' blob storage location is tried

This can be confusing to users as they see an 'error' in a successful process.


**Proposal:**
1. Maintain a hint path table with presedential ordering
2. Perform a 'lookup' first before trying a download [retry]
3. If found then download [retry]
4. if not found error-out with all the paths attempted.





</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12324</IssueLabelID>
    <Title>Add `dotnet tool run` for one-time invocation without install</Title>
    <Description>Add . This would enable users to run a package one time without having to first install it. This can be especially useful for tools that are used on occasion but users generally always want the latest version.</Description>
    <Title_Description>Add . This would enable users to run a package one time without having to first install it. This can be especially useful for tools that are used on occasion but users generally always want the latest version.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12315</IssueLabelID>
    <Title>Add support for Microsoft.WindowsDesktop.App</Title>
    <Description>Add support for Microsoft.WindowsDesktop.App

Addresses: https://github.com/dotnet/cli/issues/11115 &amp; https://github.com/dotnet/docs/issues/11943

Related: https://github.com/dotnet/core-setup/issues/6370

**Testing:** 
</Description>
    <Title_Description>Add support for Microsoft.WindowsDesktop.App Add support for Microsoft.WindowsDesktop.App

Addresses: https://github.com/dotnet/cli/issues/11115 &amp; https://github.com/dotnet/docs/issues/11943

Related: https://github.com/dotnet/core-setup/issues/6370

**Testing:** 
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12301</IssueLabelID>
    <Title>Remove link to non-existing document</Title>
    <Description>Spotted in #12299 </Description>
    <Title_Description>Remove link to non-existing document Spotted in #12299 </Title_Description>
    <Label>documentation</Label>
    <CreatedAt>20/08/2019 10:42:56 AM +00:00</CreatedAt>
    <ClosedAt>20/08/2019 5:01:00 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12289</IssueLabelID>
    <Title>tool manifest should contain nuget package source</Title>
    <Description>## Steps to reproduce
Install a tool locally using a local source

## Expected  behavior
dotnet-tools.json to include source information beside version commands etc.

## Actual behavior
dotnet-tools.json does not record the source of the package

This would help to update local tools with different sources.

## Environment data
Version: 3.0.0-preview8-28405-07






</Description>
    <Title_Description>tool manifest should contain nuget package source ## Steps to reproduce
Install a tool locally using a local source

## Expected  behavior
dotnet-tools.json to include source information beside version commands etc.

## Actual behavior
dotnet-tools.json does not record the source of the package

This would help to update local tools with different sources.

## Environment data
Version: 3.0.0-preview8-28405-07






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12288</IssueLabelID>
    <Title>dotnet tool commands should work offline for local sources</Title>
    <Description>I noticed that sometimes dotnet tool update hangs and realized that was due to connection issues. However I was not expecting this behavior since I was providing a local source.

## Steps to reproduce
Poor wifi connection (or no connection I haven't tested)
Use a local nupkg folder as source

## Expected  behavior
Operation to work quickly

## Actual behavior
Operation hangs or waits for a long timeout?
I am not sure if this is due to telemetry or it always checks with server. 
If this is due to telemetry I think timeout should be very short.
If it checks with nuget server even when using a local folder it should be lower priority.

I think working offline will be a common scenario especially in CI environments.

## Environment data
I'm using core 3 preview 8.






</Description>
    <Title_Description>dotnet tool commands should work offline for local sources I noticed that sometimes dotnet tool update hangs and realized that was due to connection issues. However I was not expecting this behavior since I was providing a local source.

## Steps to reproduce
Poor wifi connection (or no connection I haven't tested)
Use a local nupkg folder as source

## Expected  behavior
Operation to work quickly

## Actual behavior
Operation hangs or waits for a long timeout?
I am not sure if this is due to telemetry or it always checks with server. 
If this is due to telemetry I think timeout should be very short.
If it checks with nuget server even when using a local folder it should be lower priority.

I think working offline will be a common scenario especially in CI environments.

## Environment data
I'm using core 3 preview 8.






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12270</IssueLabelID>
    <Title>exe is not produced when PackAsTool = true</Title>
    <Description>## Steps to reproduce

- Create a new project
- Add 

## Expected  behavior

You get an exe

## Actual behavior

No exe.

## Environment data
3.0 Preview 8

## Commentary

I think of PackAsTool as a publishing choice. Everything about the dev experience should be the same as regular projects until you act on packing the project as a tool.

I understand that there are some challenges here in that we don't have a good way of not publishing a build asset.

/cc @vitek-karas 




</Description>
    <Title_Description>exe is not produced when PackAsTool = true ## Steps to reproduce

- Create a new project
- Add 

## Expected  behavior

You get an exe

## Actual behavior

No exe.

## Environment data
3.0 Preview 8

## Commentary

I think of PackAsTool as a publishing choice. Everything about the dev experience should be the same as regular projects until you act on packing the project as a tool.

I understand that there are some challenges here in that we don't have a good way of not publishing a build asset.

/cc @vitek-karas 




</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12269</IssueLabelID>
    <Title>preview8 - signal SIGSEGV on executables</Title>
    <Description># preview8 - signal SIGSEGV on executables

Create a console app "console1" and run with </Description>
    <Title_Description>preview8 - signal SIGSEGV on executables # preview8 - signal SIGSEGV on executables

Create a console app "console1" and run with </Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12257</IssueLabelID>
    <Title>Cannot enable Major version roll-forward for 2.x apps</Title>
    <Description>## Steps to reproduce

I attempted to enable major-version roll-forward for the [dotnetsay .NET Core tool](https://github.com/dotnet/core/blob/master/samples/dotnetsay/dotnetsay.csproj).

I added  value to enable it to be used. It is an important scenario for enabling 3.0 users (on 3.x-only machines) to use 2.x tools. 

The only other option to enable 2.x tools to run on 3.x is to multi-target. I'm not a fan of that being the only option (in the case you are only doing it for this scenario and not taking advantage of 3.x APIs).

## Timeframe

Please consider for 3.0.

/cc @vitek-karas @livarcocc @KathleenDollard </Description>
    <Title_Description>Cannot enable Major version roll-forward for 2.x apps ## Steps to reproduce

I attempted to enable major-version roll-forward for the [dotnetsay .NET Core tool](https://github.com/dotnet/core/blob/master/samples/dotnetsay/dotnetsay.csproj).

I added  value to enable it to be used. It is an important scenario for enabling 3.0 users (on 3.x-only machines) to use 2.x tools. 

The only other option to enable 2.x tools to run on 3.x is to multi-target. I'm not a fan of that being the only option (in the case you are only doing it for this scenario and not taking advantage of 3.x APIs).

## Timeframe

Please consider for 3.0.

/cc @vitek-karas @livarcocc @KathleenDollard </Title_Description>
    <Label>
    </Label>
    <Assignee>vitek-karas</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12234</IssueLabelID>
    <Title>dotnet tool install fails if dotnet-sdk is on a read-only file system</Title>
    <Description>## Steps to reproduce

This happens if the filesystem where dotnet-sdk is installed is mounted read-only like on NixOS.
To reproduce
mark 




</Description>
    <Title_Description>dotnet tool install fails, if dotnet-sdk is on a read-only file system ## Steps to reproduce

This happens if the filesystem where dotnet-sdk is installed is mounted read-only like on NixOS.
To reproduce
mark 




</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12233</IssueLabelID>
    <Title>dotnet test should escape MSBuild special characters in filter</Title>
    <Description>Inspired by @yshpakov's dotnet/docs#13749.

</Description>
    <Title_Description>dotnet test should escape MSBuild special characters in filter Inspired by @yshpakov's dotnet/docs#13749.

</Title_Description>
    <Label>dotnet-test</Label>
    <CreatedAt>13/08/2019 3:45:14 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12207</IssueLabelID>
    <Title>Problem installing SDK 3.0.100-preview7-012821</Title>
    <Description>Hello

I tried to install .Net Core SDK 3.0.100-preview7-012821 but the Windows installer completes after 3 seconds without any error and none of the packages are installed at 
- reboot system
- download SDK again
- cried out for help!
- write this issue

Note: .Net Core SDK dotnet-sdk-2.2.401-win-x64.exe setup runs without any problems!

## Steps to reproduce
1. download .Net Core SDK 3.0.100-preview7-012821 for Window 64Bit from https://dotnet.microsoft.com/download/dotnet-core/3.0
2. run the installer

## Expected  behavior
Setup should run normal installation process and do its intended thing!

## Actual behavior
Setup completes after 3 seconds nothing is installed.

## Environment data
OS: Windows 10 Education 1903 (18326.267)






</Description>
    <Title_Description>Problem installing SDK 3.0.100-preview7-012821 Hello

I tried to install .Net Core SDK 3.0.100-preview7-012821 but the Windows installer completes after 3 seconds without any error and none of the packages are installed at 
- reboot system
- download SDK again
- cried out for help!
- write this issue

Note: .Net Core SDK dotnet-sdk-2.2.401-win-x64.exe setup runs without any problems!

## Steps to reproduce
1. download .Net Core SDK 3.0.100-preview7-012821 for Window 64Bit from https://dotnet.microsoft.com/download/dotnet-core/3.0
2. run the installer

## Expected  behavior
Setup should run normal installation process and do its intended thing!

## Actual behavior
Setup completes after 3 seconds nothing is installed.

## Environment data
OS: Windows 10 Education 1903 (18326.267)






</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12176</IssueLabelID>
    <Title>Add yaml stages</Title>
    <Description>#### Description

This is a planned change to onboard to yaml stages.

#### Customer Impact

Infra-structure change.

#### Regression?

No.

#### Risk

Low</Description>
    <Title_Description>Add yaml stages #### Description

This is a planned change to onboard to yaml stages.

#### Customer Impact

Infra-structure change.

#### Regression?

No.

#### Risk

Low</Title_Description>
    <Label>tell-mode</Label>
    <CreatedAt>8/08/2019 5:15:03 PM +00:00</CreatedAt>
    <ClosedAt>9/08/2019 4:50:06 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12175</IssueLabelID>
    <Title>dotnet-install should be able to get version from repository's global.json</Title>
    <Description>Many users lock down their version of .NET Core via  as well.</Description>
    <Title_Description>dotnet-install should be able to get version from repository's global.json Many users lock down their version of .NET Core via  as well.</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12173</IssueLabelID>
    <Title>Please publish 2.1.801+dependencies</Title>
    <Description>## Steps to reproduce
Hey folks. Like like this release is missing. Any chance you could publish a  output:






</Description>
    <Title_Description>Please publish 2.1.801+dependencies ## Steps to reproduce
Hey folks. Like like this release is missing. Any chance you could publish a  output:






</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12166</IssueLabelID>
    <Title>Fixing broken link to developer guide</Title>
    <Description>The developer guide is currently living in project-docs not general.
</Description>
    <Title_Description>Fixing broken link to developer guide The developer guide is currently living in project-docs not general.
</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>7/08/2019 7:31:05 PM +00:00</CreatedAt>
    <ClosedAt>7/08/2019 8:13:17 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12149</IssueLabelID>
    <Title>Solution items are now considered when removing empty folders</Title>
    <Description>Solution items are now considered when removing empty folders. A test added to check whether the logic is maintained. Fixes #10669

https://github.com/dotnet/cli/issues/10669
</Description>
    <Title_Description>Solution items are now considered when removing empty folders Solution items are now considered when removing empty folders. A test added to check whether the logic is maintained. Fixes #10669

https://github.com/dotnet/cli/issues/10669
</Title_Description>
    <Label>community</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12134</IssueLabelID>
    <Title>Why does dotnet update reinstall the existing version?</Title>
    <Description>
seems to reinstall the tool which takes quite long. In case the version is up to date i get the following output:

&gt; 'MyTool' was reinstalled with the latest stable version (version '1.0.1564914607')


 What I wish is just an check for a newer version and install it if available. Is there any undocumented flag to achieve that?

Why do I need that? I distribute workflows (e.g. Build pipelines) via global tools. And provide shell scripts for the workflows. So whenever the shell script is executed it shall run with the latest global tool behind but in the same time the shell script should start as fast as possible. Thats why the reinstallation of the tools when they are already up to date is a bit annoying.





</Description>
    <Title_Description>Why does dotnet update reinstall the existing version? 
seems to reinstall the tool which takes quite long. In case the version is up to date i get the following output:

&gt; 'MyTool' was reinstalled with the latest stable version (version '1.0.1564914607')


 What I wish is just an check for a newer version and install it if available. Is there any undocumented flag to achieve that?

Why do I need that? I distribute workflows (e.g. Build pipelines) via global tools. And provide shell scripts for the workflows. So whenever the shell script is executed it shall run with the latest global tool behind but in the same time the shell script should start as fast as possible. Thats why the reinstallation of the tools when they are already up to date is a bit annoying.





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12074</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>30/07/2019 12:04:40 AM +00:00</CreatedAt>
    <ClosedAt>27/09/2019 9:47:52 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12057</IssueLabelID>
    <Title>`dotnet tool install` should accept switch to specify *only* nuget source</Title>
    <Description>The  to make this easier.</Description>
    <Title_Description> to make this easier.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12013</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>26/07/2019 12:04:53 AM +00:00</CreatedAt>
    <ClosedAt>26/07/2019 6:11:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12005</IssueLabelID>
    <Title>official documentation for DotNetCliToolReference netcoreapp2.2 cap</Title>
    <Description>
    </Description>
    <Title_Description>official documentation for DotNetCliToolReference netcoreapp2.2 cap </Title_Description>
    <Label>documentation</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12004</IssueLabelID>
    <Title>Finish content for https://aka.ms/failure-installing-tool</Title>
    <Description>it is pointing to generic https://docs.microsoft.com/ for now. We need to add guide for first party tool rename. _dotnet-MYTOOL_ to _microsoft.dotnet-MYTOOL_</Description>
    <Title_Description>Finish content for https://aka.ms/failure-installing-tool it is pointing to generic https://docs.microsoft.com/ for now. We need to add guide for first party tool rename. _dotnet-MYTOOL_ to _microsoft.dotnet-MYTOOL_</Title_Description>
    <Label>documentation</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12001</IssueLabelID>
    <Title>Fix for RHEL 6 workstation</Title>
    <Description>Fix for RHEL 6 workstation
https://github.com/dotnet/cli/issues/11940
</Description>
    <Title_Description>Fix for RHEL 6 workstation Fix for RHEL 6 workstation
https://github.com/dotnet/cli/issues/11940
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>12000</IssueLabelID>
    <Title>[WIP] Fix for RHEL 6 workstation</Title>
    <Description>Fix for RHEL 6 workstation
https://github.com/dotnet/cli/issues/11940

</Description>
    <Title_Description>[WIP] Fix for RHEL 6 workstation Fix for RHEL 6 workstation
https://github.com/dotnet/cli/issues/11940

</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11994</IssueLabelID>
    <Title>dotnet restore fails with RuntimeFrameworkVersion specified </Title>
    <Description>## Steps to reproduce
When specified 

&lt;/p&gt;

&lt;/details&gt;





</Description>
    <Title_Description>dotnet restore fails with RuntimeFrameworkVersion specified  ## Steps to reproduce
When specified 

&lt;/p&gt;

&lt;/details&gt;





</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11964</IssueLabelID>
    <Title>dotnet-install.sh:  fails on macOS</Title>
    <Description>## Steps to reproduce
On macOS open bash shell and execute:
 option.
</Description>
    <Title_Description>dotnet-install.sh:  fails on macOS ## Steps to reproduce
On macOS open bash shell and execute:
 option.
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11961</IssueLabelID>
    <Title>Preview link points to an unhelpful page</Title>
    <Description>I see this message all the time (I only run previews) …



I’d never actually taken the time to try out that link. It lands @ https://docs.microsoft.com/en-us/dotnet/core/tools/global-json

That’s not at all helpful. I was expecting a page dedicated to previews and how to use previews in Visual Studio if you are using that product. Global.json is a small part of the preview experience. It’s also jarring to get dropped into a help page on a file format with no apparent connection to the CLI message.

To some degree this is a doc issue but since the link is part of the CLI experience we should decide what we want.</Description>
    <Title_Description>Preview link points to an unhelpful page I see this message all the time (I only run previews) …



I’d never actually taken the time to try out that link. It lands @ https://docs.microsoft.com/en-us/dotnet/core/tools/global-json

That’s not at all helpful. I was expecting a page dedicated to previews and how to use previews in Visual Studio if you are using that product. Global.json is a small part of the preview experience. It’s also jarring to get dropped into a help page on a file format with no apparent connection to the CLI message.

To some degree this is a doc issue but since the link is part of the CLI experience we should decide what we want.</Title_Description>
    <Label>documentation</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11956</IssueLabelID>
    <Title>Deps file and runtimeconfig are not regenerated upon assets cache invalidation.</Title>
    <Description>## Steps to reproduce

On Windows with an x64 SDK installed:

1. 

</Description>
    <Title_Description>Deps file and runtimeconfig are not regenerated upon assets cache invalidation. ## Steps to reproduce

On Windows with an x64 SDK installed:

1. 

</Title_Description>
    <Label>Bug</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11955</IssueLabelID>
    <Title>Copy PE bits to shims during install</Title>
    <Description>part of https://github.com/dotnet/cli/issues/11300

Use extracted logic in NET.HostModel. Remove duplicated copy
Pass dll to copy from

</Description>
    <Title_Description>Copy PE bits to shims during install part of https://github.com/dotnet/cli/issues/11300

Use extracted logic in NET.HostModel. Remove duplicated copy
Pass dll to copy from

</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11952</IssueLabelID>
    <Title>Enable comments for tool manifest json</Title>
    <Description>Enable read is easy. But by the current implementation all the comments will be removed everytime the tool CRUD command is used</Description>
    <Title_Description>Enable comments for tool manifest json Enable read is easy. But by the current implementation all the comments will be removed everytime the tool CRUD command is used</Title_Description>
    <Label>Bug</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11940</IssueLabelID>
    <Title> dotnet-install.sh does not download correct version on RHEL 6 workstation</Title>
    <Description>https://dot.net/v1/dotnet-install.sh
this script at line 151 it does not consider RHEL 6 Workstation when I run this on rhel6 workstation it downloads the wrong version fo dotnet runtime.

## Steps to reproduce
prepare a rhel 6 workstation run dotnet-install.sh to install dotnet runtime

## Expected  behavior
download dotnet runtime rhel6 version

## Actual behavior
does not download the correct version

## Environment data
 output:






</Description>
    <Title_Description> dotnet-install.sh does not download correct version on RHEL 6 workstation https://dot.net/v1/dotnet-install.sh
this script at line 151 it does not consider RHEL 6 Workstation when I run this on rhel6 workstation it downloads the wrong version fo dotnet runtime.

## Steps to reproduce
prepare a rhel 6 workstation run dotnet-install.sh to install dotnet runtime

## Expected  behavior
download dotnet runtime rhel6 version

## Actual behavior
does not download the correct version

## Environment data
 output:






</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11938</IssueLabelID>
    <Title>AllowTrailingCommas and JsonCommentHandling.Skip for RuntimeConfig</Title>
    <Description>Fix https://github.com/dotnet/cli/issues/11918</Description>
    <Title_Description>AllowTrailingCommas and JsonCommentHandling.Skip for RuntimeConfig Fix https://github.com/dotnet/cli/issues/11918</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11926</IssueLabelID>
    <Title>Give specific instruction for zsh on macOS for global tools PATH</Title>
    <Description>fix https://github.com/dotnet/cli/issues/9321
example:


</Description>
    <Title_Description>Give specific instruction for zsh on macOS for global tools PATH fix https://github.com/dotnet/cli/issues/9321
example:


</Title_Description>
    <Label>tool</Label>
    <CreatedAt>17/07/2019 4:44:56 AM +00:00</CreatedAt>
    <ClosedAt>17/07/2019 10:10:56 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11918</IssueLabelID>
    <Title>enable all s.t.json options for .runtimeconfig.json</Title>
    <Description>Per https://github.com/dotnet/cli/issues/11756#issuecomment-511145296






</Description>
    <Title_Description>enable all s.t.json options for .runtimeconfig.json Per https://github.com/dotnet/cli/issues/11756#issuecomment-511145296






</Title_Description>
    <Label>Bug</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11916</IssueLabelID>
    <Title>Fixed build failing for usernames with spaces</Title>
    <Description>I opened an issue where the build was failing because of a space in my username &lt;Firstname Lastname&gt;
This was caused because $PSScriptRoot is being passed to Invoke-Expression without escaping the space in the path.

Fixes #11812</Description>
    <Title_Description>Fixed build failing for usernames with spaces I opened an issue where the build was failing because of a space in my username &lt;Firstname Lastname&gt;
This was caused because $PSScriptRoot is being passed to Invoke-Expression without escaping the space in the path.

Fixes #11812</Title_Description>
    <Label>community</Label>
    <CreatedAt>16/07/2019 2:45:54 PM +00:00</CreatedAt>
    <ClosedAt>16/07/2019 6:32:58 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11904</IssueLabelID>
    <Title>Update 1.x and 2.1 servicing versions.</Title>
    <Description>The 1.x and 2.1 servicing versions were stale and not the latest
released versions.</Description>
    <Title_Description>Update 1.x and 2.1 servicing versions. The 1.x and 2.1 servicing versions were stale and not the latest
released versions.</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>15/07/2019 9:21:41 PM +00:00</CreatedAt>
    <ClosedAt>16/07/2019 6:34:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11903</IssueLabelID>
    <Title>Update 1.x servicing versions to the latest versions.</Title>
    <Description>The 1.x servicing version numbers were stale and not the latest (and
final) released versions.
</Description>
    <Title_Description>Update 1.x servicing versions to the latest versions. The 1.x servicing version numbers were stale and not the latest (and
final) released versions.
</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>15/07/2019 9:18:35 PM +00:00</CreatedAt>
    <ClosedAt>16/07/2019 6:33:46 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11898</IssueLabelID>
    <Title>Do not autoreference WindowsBase.dll in Microsoft.NetCore.App</Title>
    <Description>## Steps to reproduce
* Create three projects: 2 winforms 1 shared project
* Change 1 winform project to </Description>
    <Title_Description>Do not autoreference WindowsBase.dll in Microsoft.NetCore.App ## Steps to reproduce
* Create three projects: 2 winforms 1 shared project
* Change 1 winform project to </Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11855</IssueLabelID>
    <Title>Update 1.x and 2.1 servicing versions.</Title>
    <Description>The 1.x and 2.1 servicing versions were stale and not the latest
released versions.</Description>
    <Title_Description>Update 1.x and 2.1 servicing versions. The 1.x and 2.1 servicing versions were stale and not the latest
released versions.</Title_Description>
    <Label>Pending director approval</Label>
    <CreatedAt>12/07/2019 7:36:15 PM +00:00</CreatedAt>
    <ClosedAt>12/07/2019 10:41:17 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11854</IssueLabelID>
    <Title>Update 1.x servicing versions to the latest versions.</Title>
    <Description>The 1.x servicing version numbers were stale and not the latest (and
final) released versions.</Description>
    <Title_Description>Update 1.x servicing versions to the latest versions. The 1.x servicing version numbers were stale and not the latest (and
final) released versions.</Title_Description>
    <Label>Pending director approval</Label>
    <CreatedAt>12/07/2019 7:31:09 PM +00:00</CreatedAt>
    <ClosedAt>12/07/2019 10:41:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11852</IssueLabelID>
    <Title>Allow the --roll-forward switch to be used with local tools</Title>
    <Description>The runtime-option . If a repo tool doesn't define a roll-forward policy then there's no way to make a tool run on a higher shared framework version.

I'm not up-to-date on the decisions being made around repo tools but naively I would expect that option to be usable with repo tools.

cc @KathleenDollard @vitek-karas @wli3 </Description>
    <Title_Description>Allow the --roll-forward switch to be used with local tools The runtime-option . If a repo tool doesn't define a roll-forward policy then there's no way to make a tool run on a higher shared framework version.

I'm not up-to-date on the decisions being made around repo tools but naively I would expect that option to be usable with repo tools.

cc @KathleenDollard @vitek-karas @wli3 </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11839</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/07/2019 8:13:41 PM +00:00</CreatedAt>
    <ClosedAt>10/10/2019 8:32:41 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11827</IssueLabelID>
    <Title>Condition out NETStandard.Library.NETFramework for source-build</Title>
    <Description>NETStandard.Library.NETFramework is identified as a prebuilt in source-build.  This package is needed for building apps for net4x which use a netstandard libaray.  These should not be included in source-build and an error should be produced if this condition occurs.

Changes to make:

1.	Stop restoring the package during source builds
2.	If the targets hit a case where these would be used but they are not present emit a clear error.
</Description>
    <Title_Description>Condition out NETStandard.Library.NETFramework for source-build NETStandard.Library.NETFramework is identified as a prebuilt in source-build.  This package is needed for building apps for net4x which use a netstandard libaray.  These should not be included in source-build and an error should be produced if this condition occurs.

Changes to make:

1.	Stop restoring the package during source builds
2.	If the targets hit a case where these would be used but they are not present emit a clear error.
</Title_Description>
    <Label>source-build</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11825</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>10/07/2019 8:38:04 PM +00:00</CreatedAt>
    <ClosedAt>10/10/2019 8:45:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11824</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>10/07/2019 8:37:53 PM +00:00</CreatedAt>
    <ClosedAt>10/10/2019 8:46:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11812</IssueLabelID>
    <Title>build.cmd fails on windows when space is in directory path</Title>
    <Description>## Steps to reproduce
clone the cli repo
run  containing space from username






</Description>
    <Title_Description>build.cmd fails on windows when space is in directory path ## Steps to reproduce
clone the cli repo
run  containing space from username






</Title_Description>
    <Label>good first issue</Label>
    <CreatedAt>10/07/2019 10:10:16 AM +00:00</CreatedAt>
    <ClosedAt>16/07/2019 6:32:58 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11756</IssueLabelID>
    <Title>launchSettings.json no longer allows comments after System.Text.Json migration</Title>
    <Description>As part of the migration to System.Text.Json it looks like Comment handling in launchSettings.json was lost. This issue **does not repro** on SDK 2.2.203.

System.Text.Json supports comment handling but it has to be enabled in the options. It looks like the current code does not pass in any options: https://github.com/dotnet/cli/blob/0cb36481ad4e628079374447c8ae313006e3f602/src/dotnet/commands/dotnet-run/LaunchSettings/LaunchSettingsManager.cs#L28

## Steps to reproduce
1. 




</Description>
    <Title_Description>launchSettings.json no longer allows comments after System.Text.Json migration As part of the migration to System.Text.Json it looks like Comment handling in launchSettings.json was lost. This issue **does not repro** on SDK 2.2.203.

System.Text.Json supports comment handling but it has to be enabled in the options. It looks like the current code does not pass in any options: https://github.com/dotnet/cli/blob/0cb36481ad4e628079374447c8ae313006e3f602/src/dotnet/commands/dotnet-run/LaunchSettings/LaunchSettingsManager.cs#L28

## Steps to reproduce
1. 




</Title_Description>
    <Label>
    </Label>
    <Assignee>phenning</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11709</IssueLabelID>
    <Title>XAML designer or application failed to launch : invalid runtime config.json</Title>
    <Description>## Steps to reproduce
Verified that the machine is on 
3.0.100-preview7-012601

Install Visual Studio 16.3 Preview 1
 
First project.
"\\scratch2\scratch\peterspa\MahAppsFail\MahApps.Metro.zip"
 
It restore and compile fine. But then we try to launch the designer we have this error: 
 
This appears to be a bug with design time 
 
 
 
Below is a copy of the JSON file. 
\\scratch2\scratch\peterspa\MahAppsFail\WpfSurface.runtimeConfig.json
 
 
Second project: 
\\scratch2\scratch\chabiss\RuntimeConfig.zip
 
This one is the one I showed to Livar.  You can add the private feed (https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json ) to get around the fact that you can’t restore properly because of the package reference  
However when you try to open Mainpage.xaml.  Same problem
 
 
 
Same problem: 
\\scratch2\scratch\chabiss\WpfSurface.runtimeConfig.json
 
I think this is blocking 16.3 Preview 1.   

## Expected  behavior
App running file and and Designer loading

## Actual behavior


## Environment data
 output:






</Description>
    <Title_Description>XAML designer or application failed to launch : invalid runtime config.json ## Steps to reproduce
Verified that the machine is on 
3.0.100-preview7-012601

Install Visual Studio 16.3 Preview 1
 
First project.
"\\scratch2\scratch\peterspa\MahAppsFail\MahApps.Metro.zip"
 
It restore and compile fine. But then we try to launch the designer we have this error: 
 
This appears to be a bug with design time 
 
 
 
Below is a copy of the JSON file. 
\\scratch2\scratch\peterspa\MahAppsFail\WpfSurface.runtimeConfig.json
 
 
Second project: 
\\scratch2\scratch\chabiss\RuntimeConfig.zip
 
This one is the one I showed to Livar.  You can add the private feed (https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json ) to get around the fact that you can’t restore properly because of the package reference  
However when you try to open Mainpage.xaml.  Same problem
 
 
 
Same problem: 
\\scratch2\scratch\chabiss\WpfSurface.runtimeConfig.json
 
I think this is blocking 16.3 Preview 1.   

## Expected  behavior
App running file and and Designer loading

## Actual behavior


## Environment data
 output:






</Title_Description>
    <Label>Bug</Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11705</IssueLabelID>
    <Title>Regression: self-contained publish fails on Linux ARM in 3.0 Preview 7</Title>
    <Description>## Steps to reproduce
1. 

## Environment data
This issue was discovered in our CI validation tests for .NET Docker when running the test scenario on Linux ARM hardware.  

This is a regression and was introduced between the following two SDK versions: 3.0.100-preview7-0127**43** and 3.0.100-preview7-0127**69**.
</Description>
    <Title_Description>Regression: self-contained publish fails on Linux ARM in 3.0 Preview 7 ## Steps to reproduce
1. 

## Environment data
This issue was discovered in our CI validation tests for .NET Docker when running the test scenario on Linux ARM hardware.  

This is a regression and was introduced between the following two SDK versions: 3.0.100-preview7-0127**43** and 3.0.100-preview7-0127**69**.
</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11702</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>2/07/2019 12:03:59 PM +00:00</CreatedAt>
    <ClosedAt>25/07/2019 6:58:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11701</IssueLabelID>
    <Title>dotnet build+publish and dotnet publish does not produce the same result - fails when running as unprivileged user in Docker container</Title>
    <Description>When the Dockerfile has both the steps 
_realpath(): Permission denied
realpath(): Permission denied
realpath(): Permission denied_
warn: Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository[50]
      Using an in-memory repository. Keys will not be persisted to storage.
warn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[59]
      Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.
warn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]
      No XML encryptor configured. Key {ea673121-40e4-4712-9072-58e595942f1d} may be persisted to storage in unencrypted form.
Hosting environment: Production
Content root path: /app
Now listening on: http://[::]:8080
Application started. Press Ctrl+C to shut down.

## Environment data
Reproduced on Linux and Windows:

**Linux**
.NET Core SDK (reflecting any global.json):
 Version:   2.2.300
 Commit:    73efd5bd87

Runtime Environment:
 OS Name:     ubuntu
 OS Version:  18.04
 OS Platform: Linux
 RID:         ubuntu.18.04-x64
 Base Path:   /usr/share/dotnet/sdk/2.2.300/

Host (useful for support):
  Version: 2.2.5
  Commit:  0a3c9209c0

.NET Core SDKs installed:
  2.2.300 [/usr/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]

**Windows**
.NET Core SDK (reflecting any global.json):
 Version:   2.2.202
 Commit:    8a7ff6789d

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.2.202\

Host (useful for support):
  Version: 2.2.3
  Commit:  6b8ad509b6

.NET Core SDKs installed:
  2.1.504 [C:\Program Files\dotnet\sdk]
  2.1.505 [C:\Program Files\dotnet\sdk]
  2.1.602 [C:\Program Files\dotnet\sdk]
  2.2.105 [C:\Program Files\dotnet\sdk]
  2.2.202 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]







</Description>
    <Title_Description>dotnet build+publish and dotnet publish does not produce the same result - fails when running as unprivileged user in Docker container When the Dockerfile has both the steps 
_realpath(): Permission denied
realpath(): Permission denied
realpath(): Permission denied_
warn: Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository[50]
      Using an in-memory repository. Keys will not be persisted to storage.
warn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[59]
      Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.
warn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]
      No XML encryptor configured. Key {ea673121-40e4-4712-9072-58e595942f1d} may be persisted to storage in unencrypted form.
Hosting environment: Production
Content root path: /app
Now listening on: http://[::]:8080
Application started. Press Ctrl+C to shut down.

## Environment data
Reproduced on Linux and Windows:

**Linux**
.NET Core SDK (reflecting any global.json):
 Version:   2.2.300
 Commit:    73efd5bd87

Runtime Environment:
 OS Name:     ubuntu
 OS Version:  18.04
 OS Platform: Linux
 RID:         ubuntu.18.04-x64
 Base Path:   /usr/share/dotnet/sdk/2.2.300/

Host (useful for support):
  Version: 2.2.5
  Commit:  0a3c9209c0

.NET Core SDKs installed:
  2.2.300 [/usr/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]

**Windows**
.NET Core SDK (reflecting any global.json):
 Version:   2.2.202
 Commit:    8a7ff6789d

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.2.202\

Host (useful for support):
  Version: 2.2.3
  Commit:  6b8ad509b6

.NET Core SDKs installed:
  2.1.504 [C:\Program Files\dotnet\sdk]
  2.1.505 [C:\Program Files\dotnet\sdk]
  2.1.602 [C:\Program Files\dotnet\sdk]
  2.2.105 [C:\Program Files\dotnet\sdk]
  2.2.202 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]







</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11693</IssueLabelID>
    <Title>Branding update to "preview8"; CLI</Title>
    <Description>Branding update to "preview8"; SDK
</Description>
    <Title_Description>Branding update to "preview8"; CLI Branding update to "preview8"; SDK
</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11688</IssueLabelID>
    <Title>Investigate running CI in Linux/ARM64 box</Title>
    <Description>
    </Description>
    <Title_Description>Investigate running CI in Linux/ARM64 box </Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11679</IssueLabelID>
    <Title>dotnet sln: support for custom configurations</Title>
    <Description>At the moment (3.0.100-preview6) the  command only supports adding removing and listing projects. However it is not possible to change the build configurations so that has to be done either manually or using e.g. Visual Studio.

It would be nice if you could add and remove configurations from the solution file.</Description>
    <Title_Description>dotnet sln: support for custom configurations At the moment (3.0.100-preview6) the  command only supports adding removing and listing projects. However it is not possible to change the build configurations so that has to be done either manually or using e.g. Visual Studio.

It would be nice if you could add and remove configurations from the solution file.</Title_Description>
    <Label>enhancement</Label>
    <CreatedAt>1/07/2019 9:24:14 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11657</IssueLabelID>
    <Title>WIP: Merge master to release/3.0.1xx for preview7 - CLI</Title>
    <Description>Merge master to release/3.0.1xx for preview7

Commonly referred to as the 'snap'</Description>
    <Title_Description>WIP: Merge master to release/3.0.1xx for preview7 - CLI Merge master to release/3.0.1xx for preview7

Commonly referred to as the 'snap'</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11647</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>27/06/2019 5:06:32 PM +00:00</CreatedAt>
    <ClosedAt>27/06/2019 6:35:21 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11646</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/06/2019 5:06:24 PM +00:00</CreatedAt>
    <ClosedAt>10/10/2019 8:43:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11645</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>27/06/2019 5:06:16 PM +00:00</CreatedAt>
    <ClosedAt>11/07/2019 5:55:31 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11644</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>27/06/2019 5:06:03 PM +00:00</CreatedAt>
    <ClosedAt>11/07/2019 5:55:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11643</IssueLabelID>
    <Title>program hangs unexpectedly</Title>
    <Description>## Steps to reproduce

Clone https://github.com/dotnet/coreclr (to say d:/repos/coreclr)
Clone https://github.com/AndyAyersMS/jitutils (to say d:/repos/jitutils)
  change to the MutateTest branch of jitutils
Install 3.0 Preview 6 

cd to d:/repos/jitutils/src/MutateTest

dotnet run -c Release --  --ehStress --recursive d:\repos\coreclr\tests\src\jit\jit64 --quiet

Processing 537 test files
// d:\repos\coreclr\tests\src\jit\jit64\eh\basics\loopEH.cs: 29 variants all passed
// d:\repos\coreclr\tests\src\jit\jit64\eh\Common\common.cs: did not compile successfully
// d:\repos\coreclr\tests\src\jit\jit64\eh\FinallyExec\nestedTryRegionsWithSameOffset1.cs: did not compile successfully
...  more output like this ...

## Expected  behavior

Program processes all 537 files and exits

## Actual behavior

Hangs eventually amount of progress before hang varies

## Environment data
 output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview6-012264
 Commit:    be3f0c1a03

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.18917
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview6-012264\

Host (useful for support):
  Version: 3.0.0-preview6-27804-01
  Commit:  fdf81c6faf

.NET Core SDKs installed:
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.500 [C:\Program Files\dotnet\sdk]
  2.1.502 [C:\Program Files\dotnet\sdk]
  2.1.503 [C:\Program Files\dotnet\sdk]
  2.1.505 [C:\Program Files\dotnet\sdk]
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.1.800-preview-009696 [C:\Program Files\dotnet\sdk]
  2.2.104 [C:\Program Files\dotnet\sdk]
  2.2.203 [C:\Program Files\dotnet\sdk]
  3.0.100-preview4-010309 [C:\Program Files\dotnet\sdk]
  3.0.100-preview6-012264 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview3-19111-10 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27412-2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview4-27411-23 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]






</Description>
    <Title_Description>program hangs unexpectedly ## Steps to reproduce

Clone https://github.com/dotnet/coreclr (to say d:/repos/coreclr)
Clone https://github.com/AndyAyersMS/jitutils (to say d:/repos/jitutils)
  change to the MutateTest branch of jitutils
Install 3.0 Preview 6 

cd to d:/repos/jitutils/src/MutateTest

dotnet run -c Release --  --ehStress --recursive d:\repos\coreclr\tests\src\jit\jit64 --quiet

Processing 537 test files
// d:\repos\coreclr\tests\src\jit\jit64\eh\basics\loopEH.cs: 29 variants all passed
// d:\repos\coreclr\tests\src\jit\jit64\eh\Common\common.cs: did not compile successfully
// d:\repos\coreclr\tests\src\jit\jit64\eh\FinallyExec\nestedTryRegionsWithSameOffset1.cs: did not compile successfully
...  more output like this ...

## Expected  behavior

Program processes all 537 files and exits

## Actual behavior

Hangs eventually amount of progress before hang varies

## Environment data
 output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview6-012264
 Commit:    be3f0c1a03

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.18917
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview6-012264\

Host (useful for support):
  Version: 3.0.0-preview6-27804-01
  Commit:  fdf81c6faf

.NET Core SDKs installed:
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.500 [C:\Program Files\dotnet\sdk]
  2.1.502 [C:\Program Files\dotnet\sdk]
  2.1.503 [C:\Program Files\dotnet\sdk]
  2.1.505 [C:\Program Files\dotnet\sdk]
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.1.800-preview-009696 [C:\Program Files\dotnet\sdk]
  2.2.104 [C:\Program Files\dotnet\sdk]
  2.2.203 [C:\Program Files\dotnet\sdk]
  3.0.100-preview4-010309 [C:\Program Files\dotnet\sdk]
  3.0.100-preview6-012264 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview3-19111-10 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27412-2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview4-27411-23 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11639</IssueLabelID>
    <Title>Use live code flow for corefx dependency and react to S.T.Json breaks</Title>
    <Description>Fix #11520 -- We no longer require a cyclical stage 0 update to consume corefx changes

WIP: Tests aren't picking up the newer runtime we're acquiring yet. Also need to make similar change in toolset and make sure darc subscriptions get updated.</Description>
    <Title_Description>Use live code flow for corefx dependency and react to S.T.Json breaks Fix #11520 -- We no longer require a cyclical stage 0 update to consume corefx changes

WIP: Tests aren't picking up the newer runtime we're acquiring yet. Also need to make similar change in toolset and make sure darc subscriptions get updated.</Title_Description>
    <Label>source-build</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>26/06/2019 11:28:59 PM +00:00</CreatedAt>
    <ClosedAt>27/06/2019 10:57:03 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11629</IssueLabelID>
    <Title>Don't let dotnet-install.sh fail with 'Text file busy'</Title>
    <Description>fixes #11626</Description>
    <Title_Description>Don't let dotnet-install.sh fail with 'Text file busy' fixes #11626</Title_Description>
    <Label>Pending discussion</Label>
    <CreatedAt>25/06/2019 7:56:36 PM +00:00</CreatedAt>
    <ClosedAt>19/07/2019 9:16:05 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11626</IssueLabelID>
    <Title>dotnet-install.sh fail with a `Text file busy` error when dotnet process is running in background</Title>
    <Description>## Steps to reproduce
run dotnet-install.sh on linux while a background dotnet process is running (for example background compiler)

## Expected  behavior
dotnet-install.sh should succeed

## Actual behavior
dotnet-install.sh will fail during the 





</Description>
    <Title_Description>dotnet-install.sh fail with a 





</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11616</IssueLabelID>
    <Title>Error occurred when min-code is specific on VAL 16.0 with CLI/SDK: 2.1.605(runtime- 2.1.12)</Title>
    <Description>## Steps to reproduce
1. Create a new console app in VS(D16.0/[28803.527](https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/VS/32dd098c5e3741ac40f9633ff8f4c1523c08ccbf/deb176a6-aec3-e88e-c5a3-7372e1785305%3Bbootstrappers/Enterprise/vs_enterprise.exe)(16.0.6 preview 1.0))
2. Modify the csproj with the following: 1.12 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Description>
    <Title_Description>Error occurred when min-code is specific on VAL 16.0 with CLI/SDK: 2.1.605(runtime- 2.1.12) ## Steps to reproduce
1. Create a new console app in VS(D16.0/[28803.527](https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/VS/32dd098c5e3741ac40f9633ff8f4c1523c08ccbf/deb176a6-aec3-e88e-c5a3-7372e1785305%3Bbootstrappers/Enterprise/vs_enterprise.exe)(16.0.6 preview 1.0))
2. Modify the csproj with the following: 1.12 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Title_Description>
    <Label>Resolver</Label>
    <Assignee>YunWeiaa</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11603</IssueLabelID>
    <Title>Installing tool to custom tool-path fails when trying to access it</Title>
    <Description>I'm trying to install a custom tool during azure pipeline however if fails to pick up the tool. I've tried several options but they all fail at execution stage. I'm trying to use the tool-path because without it step 2 fails with cannot find the executable
 
## Steps to reproduce



No matter how i define tool-path it does the above behaviour of merging dotnet- to the path rather than /home/vsts/tools/dotnet-stryker
</Description>
    <Title_Description>Installing tool to custom tool-path fails when trying to access it I'm trying to install a custom tool during azure pipeline however if fails to pick up the tool. I've tried several options but they all fail at execution stage. I'm trying to use the tool-path because without it step 2 fails with cannot find the executable
 
## Steps to reproduce



No matter how i define tool-path it does the above behaviour of merging dotnet- to the path rather than /home/vsts/tools/dotnet-stryker
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11585</IssueLabelID>
    <Title>Current 3.0 Preview 7 SDK can't build projects targeting lower SDK versions in the 16.3 Release channel build.</Title>
    <Description>## Steps to reproduce
1. Install 16.3.0 [29018.65.master]([Release Channel](https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/VS/710819d747beda09ce59cbbbf69a82db4090fcab/258a92b4-1d34-4fee-88e3-fbb419f25336%3bchannels/internal/Release/bootstrappers/fixed/Enterprise/vs_Enterprise.exe))
2. Open an existing .NET Core 2.1/2.2 console application with reference to a .NET Standard class lib via VS. Build and run

## Expected  behavior
Build and run succeeded


## Actual behavior
![image](https://user-images.githubusercontent.com/33921754/59756414-3e67ae80-92bc-11e9-8ada-345ff0663665.png)
Output info:
error  : The project file cannot be opened by the project system because it is missing some critical imports or the referenced SDK cannot be found.

Detailed Information:
Unable to locate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.

Note: Open an existing .NET Core 2.1/2.2 console application with reference to a .NET Standard class lib via CLI. Build and run succeeded.

## Environment data






</Description>
    <Title_Description>Current 3.0 Preview 7 SDK can't build projects targeting lower SDK versions in the 16.3 Release channel build. ## Steps to reproduce
1. Install 16.3.0 [29018.65.master]([Release Channel](https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/VS/710819d747beda09ce59cbbbf69a82db4090fcab/258a92b4-1d34-4fee-88e3-fbb419f25336%3bchannels/internal/Release/bootstrappers/fixed/Enterprise/vs_Enterprise.exe))
2. Open an existing .NET Core 2.1/2.2 console application with reference to a .NET Standard class lib via VS. Build and run

## Expected  behavior
Build and run succeeded


## Actual behavior
![image](https://user-images.githubusercontent.com/33921754/59756414-3e67ae80-92bc-11e9-8ada-345ff0663665.png)
Output info:
error  : The project file cannot be opened by the project system because it is missing some critical imports or the referenced SDK cannot be found.

Detailed Information:
Unable to locate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.

Note: Open an existing .NET Core 2.1/2.2 console application with reference to a .NET Standard class lib via CLI. Build and run succeeded.

## Environment data






</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11581</IssueLabelID>
    <Title>Implement improvements for SDK resolution in global.json.</Title>
    <Description>Tracking issue for implementing backwards-compatible improvements to global.json for .NET Core SDK resolution.

This feature will give users more flexibility in determining how SDKs are resolved by the command line tools.

Currently a SDK version specified in  will always use the specified version or roll-forward to a compatible patch level if not found.

The improvement will allow users to prevent rolling-forward or given more control over how the roll-forward is performed.

TODO: link to public design document once available.</Description>
    <Title_Description>Implement improvements for SDK resolution in global.json. Tracking issue for implementing backwards-compatible improvements to global.json for .NET Core SDK resolution.

This feature will give users more flexibility in determining how SDKs are resolved by the command line tools.

Currently a SDK version specified in  will always use the specified version or roll-forward to a compatible patch level if not found.

The improvement will allow users to prevent rolling-forward or given more control over how the roll-forward is performed.

TODO: link to public design document once available.</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11579</IssueLabelID>
    <Title>Feature Request : dotnet add file -lang [C#/F#] [MyClass/MyScript]</Title>
    <Description>Context : 

adding a class file/script file to the project. I'm currently using Ionide for F# and a 3rd party extension of VsCode to add a C# class file. Else i'm forced to add the file manually and rewrite the boilerplate code (usings and namespaces)

Possible use : 

C#






</Description>
    <Title_Description>Feature Request : dotnet add file -lang [C#/F#] [MyClass/MyScript] Context : 

adding a class file/script file to the project. I'm currently using Ionide for F# and a 3rd party extension of VsCode to add a C# class file. Else i'm forced to add the file manually and rewrite the boilerplate code (usings and namespaces)

Possible use : 

C#






</Title_Description>
    <Label>enhancement</Label>
    <CreatedAt>18/06/2019 3:11:48 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11578</IssueLabelID>
    <Title>dotnet pack fails when `GeneratePackageOnBuild` is `true`</Title>
    <Description>Using this simple repo: https://github.com/daniefer/dotnetcliissue
When the 





</Description>
    <Title_Description>dotnet pack fails when 





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11565</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/06/2019 10:16:05 PM +00:00</CreatedAt>
    <ClosedAt>27/06/2019 2:35:47 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11564</IssueLabelID>
    <Title>'Dotnet.exe publish' silently creates bad format for mis-matching architectures</Title>
    <Description>@jjxtra commented on [Thu Jun 13 2019](https://github.com/dotnet/core/issues/2869)

When using 

---

@karelz commented on [Fri Jun 14 2019](https://github.com/dotnet/core/issues/2869#issuecomment-502213331)

@livarcocc @nguerrera does it belong to CLI or core-setup?

---

@livarcocc commented on [Fri Jun 14 2019](https://github.com/dotnet/core/issues/2869#issuecomment-502213616)

CLI would be a good starting point. We can move it to core-setup if the issue was in the production of the apphost.

cc @peterhuene 

</Description>
    <Title_Description>'Dotnet.exe publish' silently creates bad format for mis-matching architectures @jjxtra commented on [Thu Jun 13 2019](https://github.com/dotnet/core/issues/2869)

When using 

---

@karelz commented on [Fri Jun 14 2019](https://github.com/dotnet/core/issues/2869#issuecomment-502213331)

@livarcocc @nguerrera does it belong to CLI or core-setup?

---

@livarcocc commented on [Fri Jun 14 2019](https://github.com/dotnet/core/issues/2869#issuecomment-502213616)

CLI would be a good starting point. We can move it to core-setup if the issue was in the production of the apphost.

cc @peterhuene 

</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11556</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/06/2019 12:04:22 PM +00:00</CreatedAt>
    <ClosedAt>27/06/2019 2:35:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11555</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/06/2019 12:04:16 PM +00:00</CreatedAt>
    <ClosedAt>14/06/2019 5:31:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11535</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.
(created from a manual run of the PR generation tool)



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>11/06/2019 10:58:17 PM +00:00</CreatedAt>
    <ClosedAt>14/06/2019 5:23:43 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11534</IssueLabelID>
    <Title>Spelling.</Title>
    <Description>- If this PR should not run tests add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Add description for changes you are making.
- If there is an issue related to this PR add the reference.
</Description>
    <Title_Description>Spelling. - If this PR should not run tests add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Add description for changes you are making.
- If there is an issue related to this PR add the reference.
</Title_Description>
    <Label>community</Label>
    <CreatedAt>11/06/2019 9:39:01 PM +00:00</CreatedAt>
    <ClosedAt>12/06/2019 3:25:37 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11523</IssueLabelID>
    <Title>Improvements to global.json.</Title>
    <Description>This epic tracks the work for improving the SDK versioning in global.json.</Description>
    <Title_Description>Improvements to global.json. This epic tracks the work for improving the SDK versioning in global.json.</Title_Description>
    <Label>Epic</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11522</IssueLabelID>
    <Title>Review global.json design document.</Title>
    <Description>Issue to track the review of the proposed changes to global.json for SDK versioning.</Description>
    <Title_Description>Review global.json design document. Issue to track the review of the proposed changes to global.json for SDK versioning.</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11521</IssueLabelID>
    <Title>dotnet-install.cmd fails if install path contains a space</Title>
    <Description>## Steps to reproduce
On Windows run this:
 output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview3-010431
 Commit:    d72abce213

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.18362
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview3-010431\

Host (useful for support):
  Version: 3.0.0-preview3-27503-5
  Commit:  3844df9537

.NET Core SDKs installed:
  2.1.403 [C:\Program Files\dotnet\sdk]
  2.1.505 [C:\Program Files\dotnet\sdk]
  2.1.507 [C:\Program Files\dotnet\sdk]
  2.1.602 [C:\Program Files\dotnet\sdk]
  2.1.700-preview-009597 [C:\Program Files\dotnet\sdk]
  2.1.700-preview-009601 [C:\Program Files\dotnet\sdk]
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.2.105 [C:\Program Files\dotnet\sdk]
  3.0.100-preview3-010431 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download</Description>
    <Title_Description>dotnet-install.cmd fails if install path contains a space ## Steps to reproduce
On Windows run this:
 output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview3-010431
 Commit:    d72abce213

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.18362
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview3-010431\

Host (useful for support):
  Version: 3.0.0-preview3-27503-5
  Commit:  3844df9537

.NET Core SDKs installed:
  2.1.403 [C:\Program Files\dotnet\sdk]
  2.1.505 [C:\Program Files\dotnet\sdk]
  2.1.507 [C:\Program Files\dotnet\sdk]
  2.1.602 [C:\Program Files\dotnet\sdk]
  2.1.700-preview-009597 [C:\Program Files\dotnet\sdk]
  2.1.700-preview-009601 [C:\Program Files\dotnet\sdk]
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.2.105 [C:\Program Files\dotnet\sdk]
  3.0.100-preview3-010431 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11520</IssueLabelID>
    <Title>CLI should not use stage0 SDK for reference assemblies</Title>
    <Description>CLI currently uses the stage0 SDK in its build for reference assemblies.  In source-build CoreFX is always built before CLI so CLI can use up-to-date reference assemblies from there instead.

cc @dseefeld</Description>
    <Title_Description>CLI should not use stage0 SDK for reference assemblies CLI currently uses the stage0 SDK in its build for reference assemblies.  In source-build CoreFX is always built before CLI so CLI can use up-to-date reference assemblies from there instead.

cc @dseefeld</Title_Description>
    <Label>source-build</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11518</IssueLabelID>
    <Title>Source-build patch removal for CLI</Title>
    <Description>Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/cli.

Patches that have the responsibility "Repo" and the Disposition "Incorporate" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility "source-build" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.


Patch name | Type | Disposition | Responsibility | Notes
-- | -- | -- | -- | --
cli/0001-Implement-PVP-repo-API.patch | Flow | Incorporate | Repo |  
cli/0002-Exclude-test-projects-from-source-build.patch | ProjRemoval | Incorporate | Repo |  
cli/0003-Add-repo-specific-target-emptying-file.patch | Build | Incorporate | Repo |  
cli/0004-Consolidate-Newtonsoft.Json-versions.patch | No-op | Remove | source-build | Rebased after CLI took the fix but due to a whitespace diff this patch   remained although it does nothing.
cli/0005-Disable-signing.patch | Build | Remove | source-build | Tomas suggested that we should be able to open-sign things in   source-build.  Needs investigation.
cli/0006-Remove-keys-from-InternalsVisibleTo.patch | Build | Remove | source-build | This shouldn't be necessary if CLI correctly doesn't build tests in   source-build.  Could be either of our   problems.
cli/0007-Consolidate-CommandLine-versions.patch | Bug | RepoRemoval | Repo | This was an additional workaround for the cli-migrate signing issue and   should go away when that does.
cli/0008-Add-LangVersion-to-CLI.patch | ToolCompat | Remove | source-build |  
cli/0009-Revert-to-using-Newtonsoft.Json.patch | ToolCompat | Remove | source-build |  

</Description>
    <Title_Description>Source-build patch removal for CLI Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/cli.

Patches that have the responsibility "Repo" and the Disposition "Incorporate" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility "source-build" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.


Patch name | Type | Disposition | Responsibility | Notes
-- | -- | -- | -- | --
cli/0001-Implement-PVP-repo-API.patch | Flow | Incorporate | Repo |  
cli/0002-Exclude-test-projects-from-source-build.patch | ProjRemoval | Incorporate | Repo |  
cli/0003-Add-repo-specific-target-emptying-file.patch | Build | Incorporate | Repo |  
cli/0004-Consolidate-Newtonsoft.Json-versions.patch | No-op | Remove | source-build | Rebased after CLI took the fix but due to a whitespace diff this patch   remained although it does nothing.
cli/0005-Disable-signing.patch | Build | Remove | source-build | Tomas suggested that we should be able to open-sign things in   source-build.  Needs investigation.
cli/0006-Remove-keys-from-InternalsVisibleTo.patch | Build | Remove | source-build | This shouldn't be necessary if CLI correctly doesn't build tests in   source-build.  Could be either of our   problems.
cli/0007-Consolidate-CommandLine-versions.patch | Bug | RepoRemoval | Repo | This was an additional workaround for the cli-migrate signing issue and   should go away when that does.
cli/0008-Add-LangVersion-to-CLI.patch | ToolCompat | Remove | source-build |  
cli/0009-Revert-to-using-Newtonsoft.Json.patch | ToolCompat | Remove | source-build |  

</Title_Description>
    <Label>source-build</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11509</IssueLabelID>
    <Title>Update user facing string</Title>
    <Description>
    </Description>
    <Title_Description>Update user facing string </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11504</IssueLabelID>
    <Title>dotnet restore using RID causes "empty" project.assets.json file (netcoreapp3.0)</Title>
    <Description>First a little bit of background. 
I am one of the collaborators over at the [dotnet-script](https://github.com/filipw/dotnet-script) repo.

We use 






</Description>
    <Title_Description>dotnet restore using RID causes "empty" project.assets.json file (netcoreapp3.0) First a little bit of background. 
I am one of the collaborators over at the [dotnet-script](https://github.com/filipw/dotnet-script) repo.

We use 






</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11499</IssueLabelID>
    <Title>Allow dotnet commands to bypass the global.json version check</Title>
    <Description>Sometimes users or more importantly CI servers don't have the correct dotnet SDK installed.
We wrote FAKE install scripts that would take care of installing the correct SDK version during the build. Unfortunately even 

Note how this dotnet command does not requirer the correct SDK version.


</Description>
    <Title_Description>Allow dotnet commands to bypass the global.json version check Sometimes users or more importantly CI servers don't have the correct dotnet SDK installed.
We wrote FAKE install scripts that would take care of installing the correct SDK version during the build. Unfortunately even 

Note how this dotnet command does not requirer the correct SDK version.


</Title_Description>
    <Label>enhancement</Label>
    <CreatedAt>6/06/2019 6:45:25 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11494</IssueLabelID>
    <Title>A new option to allow dotnet tool install should return exit code 0 if tool is already installed</Title>
    <Description>Continue of https://github.com/dotnet/cli/issues/11259 to make the topic more specific. Even thought "dotnet update" with "--version" could solve the similar issue but it is hard to discover.</Description>
    <Title_Description>A new option to allow dotnet tool install should return exit code 0 if tool is already installed Continue of https://github.com/dotnet/cli/issues/11259 to make the topic more specific. Even thought "dotnet update" with "--version" could solve the similar issue but it is hard to discover.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11493</IssueLabelID>
    <Title>Remove unused variables from BundledVersions.props.</Title>
    <Description>This commit removes the unused (2.1 SDK) patch level variables from
 item group in
the 2.2 SDK.

Their presence is unnecessary and the values are out of date.

Fixes #10908.</Description>
    <Title_Description>Remove unused variables from BundledVersions.props. This commit removes the unused (2.1 SDK) patch level variables from
 item group in
the 2.2 SDK.

Their presence is unnecessary and the values are out of date.

Fixes #10908.</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>5/06/2019 6:55:02 PM +00:00</CreatedAt>
    <ClosedAt>11/06/2019 6:16:13 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11489</IssueLabelID>
    <Title>[master] Update dependencies from dotnet/clicommandlineparser</Title>
    <Description>This pull request updates the following dependencies

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190606.1
- **Date Produced**: 6/11/2019 6:20 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19306.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190606.1
- **Date Produced**: 6/11/2019 6:20 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19306.1

[marker]: &lt;&gt; (Begin:e18d2f8d-ca6b-4d6f-94db-08d683091c7c)
## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190613.1
- **Date Produced**: 6/13/2019 6:33 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19313.1

[marker]: &lt;&gt; (End:e18d2f8d-ca6b-4d6f-94db-08d683091c7c)















































































</Description>
    <Title_Description>[master] Update dependencies from dotnet/clicommandlineparser This pull request updates the following dependencies

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190425.1
- **Date Produced**: 4/25/2019 8:59 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19225.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190606.1
- **Date Produced**: 6/11/2019 6:20 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19306.1

## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190606.1
- **Date Produced**: 6/11/2019 6:20 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19306.1

[marker]: &lt;&gt; (Begin:e18d2f8d-ca6b-4d6f-94db-08d683091c7c)
## From https://github.com/dotnet/cliCommandLineParser
- **Build**: 20190613.1
- **Date Produced**: 6/13/2019 6:33 PM
- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.DotNet.Cli.CommandLine** -&gt; 1.0.0-preview.19313.1

[marker]: &lt;&gt; (End:e18d2f8d-ca6b-4d6f-94db-08d683091c7c)















































































</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11485</IssueLabelID>
    <Title>Add solution folder argument to dotnet-sln show-folders  (show solution folders)</Title>
    <Description>Feature request:

If possible can this fucntionality be added: list of solution folders?
Use case:

1. List of solution folders (dotnet sln show folders)
2. Add new project under on of this solution folder.  (dotnet sln add project)

It must be related to PR: [https://github.com/dotnet/cli/pull/11000](url)


</Description>
    <Title_Description>Add solution folder argument to dotnet-sln show-folders  (show solution folders) Feature request:

If possible can this fucntionality be added: list of solution folders?
Use case:

1. List of solution folders (dotnet sln show folders)
2. Add new project under on of this solution folder.  (dotnet sln add project)

It must be related to PR: [https://github.com/dotnet/cli/pull/11000](url)


</Title_Description>
    <Label>enhancement</Label>
    <CreatedAt>5/06/2019 8:47:30 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11482</IssueLabelID>
    <Title>ToolManifestEditor should catch FormatException </Title>
    <Description>https://github.com/dotnet/cli/blob/8ab442a668e63d902d03715b84f0764a92ee13eb/src/dotnet/ToolManifest/ToolManifestEditor.cs#L218-L223

The TryGetInt32Value API could throw FormatException if the JSON payload had "version" property with a non-int32 value (like double - e.g. 1.23 or (u)int64 - e.g. 4294967296).

</Description>
    <Title_Description>ToolManifestEditor should catch FormatException  https://github.com/dotnet/cli/blob/8ab442a668e63d902d03715b84f0764a92ee13eb/src/dotnet/ToolManifest/ToolManifestEditor.cs#L218-L223

The TryGetInt32Value API could throw FormatException if the JSON payload had "version" property with a non-int32 value (like double - e.g. 1.23 or (u)int64 - e.g. 4294967296).

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11481</IssueLabelID>
    <Title>Remove dotnet migrate</Title>
    <Description> will not be supported in .NET Core SDK 3.0.100+

This removes it.

Fix https://github.com/dotnet/cli/issues/11458</Description>
    <Title_Description>Remove dotnet migrate  will not be supported in .NET Core SDK 3.0.100+

This removes it.

Fix https://github.com/dotnet/cli/issues/11458</Title_Description>
    <Label>breaking-change</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>4/06/2019 9:59:38 PM +00:00</CreatedAt>
    <ClosedAt>4/06/2019 11:12:22 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11480</IssueLabelID>
    <Title>Support custom scripts</Title>
    <Description>My project has some micro-services written with DotNet Core C# and we have some scripts that we use very often and are very long to remind so we put them in a README.MD file and copy every time which isn't very productive.

Example: 

</Description>
    <Title_Description>Support custom scripts My project has some micro-services written with DotNet Core C# and we have some scripts that we use very often and are very long to remind so we put them in a README.MD file and copy every time which isn't very productive.

Example: 

</Title_Description>
    <Label>enhancement</Label>
    <CreatedAt>4/06/2019 6:19:23 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11470</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>3/06/2019 12:02:05 PM +00:00</CreatedAt>
    <ClosedAt>27/06/2019 2:35:34 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11467</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>3/06/2019 12:01:15 AM +00:00</CreatedAt>
    <ClosedAt>27/06/2019 2:35:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11466</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>2/06/2019 12:01:33 AM +00:00</CreatedAt>
    <ClosedAt>3/06/2019 2:13:21 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11461</IssueLabelID>
    <Title>On a x64 OS the x86 SDK bundle installer displays the incorrect installation directory</Title>
    <Description>On a x64 OS the x86 SDK bundle installer was trying to incorrectly install to "C:\Program Files\dotnet". The MSIs were correcting the MsiProperty [see below] but the installation directory on display is still incorrect.






**WiX documentation:**
ProgramFilesFolder - gets the well-known folder for CSIDL_PROGRAM_FILESX86.
ProgramFiles64Folder - gets the well-known folder for CSIDL_PROGRAM_FILES.
ProgramFiles6432Folder - gets the well-known folder for CSIDL_PROGRAM_FILES on 64-bit Windows and CSIDL_PROGRAM_FILESX86 on 32-bit Windows.

Addresses: https://github.com/dotnet/sdk/issues/3267
</Description>
    <Title_Description>On a x64 OS, the x86 SDK bundle installer displays the incorrect installation directory On a x64 OS the x86 SDK bundle installer was trying to incorrectly install to "C:\Program Files\dotnet". The MSIs were correcting the MsiProperty [see below] but the installation directory on display is still incorrect.






**WiX documentation:**
ProgramFilesFolder - gets the well-known folder for CSIDL_PROGRAM_FILESX86.
ProgramFiles64Folder - gets the well-known folder for CSIDL_PROGRAM_FILES.
ProgramFiles6432Folder - gets the well-known folder for CSIDL_PROGRAM_FILES on 64-bit Windows and CSIDL_PROGRAM_FILESX86 on 32-bit Windows.

Addresses: https://github.com/dotnet/sdk/issues/3267
</Title_Description>
    <Label>Area: Setup</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11452</IssueLabelID>
    <Title>Run install-script tests only when merging into master.</Title>
    <Description>Run install-script tests only when merging into master.

Rationale:
developers do not want to run installation tests
we are only developing the installation scripts in dotnet/cli:master

Trivial:
Adding the '2.2' channel-to-version-resolution test for SDK installations
</Description>
    <Title_Description>Run install-script tests only when merging into master. Run install-script tests only when merging into master.

Rationale:
developers do not want to run installation tests
we are only developing the installation scripts in dotnet/cli:master

Trivial:
Adding the '2.2' channel-to-version-resolution test for SDK installations
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11445</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>30/05/2019 12:01:43 AM +00:00</CreatedAt>
    <ClosedAt>4/06/2019 6:23:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11444</IssueLabelID>
    <Title>Deps file for MSBuild shouldn't downgrade common task dependencies.</Title>
    <Description>## Steps to reproduce
Produce a task with a dependency on a new version of roslyn.

## Expected  behavior
Task works on latest SDK

## Actual behavior
Task fails to load with ref-def mismatch for roslyn DLLs since old version (2.1.0) is listed in MSBuild's deps file and carried in the MSBuild bin folder.

## Environment data


@nguerrera suggested a tactical fix https://github.com/dotnet/arcade/issues/2748#issuecomment-497140703



</Description>
    <Title_Description>Deps file for MSBuild shouldn't downgrade common task dependencies. ## Steps to reproduce
Produce a task with a dependency on a new version of roslyn.

## Expected  behavior
Task works on latest SDK

## Actual behavior
Task fails to load with ref-def mismatch for roslyn DLLs since old version (2.1.0) is listed in MSBuild's deps file and carried in the MSBuild bin folder.

## Environment data


@nguerrera suggested a tactical fix https://github.com/dotnet/arcade/issues/2748#issuecomment-497140703



</Title_Description>
    <Label>source-build</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11441</IssueLabelID>
    <Title>Source-Build: Eliminate Microsoft.DotNet.Cli.CommandLine in CLI</Title>
    <Description>cc @dseefeld 

CLI Prebuilts |   |   |
-- | -- | --
**Package** | **Version** | **Status**  
Microsoft.DotNet.Cli.CommandLine | 0.1.1 | Use Source Built Version 




</Description>
    <Title_Description>Source-Build: Eliminate Microsoft.DotNet.Cli.CommandLine in CLI cc @dseefeld 

CLI Prebuilts |   |   |
-- | -- | --
**Package** | **Version** | **Status**  
Microsoft.DotNet.Cli.CommandLine | 0.1.1 | Use Source Built Version 




</Title_Description>
    <Label>source-build</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11438</IssueLabelID>
    <Title>Re-enable GivenNewCommandItDisplaysCompletions test</Title>
    <Description>Re-enable GivenNewCommandItDisplaysCompletions test

Addresses: https://github.com/dotnet/cli/issues/9737
</Description>
    <Title_Description>Re-enable GivenNewCommandItDisplaysCompletions test Re-enable GivenNewCommandItDisplaysCompletions test

Addresses: https://github.com/dotnet/cli/issues/9737
</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11437</IssueLabelID>
    <Title>dotnet-install.sh architecture detection installs wrong architecture on ARM64 host ARM32 OS</Title>
    <Description>## Issue Description

get_machine_architecture contains the following:

https://github.com/microsoft/azure-pipelines-tasks/blob/08914a70defbdbe73b2bb87e8d0663bdbeb248e0/Tasks/UseDotNetV2/externals/get-os-distro.sh#L159-L178

This is... fundamentally not how 

ref: https://github.com/microsoft/azure-pipelines-tasks/issues/10439</Description>
    <Title_Description>dotnet-install.sh architecture detection installs wrong architecture on ARM64 host, ARM32 OS ## Issue Description

get_machine_architecture contains the following:

https://github.com/microsoft/azure-pipelines-tasks/blob/08914a70defbdbe73b2bb87e8d0663bdbeb248e0/Tasks/UseDotNetV2/externals/get-os-distro.sh#L159-L178

This is... fundamentally not how 

ref: https://github.com/microsoft/azure-pipelines-tasks/issues/10439</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11432</IssueLabelID>
    <Title>Update SDK to 2.2.200-preview-64128-03</Title>
    <Description>
    </Description>
    <Title_Description>Update SDK to 2.2.200-preview-64128-03 </Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>28/05/2019 9:31:51 PM +00:00</CreatedAt>
    <ClosedAt>29/05/2019 5:10:26 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11431</IssueLabelID>
    <Title>Update SDK to 2.1.600-preview-64128-02</Title>
    <Description>
    </Description>
    <Title_Description>Update SDK to 2.1.600-preview-64128-02 </Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>28/05/2019 9:30:39 PM +00:00</CreatedAt>
    <ClosedAt>29/05/2019 8:28:48 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11425</IssueLabelID>
    <Title>Windows Forms and WPF project templates should not show up if current OS isn't Windows</Title>
    <Description>We are not planning to support building Windows Forms and WPF projects on non-Windows operating systems (at least for now): #10842 

Given that we should not include the  project templates for non-Windows builds of the .NET Core SDK.

</Description>
    <Title_Description>Windows Forms and WPF project templates should not show up if current OS isn't Windows We are not planning to support building Windows Forms and WPF projects on non-Windows operating systems (at least for now): #10842 

Given that we should not include the  project templates for non-Windows builds of the .NET Core SDK.

</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11418</IssueLabelID>
    <Title>Adding installation script tests</Title>
    <Description>When we materially change the way the installation scripts install the SDK for 3.0 and beyond - these tests and the ability to add more installation script tests will assist with development. 
</Description>
    <Title_Description>Adding installation script tests When we materially change the way the installation scripts install the SDK for 3.0 and beyond - these tests and the ability to add more installation script tests will assist with development. 
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11417</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>24/05/2019 12:01:56 AM +00:00</CreatedAt>
    <ClosedAt>24/05/2019 4:55:03 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11416</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>24/05/2019 12:01:53 AM +00:00</CreatedAt>
    <ClosedAt>24/05/2019 4:54:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11410</IssueLabelID>
    <Title>Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced</Title>
    <Description>For the 3.0 release we plan to not support building Windows Forms and WPF apps on non-Windows operating systems.  (We may consider supporting it later see for example https://github.com/dotnet/wpf/issues/688).

Most WPF apps will use Microsoft.NET.Sdk.WindowsDesktop and the experience for that on non-Windows is covered here: https://github.com/dotnet/cli/issues/10842

However some projects may not use the WindowsDesktop SDK but will still have a WindowsDesktop FrameworkReference (either explicitly or via a PackageReference).  In that case we should also fail gracefully.  This means:

- On non-Windows don't pre-emptively download WindowsDesktop targeting or runtime packs (which we normally do in case we encounter a transitive FrameworkReference)
- When we encounter a WindowsDesktop FrameworkReference on non-Windows generate an error message stating that the project can only be built on Windows (instead of the generic error message).</Description>
    <Title_Description>Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced For the 3.0 release we plan to not support building Windows Forms and WPF apps on non-Windows operating systems.  (We may consider supporting it later see for example https://github.com/dotnet/wpf/issues/688).

Most WPF apps will use Microsoft.NET.Sdk.WindowsDesktop and the experience for that on non-Windows is covered here: https://github.com/dotnet/cli/issues/10842

However some projects may not use the WindowsDesktop SDK but will still have a WindowsDesktop FrameworkReference (either explicitly or via a PackageReference).  In that case we should also fail gracefully.  This means:

- On non-Windows don't pre-emptively download WindowsDesktop targeting or runtime packs (which we normally do in case we encounter a transitive FrameworkReference)
- When we encounter a WindowsDesktop FrameworkReference on non-Windows generate an error message stating that the project can only be built on Windows (instead of the generic error message).</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11403</IssueLabelID>
    <Title>Failure in Telemetry sending should not be printed to output</Title>
    <Description>## Steps to reproduce
* macOS
* .NET Core 3.0 preview 5
* call an unknown 





</Description>
    <Title_Description>Failure in Telemetry sending should not be printed to output ## Steps to reproduce
* macOS
* .NET Core 3.0 preview 5
* call an unknown 





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11402</IssueLabelID>
    <Title> [loc][Query][Cli] Localizability of "CouldNotConvertToString" </Title>
    <Description>Hi
please help localization team to answer question from translator.
In case translator is not sure about context/meaning/localizability of string we raise a question.

Source:
Could not convert the value of property '{0}' to a string.

File Name:
dotnet\commands\dotnet-run\xlf\LocalizableStrings.xlf

==========================================
Query:
Please define what will placeholder be replaced by.</Description>
    <Title_Description> [loc][Query][Cli] Localizability of "CouldNotConvertToString"  Hi
please help localization team to answer question from translator.
In case translator is not sure about context/meaning/localizability of string we raise a question.

Source:
Could not convert the value of property '{0}' to a string.

File Name:
dotnet\commands\dotnet-run\xlf\LocalizableStrings.xlf

==========================================
Query:
Please define what will placeholder be replaced by.</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11401</IssueLabelID>
    <Title>[loc][Query][Cli] Localizability of "ValueMustBeAnObject" </Title>
    <Description>Hi
please help localization team to answer question from translator.
In case translator is not sure about context/meaning/localizability of string we raise a question.

Source:
The property '{0}' must be an object if it is specified.

File Name:
dotnet\commands\dotnet-run\xlf\LocalizableStrings.xlf

==========================================
Query:
Please clarify if "it" stands for the property or the object.</Description>
    <Title_Description>[loc][Query][Cli] Localizability of "ValueMustBeAnObject"  Hi
please help localization team to answer question from translator.
In case translator is not sure about context/meaning/localizability of string we raise a question.

Source:
The property '{0}' must be an object if it is specified.

File Name:
dotnet\commands\dotnet-run\xlf\LocalizableStrings.xlf

==========================================
Query:
Please clarify if "it" stands for the property or the object.</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11398</IssueLabelID>
    <Title>Installation components are over translated on sdk installation wizard with Chinese</Title>
    <Description>## Steps to reproduce
1. Open SDK 3.0.100-preview6-012031 on Win10-x64 CHN
2. Observe the installation completion page of the installation wizard 

## Expected  behavior
The installation components should show in English rather than Chinese

## Actual behavior
Over translation occurs on installation components
![image](https://user-images.githubusercontent.com/42136111/58154354-0745b380-7ca4-11e9-80a3-2a074812c838.png)

Note:
Related components show in English during installation take .net core runtime for example
![image](https://user-images.githubusercontent.com/42136111/58154466-4116ba00-7ca4-11e9-9ae6-3988eccd72d3.png)

## Environment data
 output:

.NET Core SDK（反映任何 global.json）:
 Version:   3.0.100-preview6-012031
 Commit:    f84d1b7f66

运行时环境:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x86
 Base Path:   C:\Program Files (x86)\dotnet\sdk\3.0.100-preview6-012031\

Host (useful for support):
  Version: 3.0.0-preview6-27720-09
  Commit:  c3145b06ba

.NET Core SDKs installed:
  3.0.100-preview6-012031 [C:\Program Files (x86)\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\Program Files (x86)\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\Program Files (x86)\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\Program Files (x86)\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download




</Description>
    <Title_Description>Installation components are over translated on sdk installation wizard with Chinese ## Steps to reproduce
1. Open SDK 3.0.100-preview6-012031 on Win10-x64 CHN
2. Observe the installation completion page of the installation wizard 

## Expected  behavior
The installation components should show in English rather than Chinese

## Actual behavior
Over translation occurs on installation components
![image](https://user-images.githubusercontent.com/42136111/58154354-0745b380-7ca4-11e9-80a3-2a074812c838.png)

Note:
Related components show in English during installation take .net core runtime for example
![image](https://user-images.githubusercontent.com/42136111/58154466-4116ba00-7ca4-11e9-9ae6-3988eccd72d3.png)

## Environment data
 output:

.NET Core SDK（反映任何 global.json）:
 Version:   3.0.100-preview6-012031
 Commit:    f84d1b7f66

运行时环境:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x86
 Base Path:   C:\Program Files (x86)\dotnet\sdk\3.0.100-preview6-012031\

Host (useful for support):
  Version: 3.0.0-preview6-27720-09
  Commit:  c3145b06ba

.NET Core SDKs installed:
  3.0.100-preview6-012031 [C:\Program Files (x86)\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\Program Files (x86)\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\Program Files (x86)\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\Program Files (x86)\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download




</Title_Description>
    <Label>windows-installer</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11397</IssueLabelID>
    <Title>Button "install" is truncated on the SDK installation wizard with Japanese</Title>
    <Description>## Steps to reproduce
1.Open the sdk installation file (.NET core sdk 3.0.100-preview6-012031).
2.Observe the button "インストール" .

## Expected  behavior
Button content isn't truncated

## Actual behavior
Button content is truncated
![image](https://user-images.githubusercontent.com/38854445/58152836-23dfec80-7ca0-11e9-8d90-c524ea6022cc.png)
![image](https://user-images.githubusercontent.com/38854445/58152967-73261d00-7ca0-11e9-9b51-58181604cb22.png)

## Environment data
VS Version: 16.2.0 Preview 2.0 [28921.339.d16.2stg]
 output:
.NET Core SDK (global.json を反映):
 Version:   3.0.100-preview6-012031
 Commit:    f84d1b7f66

ランタイム環境:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview6-012031\

Host (useful for support):
  Version: 3.0.0-preview6-27720-09
  Commit:  c3145b06ba

.NET Core SDKs installed:
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.2.400-preview-010195 [C:\Program Files\dotnet\sdk]
  3.0.100-preview6-012031 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>Button "install" is truncated on the SDK installation wizard with Japanese ## Steps to reproduce
1.Open the sdk installation file (.NET core sdk 3.0.100-preview6-012031).
2.Observe the button "インストール" .

## Expected  behavior
Button content isn't truncated

## Actual behavior
Button content is truncated
![image](https://user-images.githubusercontent.com/38854445/58152836-23dfec80-7ca0-11e9-8d90-c524ea6022cc.png)
![image](https://user-images.githubusercontent.com/38854445/58152967-73261d00-7ca0-11e9-9b51-58181604cb22.png)

## Environment data
VS Version: 16.2.0 Preview 2.0 [28921.339.d16.2stg]
 output:
.NET Core SDK (global.json を反映):
 Version:   3.0.100-preview6-012031
 Commit:    f84d1b7f66

ランタイム環境:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview6-012031\

Host (useful for support):
  Version: 3.0.0-preview6-27720-09
  Commit:  c3145b06ba

.NET Core SDKs installed:
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.2.400-preview-010195 [C:\Program Files\dotnet\sdk]
  3.0.100-preview6-012031 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>windows-installer</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11395</IssueLabelID>
    <Title>Hotkey conflict on the SDK installation wizard with Turkish</Title>
    <Description>## Steps to reproduce
1.Open  the sdk installation file (.NET core sdk 3.0.100-preview6-012031)
2.Tap "Alt" key to observe the hotkey on installation wizard

## Expected  behavior
Hotkeys work fine on the installation wizard

## Actual behavior
Hotkey "k" is conflicted on the installation wizard
![Untitled](https://user-images.githubusercontent.com/38854445/58146582-5500f280-7c89-11e9-805c-36128951e94e.png)
## Environment data
VS Version: 16.2.0 Preview 2.0 [28920.75.d16.2stg ]
 output:
.NET Core SDK (varsa global.json'u yansıtır):
 Version:   3.0.100-preview6-012031
 Commit:    f84d1b7f66

Çalışma Zamanı Ortamı:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview6-012031\

Host (useful for support):
  Version: 3.0.0-preview6-27720-09
  Commit:  c3145b06ba

.NET Core SDKs installed:
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.2.400-preview-010195 [C:\Program Files\dotnet\sdk]
  3.0.100-preview6-012031 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>Hotkey conflict on the SDK installation wizard with Turkish ## Steps to reproduce
1.Open  the sdk installation file (.NET core sdk 3.0.100-preview6-012031)
2.Tap "Alt" key to observe the hotkey on installation wizard

## Expected  behavior
Hotkeys work fine on the installation wizard

## Actual behavior
Hotkey "k" is conflicted on the installation wizard
![Untitled](https://user-images.githubusercontent.com/38854445/58146582-5500f280-7c89-11e9-805c-36128951e94e.png)
## Environment data
VS Version: 16.2.0 Preview 2.0 [28920.75.d16.2stg ]
 output:
.NET Core SDK (varsa global.json'u yansıtır):
 Version:   3.0.100-preview6-012031
 Commit:    f84d1b7f66

Çalışma Zamanı Ortamı:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview6-012031\

Host (useful for support):
  Version: 3.0.0-preview6-27720-09
  Commit:  c3145b06ba

.NET Core SDKs installed:
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.2.400-preview-010195 [C:\Program Files\dotnet\sdk]
  3.0.100-preview6-012031 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>windows-installer</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11391</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/05/2019 12:02:11 PM +00:00</CreatedAt>
    <ClosedAt>23/05/2019 5:40:48 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11390</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/05/2019 12:02:06 PM +00:00</CreatedAt>
    <ClosedAt>23/05/2019 5:40:25 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11389</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/05/2019 12:02:03 PM +00:00</CreatedAt>
    <ClosedAt>23/05/2019 5:40:04 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11388</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/05/2019 12:01:59 PM +00:00</CreatedAt>
    <ClosedAt>23/05/2019 5:25:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11387</IssueLabelID>
    <Title>Multiple global tool versions installed with unexpected behaviours thereafter</Title>
    <Description>## Steps to reproduce

I honestly don't know how I or 
</Description>
    <Title_Description>Multiple global tool versions installed with unexpected behaviours thereafter ## Steps to reproduce

I honestly don't know how I or 
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11386</IssueLabelID>
    <Title>Local tools vs2019 v16.1 -- There was an error running the selected code generator</Title>
    <Description>From @restrellasosa

[
![Capture](https://user-images.githubusercontent.com/6253560/57991475-38906a80-7a7d-11e9-9ff6-5bad861fe8b6.JPG)
](url)

How i can fix this. I try all! I dont know why and if anybody have knowlegde pls!

--------------------------

From @tebeco
@restrellasosa 
is that related to local tool ? or should it be in another issue ?

--------------------------
From @restrellasosa 

Local tools vs2019 v16.1
[cid:image002.png@01D50E9E.F9466720]

[cid:image006.png@01D50E9E.F9466720]

Enviado desde Correo&lt;https://go.microsoft.com/fwlink/?LinkId=550986&gt; para Windows 10

----------------------------
From @tebeco

it's visual studio right ?
Visual Studio is your IDE
Local tool are the name given to a specific tooling ship via nuget to extend 

if your issue is related to Visual Studio and it installation
Can delete your comments here and create an issue in Visual Studio feedback hub ?
for that just click the "Feedback" button in visual studio ? It's in the top right corner next to the "Live Share" button</Description>
    <Title_Description>Local tools vs2019 v16.1 -- There was an error running the selected code generator From @restrellasosa

[
![Capture](https://user-images.githubusercontent.com/6253560/57991475-38906a80-7a7d-11e9-9ff6-5bad861fe8b6.JPG)
](url)

How i can fix this. I try all! I dont know why and if anybody have knowlegde pls!

--------------------------

From @tebeco
@restrellasosa 
is that related to local tool ? or should it be in another issue ?

--------------------------
From @restrellasosa 

Local tools vs2019 v16.1
[cid:image002.png@01D50E9E.F9466720]

[cid:image006.png@01D50E9E.F9466720]

Enviado desde Correo&lt;https://go.microsoft.com/fwlink/?LinkId=550986&gt; para Windows 10

----------------------------
From @tebeco

it's visual studio right ?
Visual Studio is your IDE
Local tool are the name given to a specific tooling ship via nuget to extend 

if your issue is related to Visual Studio and it installation
Can delete your comments here and create an issue in Visual Studio feedback hub ?
for that just click the "Feedback" button in visual studio ? It's in the top right corner next to the "Live Share" button</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11380</IssueLabelID>
    <Title>dotnet tool install uses current runtime's dotnet.exe and not current dotnet.exe to restore tool</Title>
    <Description>If multilevel lookup is enabled (current default) the sdk can be running on a runtime from a different directory than the dotnet.exe that launched the sdk command. When tool install shells out to dotnet restore it picks the dotnet.exe next to the runtime that is being used and not the dotnet.exe that hosted the tool install command. 

## Steps to reproduce

1. Have some 2.1.x runtime newer than 2.1.0 installed to global c:\program files\dotnet
2. Have [SDK 2.1.300](https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.300/dotnet-sdk-2.1.300-win-x64.zip) unzipped to c:\example
3. 







</Description>
    <Title_Description>dotnet tool install uses current runtime's dotnet.exe and not current dotnet.exe to restore tool If multilevel lookup is enabled (current default) the sdk can be running on a runtime from a different directory than the dotnet.exe that launched the sdk command. When tool install shells out to dotnet restore it picks the dotnet.exe next to the runtime that is being used and not the dotnet.exe that hosted the tool install command. 

## Steps to reproduce

1. Have some 2.1.x runtime newer than 2.1.0 installed to global c:\program files\dotnet
2. Have [SDK 2.1.300](https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.300/dotnet-sdk-2.1.300-win-x64.zip) unzipped to c:\example
3. 







</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11378</IssueLabelID>
    <Title>"dotnet build" failed with error NETSDK1073 for the .NET core 3.0 app with reference to a .NET Standard 2.1 class lib</Title>
    <Description>## Steps to reproduce
1. Install .NET core sdk 3.0.100-preview6-012012 
2. Create a  .NET core 3.0 app with reference to a .NET Standard **2.1** class lib with below CLI
    dotnet new console -o consoleapp30
    dotnet new classlib -n CSNS21Lib -f **netstandard2.1**
    dotnet add reference ..\CSNS21Lib\CSNS21Lib.csproj 
3. run "dotnet build" to observe the result

##Note
1. This issue also repro with VS
2. This issue is not repro on the .NET core 3.0 app with reference to a .NET Standard **2.0** class lib
     

## Expected  behavior
The project can be built successfully

## Actual behavior
Build with error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized
![image](https://user-images.githubusercontent.com/38854445/58007716-75ac3980-7b1d-11e9-9308-75e6561ac645.png)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview6-012012
 Commit:    94b54a5ef6

Runtime Environment:  
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview6-012012\

Host (useful for support):
  Version: 3.0.0-preview6-27718-08
  Commit:  7c7a2e9074

.NET Core SDKs installed:
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.2.400-preview-010195 [C:\Program Files\dotnet\sdk]
  3.0.100-preview6-012012 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview6-19265-03 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27718-08 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27718-08 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download


</Description>
    <Title_Description>"dotnet build" failed with error NETSDK1073 for the .NET core 3.0 app with reference to a .NET Standard 2.1 class lib ## Steps to reproduce
1. Install .NET core sdk 3.0.100-preview6-012012 
2. Create a  .NET core 3.0 app with reference to a .NET Standard **2.1** class lib with below CLI
    dotnet new console -o consoleapp30
    dotnet new classlib -n CSNS21Lib -f **netstandard2.1**
    dotnet add reference ..\CSNS21Lib\CSNS21Lib.csproj 
3. run "dotnet build" to observe the result

##Note
1. This issue also repro with VS
2. This issue is not repro on the .NET core 3.0 app with reference to a .NET Standard **2.0** class lib
     

## Expected  behavior
The project can be built successfully

## Actual behavior
Build with error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized
![image](https://user-images.githubusercontent.com/38854445/58007716-75ac3980-7b1d-11e9-9308-75e6561ac645.png)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview6-012012
 Commit:    94b54a5ef6

Runtime Environment:  
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview6-012012\

Host (useful for support):
  Version: 3.0.0-preview6-27718-08
  Commit:  7c7a2e9074

.NET Core SDKs installed:
  2.1.800-preview-009677 [C:\Program Files\dotnet\sdk]
  2.2.400-preview-010195 [C:\Program Files\dotnet\sdk]
  3.0.100-preview6-012012 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview6-19265-03 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview6-27718-08 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview6-27718-08 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download


</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11376</IssueLabelID>
    <Title>Global tools should be allowed to update themselves</Title>
    <Description>I previously opened https://github.com/dotnet/cli/issues/11375 but on the wrong account so reopening here.

This is handy for making sure that someone using your tool doesn't need to understand the dotnet cli to update their tools (we can simply provide useful contextual information from our global tool that guides them through the process). Typically something like a 






</Description>
    <Title_Description>Global tools should be allowed to update themselves I previously opened https://github.com/dotnet/cli/issues/11375 but on the wrong account so reopening here.

This is handy for making sure that someone using your tool doesn't need to understand the dotnet cli to update their tools (we can simply provide useful contextual information from our global tool that guides them through the process). Typically something like a 






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11374</IssueLabelID>
    <Title>add no-self-contained option for dotnet publish</Title>
    <Description>This is an attempt to fix #9949

I am not sure whether the way I have done it is the best way.</Description>
    <Title_Description>add no-self-contained option for dotnet publish This is an attempt to fix #9949

I am not sure whether the way I have done it is the best way.</Title_Description>
    <Label>community</Label>
    <CreatedAt>17/05/2019 3:24:57 PM +00:00</CreatedAt>
    <ClosedAt>5/06/2019 2:39:43 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11371</IssueLabelID>
    <Title>Increase the time out</Title>
    <Description>A normal run could take 2000ms since all tests run in parallel.
It is very likely to go over the existing limit due to not enough resource
</Description>
    <Title_Description>Increase the time out A normal run could take 2000ms since all tests run in parallel.
It is very likely to go over the existing limit due to not enough resource
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11369</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/05/2019 12:01:29 AM +00:00</CreatedAt>
    <ClosedAt>21/05/2019 12:56:58 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11359</IssueLabelID>
    <Title>Updates to the dotnet installation scripts.</Title>
    <Description>Addresses:
https://github.com/dotnet/cli/issues/10663
"-Runtime aspnetcore" fails because the 'latest.version' file at blob storage is missing the commit sha.
https://github.com/dotnet/cli/issues/10664
We should be printing an accurate and usable "repeatable command".

Trivial:
Mirroring some of the non-similar output; mirroring some comments.</Description>
    <Title_Description>Updates to the dotnet installation scripts. Addresses:
https://github.com/dotnet/cli/issues/10663
"-Runtime aspnetcore" fails because the 'latest.version' file at blob storage is missing the commit sha.
https://github.com/dotnet/cli/issues/10664
We should be printing an accurate and usable "repeatable command".

Trivial:
Mirroring some of the non-similar output; mirroring some comments.</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11355</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/05/2019 11:47:23 PM +00:00</CreatedAt>
    <ClosedAt>16/05/2019 10:47:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11354</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/05/2019 11:47:18 PM +00:00</CreatedAt>
    <ClosedAt>16/05/2019 10:46:46 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11348</IssueLabelID>
    <Title>Update LocalOptionDescription</Title>
    <Description>Fix https://github.com/dotnet/cli/issues/11306</Description>
    <Title_Description>Update LocalOptionDescription Fix https://github.com/dotnet/cli/issues/11306</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11345</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/05/2019 12:01:56 PM +00:00</CreatedAt>
    <ClosedAt>15/05/2019 6:03:14 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11344</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/05/2019 12:01:36 AM +00:00</CreatedAt>
    <ClosedAt>15/05/2019 9:01:25 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11343</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/05/2019 12:01:32 AM +00:00</CreatedAt>
    <ClosedAt>15/05/2019 4:53:26 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11336</IssueLabelID>
    <Title>Remove "please" in error messages.</Title>
    <Description>Per the MS Style guide

Avoid please except in situations where the customer is asked to do something inconvenient or the application or site is to blame for the situation.

A search yields 864 lines with please. In almost every case please should be removed.

Examples:

* 
*    Unable to generate a temporary file for project '{0}'. Cannot add package reference. **Please** clear the temp directory and try again.

I'd be  willing to help remove these.
</Description>
    <Title_Description>Remove "please" in error messages. Per the MS Style guide

Avoid please except in situations where the customer is asked to do something inconvenient or the application or site is to blame for the situation.

A search yields 864 lines with please. In almost every case please should be removed.

Examples:

* 
*    Unable to generate a temporary file for project '{0}'. Cannot add package reference. **Please** clear the temp directory and try again.

I'd be  willing to help remove these.
</Title_Description>
    <Label>good first issue</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>14/05/2019 7:47:02 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2019 9:02:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11324</IssueLabelID>
    <Title>Flaky test: TestPersistenceChannelConstructorAndDisposeOnDeadlock</Title>
    <Description>
    </Description>
    <Title_Description>Flaky test: TestPersistenceChannelConstructorAndDisposeOnDeadlock </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11323</IssueLabelID>
    <Title>Update .vsts-ci.yml</Title>
    <Description>Related to: https://github.com/dotnet/core-eng/issues/6291</Description>
    <Title_Description>Update .vsts-ci.yml Related to: https://github.com/dotnet/core-eng/issues/6291</Title_Description>
    <Label>
    </Label>
    <Assignee>JohnTortugo</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11306</IssueLabelID>
    <Title>[loc][Query][Cli] Localizability of "LocalOptionDescription"</Title>
    <Description>Hi
please help localization team to answer question from translator.
In case translator is not sure about context/meaning/localizability of string we raise a question.

Source:
Update the tool and update from the local tool manifest.

File Name:
dotnet\commands\dotnet-tool\update\xlf\LocalizableStrings.xlf

==========================================
Query:
Does this simply mean "Update the tool from the local tool manifest."?</Description>
    <Title_Description>[loc][Query][Cli] Localizability of "LocalOptionDescription" Hi
please help localization team to answer question from translator.
In case translator is not sure about context/meaning/localizability of string we raise a question.

Source:
Update the tool and update from the local tool manifest.

File Name:
dotnet\commands\dotnet-tool\update\xlf\LocalizableStrings.xlf

==========================================
Query:
Does this simply mean "Update the tool from the local tool manifest."?</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11300</IssueLabelID>
    <Title>Global tools shim does not have PE bits</Title>
    <Description>in 2 places

- [x] https://github.com/dotnet/cli/blob/master/src/dotnet/ShellShim/AppHostShimMaker.cs#L46
- [x] https://github.com/dotnet/sdk/blob/ab0f40a205d29725e02db2de2b330059d1fb7272/src/Tasks/Microsoft.NET.Build.Tasks/GenerateShims.cs#L105

1. https://github.com/dotnet/core-setup/issues/6338 move apphost creating logic to a central place
2. remove the code in SDK and CLI
3. enable allow WPF and Winfom app has app host packaged
4. let these 2 places call with intermediateAssembly param</Description>
    <Title_Description>Global tools shim does not have PE bits in 2 places

- [x] https://github.com/dotnet/cli/blob/master/src/dotnet/ShellShim/AppHostShimMaker.cs#L46
- [x] https://github.com/dotnet/sdk/blob/ab0f40a205d29725e02db2de2b330059d1fb7272/src/Tasks/Microsoft.NET.Build.Tasks/GenerateShims.cs#L105

1. https://github.com/dotnet/core-setup/issues/6338 move apphost creating logic to a central place
2. remove the code in SDK and CLI
3. enable allow WPF and Winfom app has app host packaged
4. let these 2 places call with intermediateAssembly param</Title_Description>
    <Label>release blocking</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11299</IssueLabelID>
    <Title>DotNet tools fail to with `dotnet run` or VS F5</Title>
    <Description>@wli3 

## Steps to reproduce
* Create a console application targeting .NET Core 3.0
F5 in Visual Studio or dotnet run at the command line
It works
* Add   output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview3-010431
 Commit:    d72abce213

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview3-010431\

Host (useful for support):
  Version: 3.0.0-preview3-27503-5
  Commit:  3844df9537

.NET Core SDKs installed:
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.300-rc1-008673 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]
  2.1.500 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009426 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009472 [C:\Program Files\dotnet\sdk]
  2.1.600 [C:\Program Files\dotnet\sdk]
  2.1.602 [C:\Program Files\dotnet\sdk]
  2.1.700-preview-009601 [C:\Program Files\dotnet\sdk]
  2.1.700-preview-009618 [C:\Program Files\dotnet\sdk]
  2.2.200 [C:\Program Files\dotnet\sdk]
  2.2.300-preview-010050 [C:\Program Files\dotnet\sdk]
  2.2.300-preview-010067 [C:\Program Files\dotnet\sdk]
  3.0.100-preview-009768 [C:\Program Files\dotnet\sdk]
  3.0.100-preview3-010431 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 3.0.0-alpha1-10663 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-alpha1-10663 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-rc1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27117-01 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-alpha-27119-5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]






</Description>
    <Title_Description>DotNet tools fail to with  output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview3-010431
 Commit:    d72abce213

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview3-010431\

Host (useful for support):
  Version: 3.0.0-preview3-27503-5
  Commit:  3844df9537

.NET Core SDKs installed:
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.300-rc1-008673 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]
  2.1.500 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009426 [C:\Program Files\dotnet\sdk]
  2.1.600-preview-009472 [C:\Program Files\dotnet\sdk]
  2.1.600 [C:\Program Files\dotnet\sdk]
  2.1.602 [C:\Program Files\dotnet\sdk]
  2.1.700-preview-009601 [C:\Program Files\dotnet\sdk]
  2.1.700-preview-009618 [C:\Program Files\dotnet\sdk]
  2.2.200 [C:\Program Files\dotnet\sdk]
  2.2.300-preview-010050 [C:\Program Files\dotnet\sdk]
  2.2.300-preview-010067 [C:\Program Files\dotnet\sdk]
  3.0.100-preview-009768 [C:\Program Files\dotnet\sdk]
  3.0.100-preview3-010431 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 3.0.0-alpha1-10663 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-alpha1-10663 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-rc1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.8 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27117-01 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-alpha-27119-5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11298</IssueLabelID>
    <Title>Add support for Microsoft.WindowsDesktop.App</Title>
    <Description>Addresses: https://github.com/dotnet/cli/issues/11115


</Description>
    <Title_Description>Add support for Microsoft.WindowsDesktop.App Addresses: https://github.com/dotnet/cli/issues/11115


</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11288</IssueLabelID>
    <Title>Run dotnet tool run t-rex -- -h it doesn't show help from t-rex.</Title>
    <Description>## Steps to reproduce
1. Create empty directory
2. Copy the following and create file called dotnet-tools.json
 
{
    "version": 1
    "isRoot": true
    "tools": {
        "t-rex": {
            "version": "1.0.53"
            "commands": ["t-rex"]
        }
        "dotnetsay": {
            "version": "2.1.4"
            "commands": ["dotnetsay"]
        }
    }
}

3. cd to the directory with manifest file
4. Run  dotnet tool run t-rex -- -h
5. It should show error. Follow the instruction from the error
6. Run dotnet tool run t-rex -- -h again

## Expected  behavior
It should show help from t-rex


## Actual behavior
Run dotnet tool run t-rex -- -h it doesn't show help from t-rex.
![image](https://user-images.githubusercontent.com/33921754/57220293-5f867f80-702d-11e9-8ae3-1f3e76372612.png)


## Environment data
D16.1/28902.138(16.1.0 preview3.0)+ CLI/SDK: 3.0.100-preview6-011765







</Description>
    <Title_Description>Run dotnet tool run t-rex -- -h, it doesn't show help from t-rex. ## Steps to reproduce
1. Create empty directory
2. Copy the following and create file called dotnet-tools.json
 
{
    "version": 1
    "isRoot": true
    "tools": {
        "t-rex": {
            "version": "1.0.53"
            "commands": ["t-rex"]
        }
        "dotnetsay": {
            "version": "2.1.4"
            "commands": ["dotnetsay"]
        }
    }
}

3. cd to the directory with manifest file
4. Run  dotnet tool run t-rex -- -h
5. It should show error. Follow the instruction from the error
6. Run dotnet tool run t-rex -- -h again

## Expected  behavior
It should show help from t-rex


## Actual behavior
Run dotnet tool run t-rex -- -h it doesn't show help from t-rex.
![image](https://user-images.githubusercontent.com/33921754/57220293-5f867f80-702d-11e9-8ae3-1f3e76372612.png)


## Environment data
D16.1/28902.138(16.1.0 preview3.0)+ CLI/SDK: 3.0.100-preview6-011765







</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11274</IssueLabelID>
    <Title>Insert NuGet Build 5.0.2-rtm.5988 into cli</Title>
    <Description>Insert NuGet Build 5.0.2-rtm.5988 into cli release/2.1.6xx branch</Description>
    <Title_Description>Insert NuGet Build 5.0.2-rtm.5988 into cli Insert NuGet Build 5.0.2-rtm.5988 into cli release/2.1.6xx branch</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>1/05/2019 5:16:06 PM +00:00</CreatedAt>
    <ClosedAt>21/05/2019 3:32:54 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11273</IssueLabelID>
    <Title>Insert NuGet Build 5.0.2-rtm.5988 into cli</Title>
    <Description>Insert NuGet Build 5.0.2-rtm.5988 into cli release/2.2.2xx branch</Description>
    <Title_Description>Insert NuGet Build 5.0.2-rtm.5988 into cli Insert NuGet Build 5.0.2-rtm.5988 into cli release/2.2.2xx branch</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>1/05/2019 5:16:01 PM +00:00</CreatedAt>
    <ClosedAt>21/05/2019 7:24:58 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11272</IssueLabelID>
    <Title>Unable to install any dotnet tool</Title>
    <Description>## Steps to reproduce
Open Command line and run 
dotnet tool install --global Amazon.ECS.Tools --version 3.0.0

Using this tool as a specific value for a tool but happens with any tool.
## Expected  behavior
States tool installed

## Actual behavior
C:\Program Files\dotnet\sdk\2.1.505\NuGet.targets(1145): error : Failed to retrieve information about 'amazon.ecs.tools' from remote source 'https://www.nuget.org/FindPackagesById()?id='amazon.ecs.tools'&amp;semVerLevel=2.0.0'. [C:\Users\***\restore.csproj]
C:\Program Files\dotnet\sdk\2.1.505\NuGet.targets(1145): error :   Response status code does not indicate success: 404 (Not Found). [C:\Users\**\restore.csproj]

## Environment data
.NET Core SDK (reflecting any global.json):
 Version:   2.1.505
 Commit:    b220231234

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.505\

Host (useful for support):
  Version: 2.1.9
  Commit:  dcedc87d22

.NET Core SDKs installed:
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.503 [C:\Program Files\dotnet\sdk]
  2.1.505 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]






</Description>
    <Title_Description>Unable to install any dotnet tool ## Steps to reproduce
Open Command line and run 
dotnet tool install --global Amazon.ECS.Tools --version 3.0.0

Using this tool as a specific value for a tool but happens with any tool.
## Expected  behavior
States tool installed

## Actual behavior
C:\Program Files\dotnet\sdk\2.1.505\NuGet.targets(1145): error : Failed to retrieve information about 'amazon.ecs.tools' from remote source 'https://www.nuget.org/FindPackagesById()?id='amazon.ecs.tools'&amp;semVerLevel=2.0.0'. [C:\Users\***\restore.csproj]
C:\Program Files\dotnet\sdk\2.1.505\NuGet.targets(1145): error :   Response status code does not indicate success: 404 (Not Found). [C:\Users\**\restore.csproj]

## Environment data
.NET Core SDK (reflecting any global.json):
 Version:   2.1.505
 Commit:    b220231234

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.505\

Host (useful for support):
  Version: 2.1.9
  Commit:  dcedc87d22

.NET Core SDKs installed:
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.503 [C:\Program Files\dotnet\sdk]
  2.1.505 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11263</IssueLabelID>
    <Title>Dotnet SDK not Found on Windows Server 2016</Title>
    <Description># General

| Component | Name | Version |
| --------------|--------|---------- |
| Operating System | Windows Server 2016 Std |  10.0.14393 |
| Shell | Powershell |

Since the update of my windows server software up to Build 14393 I cannot access the .net Core SDK via the command line. 

I did the following unsuccessful attempt to resolve the issue:

* Install newest Version of .Net Core SDK 2.2.106
* Check
* Remove all versions
* Install version of .Net Core SDK 2.2.203
* Install version of .Net Core SDK 2.2.106
* Restart of the server
* Check

Still getting the following error when executing a build on the command line:



Obviously It cannot compile without finding the actual SDK but why does the installation with the _official Installer_ yield in an partially installed State? (files are copied correctly in c:/program files/dotnet/sdk/&lt;version&gt; though). 

Please let me know whether you need additional information and I will answer promptly.
</Description>
    <Title_Description>Dotnet SDK not Found on Windows Server 2016 # General

| Component | Name | Version |
| --------------|--------|---------- |
| Operating System | Windows Server 2016 Std |  10.0.14393 |
| Shell | Powershell |

Since the update of my windows server software up to Build 14393 I cannot access the .net Core SDK via the command line. 

I did the following unsuccessful attempt to resolve the issue:

* Install newest Version of .Net Core SDK 2.2.106
* Check
* Remove all versions
* Install version of .Net Core SDK 2.2.203
* Install version of .Net Core SDK 2.2.106
* Restart of the server
* Check

Still getting the following error when executing a build on the command line:



Obviously It cannot compile without finding the actual SDK but why does the installation with the _official Installer_ yield in an partially installed State? (files are copied correctly in c:/program files/dotnet/sdk/&lt;version&gt; though). 

Please let me know whether you need additional information and I will answer promptly.
</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11261</IssueLabelID>
    <Title>Update SDK version to `2.2.300-preview-64023-02`.</Title>
    <Description>This commit updates the SDK version to .</Description>
    <Title_Description>Update SDK version to .</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/04/2019 6:49:05 AM +00:00</CreatedAt>
    <ClosedAt>29/04/2019 5:02:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11260</IssueLabelID>
    <Title>Update the SDK to `2.1.700-preview-64023-01`.</Title>
    <Description>This commit updates the SDK to .
</Description>
    <Title_Description>Update the SDK to .
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/04/2019 5:00:51 AM +00:00</CreatedAt>
    <ClosedAt>29/04/2019 5:02:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11248</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>24/04/2019 8:26:02 PM +00:00</CreatedAt>
    <ClosedAt>15/05/2019 11:13:27 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11247</IssueLabelID>
    <Title>Rebuild release/2.2.2xx</Title>
    <Description>Updates to the ReadME in order to rebuild release 2.2.2xx
</Description>
    <Title_Description>Rebuild release/2.2.2xx Updates to the ReadME in order to rebuild release 2.2.2xx
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11246</IssueLabelID>
    <Title>Rebuild release/2.1.6xx</Title>
    <Description>Updates to the ReadME in order to rebuild release 2.1.6xx
</Description>
    <Title_Description>Rebuild release/2.1.6xx Updates to the ReadME in order to rebuild release 2.1.6xx
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11245</IssueLabelID>
    <Title>Update the BranchInfo for release/2.1.7xx</Title>
    <Description>Update the BranchInfo for release/2.1.7xx
</Description>
    <Title_Description>Update the BranchInfo for release/2.1.7xx Update the BranchInfo for release/2.1.7xx
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11244</IssueLabelID>
    <Title>Update the BranchInfo for release/2.2.3xx</Title>
    <Description>Update the BranchInfo for release/2.2.3xx</Description>
    <Title_Description>Update the BranchInfo for release/2.2.3xx Update the BranchInfo for release/2.2.3xx</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11240</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>24/04/2019 12:01:19 AM +00:00</CreatedAt>
    <ClosedAt>2/06/2019 6:11:33 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11239</IssueLabelID>
    <Title>release/2.1.7xx: Update debain jessie image</Title>
    <Description>The "Dotnet CLI [AllLinuxDistrosNativeInstallers][x64][release-2.1_2.2-no-suffix]" leg of the release/2.1.7xx CLI build is failing:

**Failed to fetch http://httpredir.debian.org/debian/dists/jessie-updates/InRelease  Unable to find expected entry 'main/binary-amd64/Packages' in Release file (Wrong sources.list entry or malformed file)**

debian.org re-organized their folders and deleted "jessie-updates". Cherry-picking the change that addresses this. 

The release/2.1.7xx hasn't had a successful build of all legs yet - this should solve the problem.</Description>
    <Title_Description>release/2.1.7xx: Update debain jessie image The "Dotnet CLI [AllLinuxDistrosNativeInstallers][x64][release-2.1_2.2-no-suffix]" leg of the release/2.1.7xx CLI build is failing:

**Failed to fetch http://httpredir.debian.org/debian/dists/jessie-updates/InRelease  Unable to find expected entry 'main/binary-amd64/Packages' in Release file (Wrong sources.list entry or malformed file)**

debian.org re-organized their folders and deleted "jessie-updates". Cherry-picking the change that addresses this. 

The release/2.1.7xx hasn't had a successful build of all legs yet - this should solve the problem.</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11238</IssueLabelID>
    <Title>release/2.2.3xx: Update debain jessie image</Title>
    <Description>The "Dotnet CLI [AllLinuxDistrosNativeInstallers][x64][release-2.1_2.2-no-suffix]" leg of the release/2.1.7xx CLI build is failing:

**Failed to fetch http://httpredir.debian.org/debian/dists/jessie-updates/InRelease  Unable to find expected entry 'main/binary-amd64/Packages' in Release file (Wrong sources.list entry or malformed file)**

debian.org re-organized their folders anD deleted "jessie-updates". Cherry-picking the change that addresses this. 

The release/2.2.3xx hasn't had a successful build of all legs yet - this should solve the problem.</Description>
    <Title_Description>release/2.2.3xx: Update debain jessie image The "Dotnet CLI [AllLinuxDistrosNativeInstallers][x64][release-2.1_2.2-no-suffix]" leg of the release/2.1.7xx CLI build is failing:

**Failed to fetch http://httpredir.debian.org/debian/dists/jessie-updates/InRelease  Unable to find expected entry 'main/binary-amd64/Packages' in Release file (Wrong sources.list entry or malformed file)**

debian.org re-organized their folders anD deleted "jessie-updates". Cherry-picking the change that addresses this. 

The release/2.2.3xx hasn't had a successful build of all legs yet - this should solve the problem.</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11225</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>22/04/2019 6:24:45 PM +00:00</CreatedAt>
    <ClosedAt>23/04/2019 10:08:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11213</IssueLabelID>
    <Title>Add command line usage help for the new --roll-forward option</Title>
    <Description>The new roll forward feature introduces a new command line option . It's implemented by the host but the command line help is sometimes shown from the code in CLI repo.

The feature is added in dotnet/core-setup#5891


</Description>
    <Title_Description>Add command line usage help for the new --roll-forward option The new roll forward feature introduces a new command line option . It's implemented by the host but the command line help is sometimes shown from the code in CLI repo.

The feature is added in dotnet/core-setup#5891


</Title_Description>
    <Label>Area: CommandLine</Label>
    <Assignee>vitek-karas</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11200</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/04/2019 12:01:10 PM +00:00</CreatedAt>
    <ClosedAt>20/04/2019 2:31:34 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11199</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/04/2019 12:01:07 PM +00:00</CreatedAt>
    <ClosedAt>1/06/2019 1:25:53 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11198</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/04/2019 12:01:02 PM +00:00</CreatedAt>
    <ClosedAt>23/04/2019 10:08:20 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11194</IssueLabelID>
    <Title>DotnetCommand created in test should run on stage2</Title>
    <Description>not stage0. Or it should caught SDK + dotnet tools bug much earlier during insertion to CLI

This was the case before arcade </Description>
    <Title_Description>DotnetCommand created in test should run on stage2 not stage0. Or it should caught SDK + dotnet tools bug much earlier during insertion to CLI

This was the case before arcade </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11192</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/04/2019 12:01:07 AM +00:00</CreatedAt>
    <ClosedAt>19/04/2019 2:46:41 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11190</IssueLabelID>
    <Title>Install global tool failed with error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'any'.</Title>
    <Description>## Steps to reproduce
Require: machine also install netcoreapp2.1 runtime since "dotnetsay" is targeting 2.1. This should not be required when netcoreapp3.0 is released and dotnetsay is updated
1. Create empty directory
2. not yet implemented Run dotnet new tool-manifest
	a. In the meantime copy the following and create file called dotnet-tools.json
 
{
"version": 1
"isRoot": true
"tools": {}
}
3. cd to the directory with manifest file
4. run dotnet tool install dotnetsay
## Expected  behavior
Run dotnet tool install dotnetsay succeeded.

## Actual behavior
Run failed with error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'any'.
![image](https://user-images.githubusercontent.com/33921754/56344804-e72c5b80-61f0-11e9-9813-28f48c941a6d.png)



## Environment data
D16.0/28803.202(16.0.2) + CLI/SDK: 3.0.100-preview5-011354





</Description>
    <Title_Description>Install global tool failed with error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'any'. ## Steps to reproduce
Require: machine also install netcoreapp2.1 runtime since "dotnetsay" is targeting 2.1. This should not be required when netcoreapp3.0 is released and dotnetsay is updated
1. Create empty directory
2. not yet implemented Run dotnet new tool-manifest
	a. In the meantime copy the following and create file called dotnet-tools.json
 
{
"version": 1
"isRoot": true
"tools": {}
}
3. cd to the directory with manifest file
4. run dotnet tool install dotnetsay
## Expected  behavior
Run dotnet tool install dotnetsay succeeded.

## Actual behavior
Run failed with error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'any'.
![image](https://user-images.githubusercontent.com/33921754/56344804-e72c5b80-61f0-11e9-9813-28f48c941a6d.png)



## Environment data
D16.0/28803.202(16.0.2) + CLI/SDK: 3.0.100-preview5-011354





</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11185</IssueLabelID>
    <Title>User facing string review</Title>
    <Description>https://github.com/dotnet/cli/pull/11179
https://github.com/dotnet/cli/pull/11143

Has not been review by PM</Description>
    <Title_Description>User facing string review https://github.com/dotnet/cli/pull/11179
https://github.com/dotnet/cli/pull/11143

Has not been review by PM</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11179</IssueLabelID>
    <Title>dotnet tool uninstall should find the first manifest file contain package id</Title>
    <Description>fix https://github.com/dotnet/cli/issues/11139   a lot of file touched. But most of them are locs

Instead of the first manifest file regardless. So the behavior is aligned with tool update.
Extract method ToolManifestFinderExtensions from tool update. And use them in both places.

I changed the following to make it generic. Since the user just type the command I don't think uninstall or update in the error message is significant.

"If you intended **to uninstall** on a global tool use the  option for the command."</Description>
    <Title_Description>dotnet tool uninstall should find the first manifest file contain package id fix https://github.com/dotnet/cli/issues/11139   a lot of file touched. But most of them are locs

Instead of the first manifest file regardless. So the behavior is aligned with tool update.
Extract method ToolManifestFinderExtensions from tool update. And use them in both places.

I changed the following to make it generic. Since the user just type the command I don't think uninstall or update in the error message is significant.

"If you intended **to uninstall** on a global tool use the  option for the command."</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11178</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/04/2019 10:20:52 PM +00:00</CreatedAt>
    <ClosedAt>19/04/2019 2:46:18 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11177</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/04/2019 10:20:49 PM +00:00</CreatedAt>
    <ClosedAt>19/04/2019 2:45:56 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11176</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/04/2019 10:20:44 PM +00:00</CreatedAt>
    <ClosedAt>18/04/2019 9:10:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11175</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/04/2019 10:20:42 PM +00:00</CreatedAt>
    <ClosedAt>18/04/2019 9:10:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11174</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/04/2019 10:20:39 PM +00:00</CreatedAt>
    <ClosedAt>18/04/2019 6:16:50 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11167</IssueLabelID>
    <Title>dotnet tool restore is missing a --tool-path option to support CI helix scenarios</Title>
    <Description>We recently switched to .NET Core SDK 3.0.0-preview3 in **corefx** and want to make use of the new repo tools feature. As we test with helix we need to be able to restore the tools upfront **from the tool’s manifest** archive them and submit the archive as a helix payload.

The dotnet-tools.json contains all the necessary information but I’m missing a . If we can’t restore from the manifest to a certain location then this solution can’t be used which would be unfortunate.

cc @ericstj @safern @wli3 </Description>
    <Title_Description>dotnet tool restore is missing a --tool-path option to support CI helix scenarios We recently switched to .NET Core SDK 3.0.0-preview3 in **corefx** and want to make use of the new repo tools feature. As we test with helix we need to be able to restore the tools upfront **from the tool’s manifest** archive them and submit the archive as a helix payload.

The dotnet-tools.json contains all the necessary information but I’m missing a . If we can’t restore from the manifest to a certain location then this solution can’t be used which would be unfortunate.

cc @ericstj @safern @wli3 </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11166</IssueLabelID>
    <Title>[master] Update dependencies from dotnet/sdk</Title>
    <Description>This pull request updates the following dependencies

## From https://github.com/dotnet/sdk
- **Build**: 20190415.3
- **Date Produced**: 4/16/2019 6:53 AM
- **Commit**: 8cb31b0fd0bb5d36b9781442865f2e26cf6fbedc
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview5.19215.3

## From https://github.com/dotnet/sdk
- **Build**: 20190415.3
- **Date Produced**: 4/16/2019 6:53 AM
- **Commit**: 8cb31b0fd0bb5d36b9781442865f2e26cf6fbedc
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview5.19215.3

## From https://github.com/dotnet/sdk
- **Build**: 20190417.12
- **Date Produced**: 4/18/2019 12:18 AM
- **Commit**: b25441a3e53a2953edf634d5bd310a4ace955b25
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview5.19217.12

## From https://github.com/dotnet/sdk
- **Build**: 20190418.1
- **Date Produced**: 4/18/2019 6:01 PM
- **Commit**: 4a9967e05bd22bda454598b0dbdfc7cd4ed0dd2d
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview5.19218.1

</Description>
    <Title_Description>[master] Update dependencies from dotnet/sdk This pull request updates the following dependencies

## From https://github.com/dotnet/sdk
- **Build**: 20190415.3
- **Date Produced**: 4/16/2019 6:53 AM
- **Commit**: 8cb31b0fd0bb5d36b9781442865f2e26cf6fbedc
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview5.19215.3

## From https://github.com/dotnet/sdk
- **Build**: 20190415.3
- **Date Produced**: 4/16/2019 6:53 AM
- **Commit**: 8cb31b0fd0bb5d36b9781442865f2e26cf6fbedc
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview5.19215.3

## From https://github.com/dotnet/sdk
- **Build**: 20190417.12
- **Date Produced**: 4/18/2019 12:18 AM
- **Commit**: b25441a3e53a2953edf634d5bd310a4ace955b25
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview5.19217.12

## From https://github.com/dotnet/sdk
- **Build**: 20190418.1
- **Date Produced**: 4/18/2019 6:01 PM
- **Commit**: 4a9967e05bd22bda454598b0dbdfc7cd4ed0dd2d
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview5.19218.1

</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11157</IssueLabelID>
    <Title>Remove apphost template when apphosts are bundled</Title>
    <Description>original change is here https://github.com/dotnet/cli/pull/8893/files#diff-0805a49c9b784cecb879590476022506R1

Since we will bundle all apphosts this apphost template for global tools is no longer needed</Description>
    <Title_Description>Remove apphost template when apphosts are bundled original change is here https://github.com/dotnet/cli/pull/8893/files#diff-0805a49c9b784cecb879590476022506R1

Since we will bundle all apphosts this apphost template for global tools is no longer needed</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11147</IssueLabelID>
    <Title>Remove duplication in message</Title>
    <Description>fix https://github.com/dotnet/cli/issues/11146</Description>
    <Title_Description>Remove duplication in message fix https://github.com/dotnet/cli/issues/11146</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11146</IssueLabelID>
    <Title>Duplication in first run welcome message</Title>
    <Description>
    </Description>
    <Title_Description>Duplication in first run welcome message </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11143</IssueLabelID>
    <Title>dotnet tool --local update</Title>
    <Description>**Please review by commit**

the follow 2 are large but they are refactorings to reduce the duplication:
Create applied option class 7d65d20
Extract a class and a extension to minimize the dup from install and update 8ae38bd

Impl dotnet tool update a438573 is the actual feature</Description>
    <Title_Description>dotnet tool --local update **Please review by commit**

the follow 2 are large but they are refactorings to reduce the duplication:
Create applied option class 7d65d20
Extract a class and a extension to minimize the dup from install and update 8ae38bd

Impl dotnet tool update a438573 is the actual feature</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11142</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>12/04/2019 12:01:24 AM +00:00</CreatedAt>
    <ClosedAt>12/04/2019 3:55:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11141</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>12/04/2019 12:01:22 AM +00:00</CreatedAt>
    <ClosedAt>16/04/2019 8:02:45 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11140</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>12/04/2019 12:01:19 AM +00:00</CreatedAt>
    <ClosedAt>16/04/2019 10:18:52 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11139</IssueLabelID>
    <Title>Local tools uninstall should uninstall from the first manfiest with package id</Title>
    <Description>instead of the first manfiest regradless</Description>
    <Title_Description>Local tools uninstall should uninstall from the first manfiest with package id instead of the first manfiest regradless</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11138</IssueLabelID>
    <Title>Insert NuGet Build 5.0.1-rtm.5946 into cli</Title>
    <Description>Insert NuGet Build 5.0.1-rtm.5946 into cli release/2.1.6xx branch</Description>
    <Title_Description>Insert NuGet Build 5.0.1-rtm.5946 into cli Insert NuGet Build 5.0.1-rtm.5946 into cli release/2.1.6xx branch</Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/04/2019 10:33:46 PM +00:00</CreatedAt>
    <ClosedAt>16/04/2019 9:12:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11137</IssueLabelID>
    <Title>Insert NuGet Build 5.0.1-rtm.5946 into cli</Title>
    <Description>Insert NuGet Build 5.0.1-rtm.5946 into cli release/2.2.2xx branch</Description>
    <Title_Description>Insert NuGet Build 5.0.1-rtm.5946 into cli Insert NuGet Build 5.0.1-rtm.5946 into cli release/2.2.2xx branch</Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/04/2019 10:33:42 PM +00:00</CreatedAt>
    <ClosedAt>16/04/2019 9:44:52 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11136</IssueLabelID>
    <Title>Onboard with async publishing</Title>
    <Description>Relates to: https://github.com/dotnet/arcade/issues/2444

Goal: mitigate  and add further validations. [More details here.](https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/AsyncPublishing_HowToUse.md)

Test build was here: https://dnceng.visualstudio.com/internal/_build/results?buildId=151209
Test release: https://dnceng.visualstudio.com/internal/_releaseProgress?_a=release-pipeline-progress&amp;releaseId=4497</Description>
    <Title_Description>Onboard with async publishing Relates to: https://github.com/dotnet/arcade/issues/2444

Goal: mitigate  and add further validations. [More details here.](https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/AsyncPublishing_HowToUse.md)

Test build was here: https://dnceng.visualstudio.com/internal/_build/results?buildId=151209
Test release: https://dnceng.visualstudio.com/internal/_releaseProgress?_a=release-pipeline-progress&amp;releaseId=4497</Title_Description>
    <Label>
    </Label>
    <Assignee>JohnTortugo</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11129</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/04/2019 12:01:29 AM +00:00</CreatedAt>
    <ClosedAt>11/04/2019 3:14:35 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11128</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/04/2019 12:01:23 AM +00:00</CreatedAt>
    <ClosedAt>11/04/2019 3:14:59 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11127</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/04/2019 12:01:21 AM +00:00</CreatedAt>
    <ClosedAt>11/04/2019 2:18:59 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11126</IssueLabelID>
    <Title>Remove checked-in ArrayBufferWriter</Title>
    <Description>When https://github.com/dotnet/corefx/issues/34894 is in</Description>
    <Title_Description>Remove checked-in ArrayBufferWriter When https://github.com/dotnet/corefx/issues/34894 is in</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11121</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>10/04/2019 12:01:26 PM +00:00</CreatedAt>
    <ClosedAt>10/04/2019 4:53:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11120</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/04/2019 10:50:27 PM +00:00</CreatedAt>
    <ClosedAt>9/04/2019 11:29:17 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11119</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/04/2019 10:50:22 PM +00:00</CreatedAt>
    <ClosedAt>10/04/2019 12:39:42 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11118</IssueLabelID>
    <Title>Update aspnet aspnet coresetup to rtm-35537 rtm-35537 2.1.0 respectively (release/2.2.1xx)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update aspnet, aspnet, coresetup to rtm-35537, rtm-35537, 2.1.0, respectively (release/2.2.1xx) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>9/04/2019 6:28:39 PM +00:00</CreatedAt>
    <ClosedAt>9/04/2019 10:24:57 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11117</IssueLabelID>
    <Title>Update aspnet aspnet coresetup to rtm-35537 rtm-35537 2.1.0 respectively (release/2.2.2xx)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update aspnet, aspnet, coresetup to rtm-35537, rtm-35537, 2.1.0, respectively (release/2.2.2xx) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>9/04/2019 6:27:55 PM +00:00</CreatedAt>
    <ClosedAt>9/04/2019 9:47:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11116</IssueLabelID>
    <Title>Merge release/2.2.1xx-MSRC to release/2.2.1xx</Title>
    <Description>
    </Description>
    <Title_Description>Merge release/2.2.1xx-MSRC to release/2.2.1xx </Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>9/04/2019 6:14:56 PM +00:00</CreatedAt>
    <ClosedAt>9/04/2019 6:45:20 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11115</IssueLabelID>
    <Title>Support Microsoft.WindowsDesktop.App from dotnet-install.ps1</Title>
    <Description>The dotnet-install.ps1 script supports installing ASP.NET Core and NETCore.App shared frameworks. In .NET Core 3 there is a new shared framework Microsoft.WindowsDesktop.App. It would be useful to add support for installing this with the dotnet-install.ps1 script.

Usage:


Note: for obvious reasons dotnet-install.sh does not need to support this.</Description>
    <Title_Description>Support Microsoft.WindowsDesktop.App from dotnet-install.ps1 The dotnet-install.ps1 script supports installing ASP.NET Core and NETCore.App shared frameworks. In .NET Core 3 there is a new shared framework Microsoft.WindowsDesktop.App. It would be useful to add support for installing this with the dotnet-install.ps1 script.

Usage:


Note: for obvious reasons dotnet-install.sh does not need to support this.</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11111</IssueLabelID>
    <Title>DotnetCliTool on 3.0</Title>
    <Description>## Steps to reproduce
I tried to create a 





</Description>
    <Title_Description>DotnetCliTool on 3.0 ## Steps to reproduce
I tried to create a 





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11095</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>8/04/2019 12:01:30 PM +00:00</CreatedAt>
    <ClosedAt>19/04/2019 6:06:46 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11092</IssueLabelID>
    <Title>Merge master to release/3.0.1xx for preview4</Title>
    <Description>
    </Description>
    <Title_Description>Merge master to release/3.0.1xx for preview4 </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11088</IssueLabelID>
    <Title>flaky test ItIgnoresSIGINT</Title>
    <Description>I need to rerun the test to keep auto merge go though. ItIgnoresSIGINT happens several times</Description>
    <Title_Description>flaky test ItIgnoresSIGINT I need to rerun the test to keep auto merge go though. ItIgnoresSIGINT happens several times</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11087</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>6/04/2019 11:00:10 PM +00:00</CreatedAt>
    <ClosedAt>7/04/2019 9:01:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11080</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>6/04/2019 12:01:26 AM +00:00</CreatedAt>
    <ClosedAt>6/04/2019 6:55:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11070</IssueLabelID>
    <Title>Make sure that an empty argument is preserved.</Title>
    <Description>These changes fix issue #8892.

The net effect is that when an empty argument is detected a pair of double quotes will be emitted.

See #10909 for the original PR.</Description>
    <Title_Description>Make sure that an empty argument is preserved. These changes fix issue #8892.

The net effect is that when an empty argument is detected a pair of double quotes will be emitted.

See #10909 for the original PR.</Title_Description>
    <Label>community</Label>
    <CreatedAt>4/04/2019 5:22:33 AM +00:00</CreatedAt>
    <ClosedAt>4/04/2019 9:01:44 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11068</IssueLabelID>
    <Title>Clean up setting DOTNET_SKIP_FIRST_TIME_EXPERIENCE in script</Title>
    <Description>after https://github.com/dotnet/cli/issues/10364 this flag is no longer honored. We should remove it in our build script across CLI SDK toolset core-sdk


</Description>
    <Title_Description>Clean up setting DOTNET_SKIP_FIRST_TIME_EXPERIENCE in script after https://github.com/dotnet/cli/issues/10364 this flag is no longer honored. We should remove it in our build script across CLI SDK toolset core-sdk


</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11067</IssueLabelID>
    <Title>Merge release/3.0.1xx to master 040319</Title>
    <Description>
    </Description>
    <Title_Description>Merge release/3.0.1xx to master 040319 </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11058</IssueLabelID>
    <Title>dotnet-install.ps1 installs locally even when same version is already installed globally</Title>
    <Description>## Steps to reproduce

1. On a machine that already has 2.2.101 SDK installed
2. 




</Description>
    <Title_Description>dotnet-install.ps1 installs locally even when same version is already installed globally ## Steps to reproduce

1. On a machine that already has 2.2.101 SDK installed
2. 




</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11045</IssueLabelID>
    <Title>Fix bash completion when the SDK is not installed</Title>
    <Description>The  is installed before trying to use to get completions. If the SDK is not installed we will only show file completions.

Fixes #11044</Description>
    <Title_Description>Fix bash completion when the SDK is not installed The  is installed before trying to use to get completions. If the SDK is not installed we will only show file completions.

Fixes #11044</Title_Description>
    <Label>community</Label>
    <CreatedAt>29/03/2019 5:05:39 PM +00:00</CreatedAt>
    <ClosedAt>2/04/2019 8:02:14 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11041</IssueLabelID>
    <Title>[master] Update dependencies from dotnet/sdk</Title>
    <Description>This pull request updates the following dependencies

## From https://github.com/dotnet/sdk
- **Build**: 20190328.2
- **Date Produced**: 3/29/2019 3:17 AM
- **Commit**: 0979dd3c53a8971a5434cf4bc68efd103fe5ea68
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview4.19178.2

## From https://github.com/dotnet/sdk
- **Build**: 20190328.2
- **Date Produced**: 3/29/2019 3:17 AM
- **Commit**: 0979dd3c53a8971a5434cf4bc68efd103fe5ea68
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview4.19178.2

</Description>
    <Title_Description>[master] Update dependencies from dotnet/sdk This pull request updates the following dependencies

## From https://github.com/dotnet/sdk
- **Build**: 20190328.2
- **Date Produced**: 3/29/2019 3:17 AM
- **Commit**: 0979dd3c53a8971a5434cf4bc68efd103fe5ea68
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview4.19178.2

## From https://github.com/dotnet/sdk
- **Build**: 20190328.2
- **Date Produced**: 3/29/2019 3:17 AM
- **Commit**: 0979dd3c53a8971a5434cf4bc68efd103fe5ea68
- **Branch**: refs/heads/master
- **Updates**:
  - **Microsoft.NET.Sdk** -&gt; 3.0.100-preview4.19178.2

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11039</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/03/2019 12:01:12 PM +00:00</CreatedAt>
    <ClosedAt>4/04/2019 10:23:08 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11038</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/03/2019 12:01:08 PM +00:00</CreatedAt>
    <ClosedAt>3/04/2019 4:19:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11037</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/03/2019 12:01:37 AM +00:00</CreatedAt>
    <ClosedAt>29/03/2019 1:42:45 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11036</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/03/2019 12:01:34 AM +00:00</CreatedAt>
    <ClosedAt>29/03/2019 1:42:05 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11034</IssueLabelID>
    <Title>Update docker with build-in sudo</Title>
    <Description>To reduce the chance of build failure. Currently we need to download .

https://github.com/dotnet/dotnet-buildtools-prereqs-docker/pull/75

mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-afc9dca-20190328175133
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-debpkg-cfdd435-20190328175133
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-17.10-afc9dca-20190328175132
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-17.10-debpkg-cfdd435-20190328175132
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-afc9dca-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-debpkg-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-coredeps-d770b8b-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-coredeps
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-crossdeps-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-crossdeps
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-alpine-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-mlnet-207e097-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-afc9dca-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-debpkg-cfdd435-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-coredeps-4e6e894-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-coredeps
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-crossdeps-cfdd435-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-crossdeps
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-cross-cfdd435-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-29-afc9dca-20190328175057
mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-29-helix-c6dc5e6-20190328175057
mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-28-afc9dca-20190328175057
mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-28-helix-45b1fa2-20190328175057
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-coredeps-58e4974-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-afc9dca-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-debpkg-58e4974-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-corert-58e4974-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-stretch-docker-testrunner-63f2145-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-stretch-afc9dca-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:opensuse-42.3-afc9dca-20190328191913
mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-afc9dca-20190328192013
mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-mlnet-8bba86b-20190328192013
mcr.microsoft.com/dotnet-buildtools/prereqs:centos-6-afc9dca-20190328192030</Description>
    <Title_Description>Update docker with build-in sudo To reduce the chance of build failure. Currently we need to download .

https://github.com/dotnet/dotnet-buildtools-prereqs-docker/pull/75

mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-afc9dca-20190328175133
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-debpkg-cfdd435-20190328175133
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-17.10-afc9dca-20190328175132
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-17.10-debpkg-cfdd435-20190328175132
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-afc9dca-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-debpkg-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-coredeps-d770b8b-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-coredeps
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-crossdeps-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-crossdeps
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-alpine-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-cfdd435-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-mlnet-207e097-20190328175112
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-afc9dca-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-debpkg-cfdd435-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-coredeps-4e6e894-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-coredeps
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-crossdeps-cfdd435-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-crossdeps
mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-cross-cfdd435-20190328175106
mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-29-afc9dca-20190328175057
mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-29-helix-c6dc5e6-20190328175057
mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-28-afc9dca-20190328175057
mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-28-helix-45b1fa2-20190328175057
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-coredeps-58e4974-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-afc9dca-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-debpkg-58e4974-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-corert-58e4974-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-stretch-docker-testrunner-63f2145-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:debian-stretch-afc9dca-20190328175052
mcr.microsoft.com/dotnet-buildtools/prereqs:opensuse-42.3-afc9dca-20190328191913
mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-afc9dca-20190328192013
mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-mlnet-8bba86b-20190328192013
mcr.microsoft.com/dotnet-buildtools/prereqs:centos-6-afc9dca-20190328192030</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11033</IssueLabelID>
    <Title>fix add package when package directory has spaces</Title>
    <Description>This should close #10685 </Description>
    <Title_Description>fix add package when package directory has spaces This should close #10685 </Title_Description>
    <Label>community</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11032</IssueLabelID>
    <Title>Update debain jessie image</Title>
    <Description>
    </Description>
    <Title_Description>Update debain jessie image </Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11031</IssueLabelID>
    <Title>Remove implicit feeds from the SDK.</Title>
    <Description>## Steps to reproduce

with SDK 2 and a nuget.config that looks something like:

</Description>
    <Title_Description>Remove implicit feeds from the SDK. ## Steps to reproduce

with SDK 2 and a nuget.config that looks something like:

</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11029</IssueLabelID>
    <Title>Remove skip first run flag and simplify flags</Title>
    <Description>Review by commit will be easier.</Description>
    <Title_Description>Remove skip first run flag and simplify flags Review by commit will be easier.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11020</IssueLabelID>
    <Title>dotnet build error</Title>
    <Description>## Steps to reproduce

### 1.
 output:

.NET Core SDK（反映任何 global.json）:
 Version:   2.2.105
 Commit:    7cecb35b92

运行时环境:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.2.105\

Host (useful for support):
  Version: 2.2.3
  Commit:  6b8ad509b6

.NET Core SDKs installed:
  2.2.105 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Description>
    <Title_Description>dotnet build error ## Steps to reproduce

### 1.
 output:

.NET Core SDK（反映任何 global.json）:
 Version:   2.2.105
 Commit:    7cecb35b92

运行时环境:
 OS Name:     Windows
 OS Version:  10.0.17763
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.2.105\

Host (useful for support):
  Version: 2.2.3
  Commit:  6b8ad509b6

.NET Core SDKs installed:
  2.2.105 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.2.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Title_Description>
    <Label>
    </Label>
    <Assignee>gafter</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11019</IssueLabelID>
    <Title>Do not print usage when Resolve cache miss</Title>
    <Description>https://github.com/dotnet/sdk/pull/3038#issuecomment-476381711</Description>
    <Title_Description>Do not print usage when Resolve cache miss https://github.com/dotnet/sdk/pull/3038#issuecomment-476381711</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11018</IssueLabelID>
    <Title>Fix problem where data for some verbs is lost</Title>
    <Description>
    </Description>
    <Title_Description>Fix problem where data for some verbs is lost </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11006</IssueLabelID>
    <Title>DotnetCliTool references don't work if BaseIntermediateOutputPath is changed in a Directory.Build.props file.</Title>
    <Description>## Steps to reproduce
I have a hard time coming up with a public repro since I don't know of public DotnetCliTools; I'm hitting this with an internal one.

I tried debugging dotnet.exe but build.cmd doesn't make a dotnet.pdb and I can't build in VS nor Rider in order to be able to run under a debugger (nor does </Description>
    <Title_Description>DotnetCliTool references don't work if BaseIntermediateOutputPath is changed in a Directory.Build.props file. ## Steps to reproduce
I have a hard time coming up with a public repro since I don't know of public DotnetCliTools; I'm hitting this with an internal one.

I tried debugging dotnet.exe but build.cmd doesn't make a dotnet.pdb and I can't build in VS nor Rider in order to be able to run under a debugger (nor does </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11003</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/03/2019 12:01:14 AM +00:00</CreatedAt>
    <ClosedAt>22/03/2019 5:07:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11002</IssueLabelID>
    <Title>Move to System.Text.Json for local global tools</Title>
    <Description>
    </Description>
    <Title_Description>Move to System.Text.Json for local global tools 
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>11000</IssueLabelID>
    <Title>Add solution folder argument to dotnet-sln add</Title>
    <Description>I've begun work on the first half of what I think "dotnet-sln add" should be allowed to do:

- Target arbitrary solution folders within an SLN
- Add arbitrary files as solution-level files and not just projects

If possible I'd like some feedback before proceeding to add the ability for "dotnet-sln add" to add arbitrary files. So I suppose this is kind of a WIP which isn't exactly preferable... Sorry about that.

Is there a test project for "dotnet sln" ?

Related issues:
- Issue https://github.com/dotnet/cli/issues/8678 which discuses a "add" feature that allows arbitrary files to be added; where I outline my intended commandline layout
- PR https://github.com/dotnet/cli/pull/10873 which touches on a similar subject but also adds a unit test project. Naming between that PR and this one should be coordinated.</Description>
    <Title_Description>Add solution folder argument to dotnet-sln add I've begun work on the first half of what I think "dotnet-sln add" should be allowed to do:

- Target arbitrary solution folders within an SLN
- Add arbitrary files as solution-level files and not just projects

If possible I'd like some feedback before proceeding to add the ability for "dotnet-sln add" to add arbitrary files. So I suppose this is kind of a WIP which isn't exactly preferable... Sorry about that.

Is there a test project for "dotnet sln" ?

Related issues:
- Issue https://github.com/dotnet/cli/issues/8678 which discuses a "add" feature that allows arbitrary files to be added; where I outline my intended commandline layout
- PR https://github.com/dotnet/cli/pull/10873 which touches on a similar subject but also adds a unit test project. Naming between that PR and this one should be coordinated.</Title_Description>
    <Label>community</Label>
    <CreatedAt>20/03/2019 10:53:37 PM +00:00</CreatedAt>
    <ClosedAt>10/04/2019 4:53:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10995</IssueLabelID>
    <Title>Build fails with 'MSB3552: Resource file "**/*.resx" cannot be found.' on Mac when folders with windows like paths exist in project folder</Title>
    <Description>## Steps to reproduce
- Create a new console application
- Create a folder named 





</Description>
    <Title_Description>Build fails with 'MSB3552: Resource file "**/*.resx" cannot be found.' on Mac when folders with windows like paths exist in project folder ## Steps to reproduce
- Create a new console application
- Create a folder named 





</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10994</IssueLabelID>
    <Title>dotnet list package interactive</Title>
    <Description>add --interactive flag to dotnet list

continue of https://github.com/dotnet/cli/pull/10721</Description>
    <Title_Description>dotnet list package interactive add --interactive flag to dotnet list

continue of https://github.com/dotnet/cli/pull/10721</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10989</IssueLabelID>
    <Title>Error NETSDK1005 temporarily fires when switching TF</Title>
    <Description>## Steps to reproduce

1. Create a netcoreapp3.0 console application
1. Ensure the error list is visible 
1. Open the project file for editing 
1. Change the  value to net472
1. Save All

## Expected  behavior
No errors

## Actual behavior
Briefly a NETSDK1005 error will appear in the error list. It seems to disappear as soon as auto-restore kicks in. 

This error is causing the Roslyn team issues as it breaks our integration tests. They are keyed to fail on any error and even this transient one is considered. There are work arounds but they end up causing us to more globally suppress NETSDK1005 which we'd like to avoid. 






</Description>
    <Title_Description>Error NETSDK1005 temporarily fires when switching TF ## Steps to reproduce

1. Create a netcoreapp3.0 console application
1. Ensure the error list is visible 
1. Open the project file for editing 
1. Change the  value to net472
1. Save All

## Expected  behavior
No errors

## Actual behavior
Briefly a NETSDK1005 error will appear in the error list. It seems to disappear as soon as auto-restore kicks in. 

This error is causing the Roslyn team issues as it breaks our integration tests. They are keyed to fail on any error and even this transient one is considered. There are work arounds but they end up causing us to more globally suppress NETSDK1005 which we'd like to avoid. 






</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10985</IssueLabelID>
    <Title>'Exec format error' when running global tool on ARM32</Title>
    <Description>Installing a global tool on ARM32 doesn't run.  Fails with 

# Expected Results

The tool should run

# Observations
1. I verified this scenario works for 2.1 but not 3.0.
1. The app will run if you path down to the .store/.../tools folder and run dotnet/tool.dll
1. This was discovered with testing installing PowerShell as a global tool - https://github.com/dotnet/dotnet-docker/pull/960#discussion_r266060183.  PowerShell in this case is built against 2.1 but has a custom roll forward policy defined - https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/roll-forward-on-no-candidate-fx.md.  I don't know if that is a factor or not.  It works just find in amd64.
</Description>
    <Title_Description>'Exec format error' when running global tool on ARM32 Installing a global tool on ARM32 doesn't run.  Fails with 

# Expected Results

The tool should run

# Observations
1. I verified this scenario works for 2.1 but not 3.0.
1. The app will run if you path down to the .store/.../tools folder and run dotnet/tool.dll
1. This was discovered with testing installing PowerShell as a global tool - https://github.com/dotnet/dotnet-docker/pull/960#discussion_r266060183.  PowerShell in this case is built against 2.1 but has a custom roll forward policy defined - https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/roll-forward-on-no-candidate-fx.md.  I don't know if that is a factor or not.  It works just find in amd64.
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10984</IssueLabelID>
    <Title>Fix typo</Title>
    <Description>- Rename from </Description>
    <Title_Description>Fix typo - Rename from </Title_Description>
    <Label>community</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>15/03/2019 8:46:37 PM +00:00</CreatedAt>
    <ClosedAt>26/03/2019 5:55:20 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10983</IssueLabelID>
    <Title>Should we unify global tools invocation and local tools invocation</Title>
    <Description>local tools require prefix  ?</Description>
    <Title_Description>Should we unify global tools invocation and local tools invocation local tools require prefix  ?</Title_Description>
    <Label>
    </Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10980</IssueLabelID>
    <Title>Invoke localtool with dotnet</Title>
    <Description>enable invoke tool with  as non ambiguous version</Description>
    <Title_Description>Invoke localtool with dotnet enable invoke tool with  as non ambiguous version</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10979</IssueLabelID>
    <Title>3.0 SDK is copying runtimes folders and assets to desktop TF</Title>
    <Description>Found during https://github.com/dotnet/roslyn/pull/34093

Repro Steps
- Clone https://github.com/jaredpar/roslyn
- Use branch fix-sdk
- Run </Description>
    <Title_Description>3.0 SDK is copying runtimes folders and assets to desktop TF Found during https://github.com/dotnet/roslyn/pull/34093

Repro Steps
- Clone https://github.com/jaredpar/roslyn
- Use branch fix-sdk
- Run </Title_Description>
    <Label>Bug</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10974</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/03/2019 12:01:10 PM +00:00</CreatedAt>
    <ClosedAt>4/04/2019 5:13:05 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10973</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/03/2019 12:01:08 PM +00:00</CreatedAt>
    <ClosedAt>13/03/2019 2:32:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10969</IssueLabelID>
    <Title>v2.1.505+dependencies tag is wrong</Title>
    <Description>If you look at the [v2.1.505+dependencies](https://github.com/dotnet/cli/commits/v2.1.505%2Bdependencies) tag the tagged commit is [ad523ce44af2876afb3eddbf5a71fdf294ac2bd7](https://github.com/dotnet/cli/commit/ad523ce44af2876afb3eddbf5a71fdf294ac2bd7).

But if you look at the [Release/2.1.5xx branch](https://github.com/dotnet/cli/commits/release/2.1.5xx) commit [35fbd6d033612a55ab4a1fcdfbd3ab4c36e8b49e](https://github.com/dotnet/cli/commit/35fbd6d033612a55ab4a1fcdfbd3ab4c36e8b49e) looks like it's the one that should be tagged as v2.1.505+dependencies.






</Description>
    <Title_Description>v2.1.505+dependencies tag is wrong If you look at the [v2.1.505+dependencies](https://github.com/dotnet/cli/commits/v2.1.505%2Bdependencies) tag the tagged commit is [ad523ce44af2876afb3eddbf5a71fdf294ac2bd7](https://github.com/dotnet/cli/commit/ad523ce44af2876afb3eddbf5a71fdf294ac2bd7).

But if you look at the [Release/2.1.5xx branch](https://github.com/dotnet/cli/commits/release/2.1.5xx) commit [35fbd6d033612a55ab4a1fcdfbd3ab4c36e8b49e](https://github.com/dotnet/cli/commit/35fbd6d033612a55ab4a1fcdfbd3ab4c36e8b49e) looks like it's the one that should be tagged as v2.1.505+dependencies.






</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10955</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/03/2019 12:00:49 PM +00:00</CreatedAt>
    <ClosedAt>13/03/2019 5:08:48 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10954</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/03/2019 12:00:46 PM +00:00</CreatedAt>
    <ClosedAt>13/03/2019 4:33:18 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10949</IssueLabelID>
    <Title>Limit job object usage to Windows 8/2012 or later.</Title>
    <Description>The ASP.NET Core team has a test that runs on Windows 7/2008 which spawns IIS
Express.  The test is running under  and thus the child
process gets assigned to dotnet's job object for process reaping.  However IIS
Express maintains its own job object for the process it spawns and the dotnet
job object assignment interferes with IIS Express' use of its job objects.

This occurs on Windows 7 and Windows Server 2008 because those versions of
Windows do not support nested jobs.

The fix taken here is to limit the use of job objects for process reaping to
Windows 8 / Windows Server 2012 or later.  This is done with an explicit OS
version check because there is no change to the Job Objects API to enable
support for nested jobs and thus no other way to determine if the feature is
available to us.

Fixes #10947.</Description>
    <Title_Description>Limit job object usage to Windows 8/2012 or later. The ASP.NET Core team has a test that runs on Windows 7/2008 which spawns IIS
Express.  The test is running under  and thus the child
process gets assigned to dotnet's job object for process reaping.  However IIS
Express maintains its own job object for the process it spawns and the dotnet
job object assignment interferes with IIS Express' use of its job objects.

This occurs on Windows 7 and Windows Server 2008 because those versions of
Windows do not support nested jobs.

The fix taken here is to limit the use of job objects for process reaping to
Windows 8 / Windows Server 2012 or later.  This is done with an explicit OS
version check because there is no change to the Job Objects API to enable
support for nested jobs and thus no other way to determine if the feature is
available to us.

Fixes #10947.</Title_Description>
    <Label>blocking-partner</Label>
    <CreatedAt>8/03/2019 12:42:49 AM +00:00</CreatedAt>
    <ClosedAt>8/03/2019 1:40:02 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10948</IssueLabelID>
    <Title>SDK should use Microsoft.Net.Compilers.Toolset package</Title>
    <Description>The Roslyn team is deprecating the Microsoft.NETCore.Compilers package which contained only CoreCLR binaries and moving to Microsoft.Net.Compilers.Toolset which contains desktop and CoreCLR binaries. The SDK should switch to using this package when taking new Roslyn drops. 


@nguerrera is aware of this change. </Description>
    <Title_Description>SDK should use Microsoft.Net.Compilers.Toolset package The Roslyn team is deprecating the Microsoft.NETCore.Compilers package which contained only CoreCLR binaries and moving to Microsoft.Net.Compilers.Toolset which contains desktop and CoreCLR binaries. The SDK should switch to using this package when taking new Roslyn drops. 


@nguerrera is aware of this change. </Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10947</IssueLabelID>
    <Title>Adding child processes to job objects prevents them from creating job objects of their own</Title>
    <Description>We are hitting an issue while trying to test AspNetCore Module for IIS Express on Windows 7/2008R2 after taking and SDK with https://github.com/dotnet/cli/pull/10720 change.

In the test we start IIS Express process that spawns new indstance of dotnet.exe tries to attach it to a job object and fails because the entire process tree is already attached to the job object that CLI has created.

I see couple possible solutions:
1. Disable process tracking using job objects on Windows 7
2. Set  flag set on the job object.

cc @peterhuene @danmosemsft 



</Description>
    <Title_Description>Adding child processes to job objects prevents them from creating job objects of their own We are hitting an issue while trying to test AspNetCore Module for IIS Express on Windows 7/2008R2 after taking and SDK with https://github.com/dotnet/cli/pull/10720 change.

In the test we start IIS Express process that spawns new indstance of dotnet.exe tries to attach it to a job object and fails because the entire process tree is already attached to the job object that CLI has created.

I see couple possible solutions:
1. Disable process tracking using job objects on Windows 7
2. Set  flag set on the job object.

cc @peterhuene @danmosemsft 



</Title_Description>
    <Label>Bug</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10944</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>7/03/2019 12:01:49 PM +00:00</CreatedAt>
    <ClosedAt>7/03/2019 6:19:24 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10943</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>7/03/2019 12:01:46 PM +00:00</CreatedAt>
    <ClosedAt>13/03/2019 2:30:54 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10941</IssueLabelID>
    <Title>dotnet Release Metadata 3.0.0-preview3-27503-5 missing hash</Title>
    <Description>The latest 3.0 release listed in the release metadata json file located at the link below 3.0.0-preview3-27503-5 (aka 3.0.0-preview3) is missing the hash value on every file listed in the runtime sdk and aspnetcore-runtime file collections.

https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/3.0/releases.json

The hash property should contain the SHA256 hash for the file provided at the URL. Example of the issue below.


@leecow </Description>
    <Title_Description>dotnet Release Metadata 3.0.0-preview3-27503-5 missing hash The latest 3.0 release listed in the release metadata json file located at the link below 3.0.0-preview3-27503-5 (aka 3.0.0-preview3) is missing the hash value on every file listed in the runtime sdk and aspnetcore-runtime file collections.

https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/3.0/releases.json

The hash property should contain the SHA256 hash for the file provided at the URL. Example of the issue below.


@leecow </Title_Description>
    <Label>
    </Label>
    <Assignee>vivmishra</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10938</IssueLabelID>
    <Title>.NET website doesn't list .NET Core install scripts as download options</Title>
    <Description>There's two install scripts listed under  and as someone that never browsed this repository often I never knew they existed until someone showed me. I was surprised that these scripts which are incredibly useful are never mentioned on the website. It'd be nice if they were listed in some form or fashion so other developers can easily find them if they always use the main downloads website.</Description>
    <Title_Description>.NET website doesn't list .NET Core install scripts as download options There's two install scripts listed under  and as someone that never browsed this repository often I never knew they existed until someone showed me. I was surprised that these scripts which are incredibly useful are never mentioned on the website. It'd be nice if they were listed in some form or fashion so other developers can easily find them if they always use the main downloads website.</Title_Description>
    <Label>
    </Label>
    <Assignee>leecow</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10933</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>6/03/2019 12:01:06 AM +00:00</CreatedAt>
    <ClosedAt>7/03/2019 12:39:17 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10925</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>5/03/2019 12:01:15 PM +00:00</CreatedAt>
    <ClosedAt>7/03/2019 12:39:00 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10924</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>5/03/2019 12:01:11 PM +00:00</CreatedAt>
    <ClosedAt>7/03/2019 12:38:44 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10923</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>5/03/2019 12:01:08 PM +00:00</CreatedAt>
    <ClosedAt>5/03/2019 4:35:35 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10922</IssueLabelID>
    <Title>Prevent stage0 bundled versions from interfering with the build.</Title>
    <Description>A change to enable the parameterization of the latest known patch numbers for
Microsoft.NETCore.App reused the same property names as those in the generated
bundled versions props file.

When building locally the stage0 dotnet install was setting the properties
first resulting in older versions as the fallbacks then what is currently
being used in the repo.

However when building from an orchestrated build where the properties were
being set globally those properties get respected and the values are
the expected ones.

This commit fixes this by renaming the properties to those that aren't used in
the bundled versions props file.  The names chosen match those we're using for
the 2.2 builds for consistency.

</Description>
    <Title_Description>Prevent stage0 bundled versions from interfering with the build. A change to enable the parameterization of the latest known patch numbers for
Microsoft.NETCore.App reused the same property names as those in the generated
bundled versions props file.

When building locally the stage0 dotnet install was setting the properties
first resulting in older versions as the fallbacks then what is currently
being used in the repo.

However when building from an orchestrated build where the properties were
being set globally those properties get respected and the values are
the expected ones.

This commit fixes this by renaming the properties to those that aren't used in
the bundled versions props file.  The names chosen match those we're using for
the 2.2 builds for consistency.

</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>5/03/2019 3:06:34 AM +00:00</CreatedAt>
    <ClosedAt>5/03/2019 4:29:18 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10919</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>5/03/2019 12:01:16 AM +00:00</CreatedAt>
    <ClosedAt>7/03/2019 12:38:27 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10914</IssueLabelID>
    <Title>Change message when the executable cannot be found to File not found {0} for issue #10911</Title>
    <Description>- Issue #10911 
- Change message when the executable cannot be found from "No executable found matching command" to "File not found {0}"

</Description>
    <Title_Description>Change message when the executable cannot be found to File not found {0} for issue #10911 - Issue #10911 
- Change message when the executable cannot be found from "No executable found matching command" to "File not found {0}"

</Title_Description>
    <Label>community</Label>
    <CreatedAt>4/03/2019 6:30:41 PM +00:00</CreatedAt>
    <ClosedAt>1/04/2019 9:36:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10913</IssueLabelID>
    <Title>Clean up outdated content</Title>
    <Description>Related to dotnet/core-setup#5156.

Please also check if other pages are still valid.

skip ci please</Description>
    <Title_Description>Clean up outdated content Related to dotnet/core-setup#5156.

Please also check if other pages are still valid.

skip ci please</Title_Description>
    <Label>community</Label>
    <CreatedAt>2/03/2019 4:35:30 PM +00:00</CreatedAt>
    <ClosedAt>4/03/2019 4:21:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10911</IssueLabelID>
    <Title>Incredibly misleading message when the executable cannot be found: "No executable found matching command"</Title>
    <Description>## Steps to reproduce
Running this command:
dotnet not-existing.dll

## Expected  behavior
The message should say clearly not-existing.dll cannot be found.

## Actual behavior
The actual message is "No executable found matching command "dotnet-not-existing.dll"" which is misleading. When I encountered it the first time I thought it was an environment issue or a bug caused the system searching for dotnet-not-existing.dll.

</Description>
    <Title_Description>Incredibly misleading message when the executable cannot be found: "No executable found matching command" ## Steps to reproduce
Running this command:
dotnet not-existing.dll

## Expected  behavior
The message should say clearly not-existing.dll cannot be found.

## Actual behavior
The actual message is "No executable found matching command "dotnet-not-existing.dll"" which is misleading. When I encountered it the first time I thought it was an environment issue or a bug caused the system searching for dotnet-not-existing.dll.

</Title_Description>
    <Label>good first issue</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10909</IssueLabelID>
    <Title>Make sure that an empty argument is preserved.  Fix for #8892.</Title>
    <Description>
These changes fix issue #8892.  The net effect is that when an empty argument is detected a pair of double quotes will be emitted.
</Description>
    <Title_Description>Make sure that an empty argument is preserved.  Fix for #8892. 
These changes fix issue #8892.  The net effect is that when an empty argument is detected a pair of double quotes will be emitted.
</Title_Description>
    <Label>community</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>1/03/2019 10:30:35 PM +00:00</CreatedAt>
    <ClosedAt>4/04/2019 5:23:23 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10908</IssueLabelID>
    <Title>Remove old patch versions from bundledversions.props</Title>
    <Description>## Steps to reproduce

1. Install a 2.2 SDK.
2. Open  properties to not be present since they are no longer used by the SDK.

## Actual behavior

The values are still present (and stale).






</Description>
    <Title_Description>Remove old patch versions from bundledversions.props ## Steps to reproduce

1. Install a 2.2 SDK.
2. Open  properties to not be present since they are no longer used by the SDK.

## Actual behavior

The values are still present (and stale).






</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10903</IssueLabelID>
    <Title>fix UnauthorizedAccessException when opening readonly sln file for read</Title>
    <Description>This fixes #10166 </Description>
    <Title_Description>fix UnauthorizedAccessException when opening readonly sln file for read This fixes #10166 </Title_Description>
    <Label>community</Label>
    <CreatedAt>1/03/2019 8:43:38 AM +00:00</CreatedAt>
    <ClosedAt>7/03/2019 12:36:51 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10901</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10900</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>1/03/2019 12:01:18 AM +00:00</CreatedAt>
    <ClosedAt>2/03/2019 12:05:18 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10899</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>1/03/2019 12:01:16 AM +00:00</CreatedAt>
    <ClosedAt>5/03/2019 12:49:39 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10898</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>1/03/2019 12:01:12 AM +00:00</CreatedAt>
    <ClosedAt>2/03/2019 12:02:38 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10894</IssueLabelID>
    <Title>Nicer message for `dotnet tool install` failure</Title>
    <Description>Fix https://github.com/dotnet/cli/issues/10863

-v vs -d
First -v is not correct. To have verbose output we need </Description>
    <Title_Description>Nicer message for </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10892</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/02/2019 5:21:50 PM +00:00</CreatedAt>
    <ClosedAt>12/03/2019 11:09:41 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10888</IssueLabelID>
    <Title>Parameterize latest patch versions.</Title>
    <Description>This commit parameterizes the latest patch versions in the build.
</Description>
    <Title_Description>Parameterize latest patch versions. This commit parameterizes the latest patch versions in the build.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/02/2019 1:45:16 AM +00:00</CreatedAt>
    <ClosedAt>27/02/2019 2:28:15 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10887</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/02/2019 12:01:19 AM +00:00</CreatedAt>
    <ClosedAt>28/02/2019 11:27:57 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10886</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/02/2019 12:01:17 AM +00:00</CreatedAt>
    <ClosedAt>28/02/2019 11:27:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10885</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/02/2019 12:01:14 AM +00:00</CreatedAt>
    <ClosedAt>28/02/2019 11:26:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10884</IssueLabelID>
    <Title>Skip the self-contained roll-forward version tests.</Title>
    <Description>See #10879. Disabling these tests until we figure out a way to make them work
for servicing builds that will be bumping the versions without the unreleased
upcoming shared frameworks being available.


</Description>
    <Title_Description>Skip the self-contained roll-forward version tests. See #10879. Disabling these tests until we figure out a way to make them work
for servicing builds that will be bumping the versions without the unreleased
upcoming shared frameworks being available.


</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>26/02/2019 11:09:56 PM +00:00</CreatedAt>
    <ClosedAt>26/02/2019 11:43:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10882</IssueLabelID>
    <Title>Uninstalling Preview 2 Does Not Clean Up After Itself</Title>
    <Description>## Steps to reproduce
Running Windows 10 and uninstalled Preview 2 (2.1.600-preview-009497) via Add/Remove Programs.  Rebooted and now when I run dotnet --info I get:

 output:

Found dotnet SDK but did not find dotnet.dll at [C:\Program Files\dotnet\sdk\2.1.600-preview-009497\dotnet.dll]



</Description>
    <Title_Description>Uninstalling Preview 2 Does Not Clean Up After Itself ## Steps to reproduce
Running Windows 10 and uninstalled Preview 2 (2.1.600-preview-009497) via Add/Remove Programs.  Rebooted and now when I run dotnet --info I get:

 output:

Found dotnet SDK but did not find dotnet.dll at [C:\Program Files\dotnet\sdk\2.1.600-preview-009497\dotnet.dll]



</Title_Description>
    <Label>Area: Setup</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10873</IssueLabelID>
    <Title>add --no-solution-folders flag to dotnet sln add</Title>
    <Description>Closes #10427

Adds the  command. </Description>
    <Title_Description>add --no-solution-folders flag to dotnet sln add Closes #10427

Adds the  command. </Title_Description>
    <Label>community</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10870</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>23/02/2019 12:01:04 AM +00:00</CreatedAt>
    <ClosedAt>25/02/2019 4:47:03 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10869</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>23/02/2019 12:01:01 AM +00:00</CreatedAt>
    <ClosedAt>25/02/2019 4:45:45 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10868</IssueLabelID>
    <Title>Replace MIT License with .NET Library EULA in Windows installer</Title>
    <Description>## Steps to reproduce

1. Install a 3.0.100 SDK preview for Windows using the installer.

## Expected  behavior

The link for "MIT License" should be replaced with ".NET Library EULA".

## Actual behavior

The link for the "MIT License" remains.






</Description>
    <Title_Description>Replace MIT License with .NET Library EULA in Windows installer ## Steps to reproduce

1. Install a 3.0.100 SDK preview for Windows using the installer.

## Expected  behavior

The link for "MIT License" should be replaced with ".NET Library EULA".

## Actual behavior

The link for the "MIT License" remains.






</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10867</IssueLabelID>
    <Title>Add properties to control shared framework versions for servicing releases.</Title>
    <Description>This PR adds properties to control the shared framework versions for the 2.1 and 1.x servicing releases.

This will be used when building the servicing releases to bump the versions to what is forthcoming.</Description>
    <Title_Description>Add properties to control shared framework versions for servicing releases. This PR adds properties to control the shared framework versions for the 2.1 and 1.x servicing releases.

This will be used when building the servicing releases to bump the versions to what is forthcoming.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>22/02/2019 7:48:36 PM +00:00</CreatedAt>
    <ClosedAt>26/02/2019 6:09:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10863</IssueLabelID>
    <Title>Nicer message for `dotnet tool install` failure</Title>
    <Description>## Steps to reproduce

In a directory that does not have a manifest file enter







</Description>
    <Title_Description>Nicer message for 





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10860</IssueLabelID>
    <Title>Add `dotnet tool update --all` option</Title>
    <Description>## Request

When multiple tools are installed either globally or locally it becomes hard to keep track of which tools are outdated and which are not and updating all outdated tools is time-consuming and boring copy-paste work since the package id of each installed package needs to be provided to the </Description>
    <Title_Description>Add </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10842</IssueLabelID>
    <Title>Fail with graceful error message when trying to build WindowsDesktop project on non-Windows</Title>
    <Description>The Microsoft.NET.Sdk.WindowsDesktop SDK is only available on Windows.  This means that you will get an error that the SDK can't be found if you try to build a project that uses WindowsDesktop on Mac or Linux.  We should have a better error here for example by having a "stub" version of the WindowsDesktop SDK on Mac and Linux that generates an error indicating that the SDK isn't supported on the current operating system.

Related: https://github.com/dotnet/wpf/issues/57#issuecomment-464415785</Description>
    <Title_Description>Fail with graceful error message when trying to build WindowsDesktop project on non-Windows The Microsoft.NET.Sdk.WindowsDesktop SDK is only available on Windows.  This means that you will get an error that the SDK can't be found if you try to build a project that uses WindowsDesktop on Mac or Linux.  We should have a better error here for example by having a "stub" version of the WindowsDesktop SDK on Mac and Linux that generates an error indicating that the SDK isn't supported on the current operating system.

Related: https://github.com/dotnet/wpf/issues/57#issuecomment-464415785</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10839</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/02/2019 9:23:02 PM +00:00</CreatedAt>
    <ClosedAt>22/02/2019 11:52:11 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10838</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/02/2019 9:22:59 PM +00:00</CreatedAt>
    <ClosedAt>22/02/2019 11:52:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10837</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/02/2019 9:22:56 PM +00:00</CreatedAt>
    <ClosedAt>22/02/2019 11:52:23 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10836</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/02/2019 9:22:53 PM +00:00</CreatedAt>
    <ClosedAt>21/02/2019 4:55:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10833</IssueLabelID>
    <Title>Global tool update version option</Title>
    <Description>fix #10734

continue of https://github.com/dotnet/cli/pull/10791</Description>
    <Title_Description>Global tool update version option fix #10734

continue of https://github.com/dotnet/cli/pull/10791</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10831</IssueLabelID>
    <Title>Sign resolver satellites in layout</Title>
    <Description>We have separate locations for what goes into the nupkg to myget vs. what goes into the VS nupkg.

We are signing both independently but only updated one of them to include the satellites.
</Description>
    <Title_Description>Sign resolver satellites in layout We have separate locations for what goes into the nupkg to myget vs. what goes into the VS nupkg.

We are signing both independently but only updated one of them to include the satellites.
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>19/02/2019 6:07:45 PM +00:00</CreatedAt>
    <ClosedAt>19/02/2019 9:54:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10829</IssueLabelID>
    <Title>Added --nologo option</Title>
    <Description>Close #10825

I added the  commands. @peterhuene Did I miss other commands or is everything OK?</Description>
    <Title_Description>Added --nologo option Close #10825

I added the  commands. @peterhuene Did I miss other commands or is everything OK?</Title_Description>
    <Label>community</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10828</IssueLabelID>
    <Title>Update command description</Title>
    <Description>I've updated  commands description.

Fixes #10744
</Description>
    <Title_Description>Update command description I've updated  commands description.

Fixes #10744
</Title_Description>
    <Label>community</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10825</IssueLabelID>
    <Title>Implement --nologo for MSBuild forwarding commands.</Title>
    <Description>## Steps to reproduce

1. 





</Description>
    <Title_Description>Implement --nologo for MSBuild forwarding commands. ## Steps to reproduce

1. 





</Title_Description>
    <Label>good first issue</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10822</IssueLabelID>
    <Title>Adding resolver satellite assemblies to be signed.</Title>
    <Description>
    </Description>
    <Title_Description>Adding resolver satellite assemblies to be signed. </Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/02/2019 2:57:42 AM +00:00</CreatedAt>
    <ClosedAt>19/02/2019 4:41:01 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10819</IssueLabelID>
    <Title>dotnet sln remove flattens the solution items</Title>
    <Description>## Steps to reproduce
- Set up an sln with nested solution items.
- Remove a project

## Expected  behavior
The nested solution items should be preserved.

## Actual behavior
The nested solution items get flattened.
For a repro see the following repo: https://github.com/cveld/dotnet-cli-sln-remove-issue

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.503
 Commit:    4c506e0f35

Runtime Environment:
 OS Name:     Windows
 OS Version:  6.3.9600
 OS Platform: Windows
 RID:         win81-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.503\

Host (useful for support):
  Version: 2.1.7
  Commit:  cca5d72d48





</Description>
    <Title_Description>dotnet sln remove flattens the solution items ## Steps to reproduce
- Set up an sln with nested solution items.
- Remove a project

## Expected  behavior
The nested solution items should be preserved.

## Actual behavior
The nested solution items get flattened.
For a repro see the following repo: https://github.com/cveld/dotnet-cli-sln-remove-issue

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.503
 Commit:    4c506e0f35

Runtime Environment:
 OS Name:     Windows
 OS Version:  6.3.9600
 OS Platform: Windows
 RID:         win81-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.503\

Host (useful for support):
  Version: 2.1.7
  Commit:  cca5d72d48





</Title_Description>
    <Label>good first issue</Label>
    <CreatedAt>17/02/2019 9:43:00 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10818</IssueLabelID>
    <Title>Update sdk version to 3.0.100-preview3.19116.2</Title>
    <Description>part of https://github.com/dotnet/cli/issues/10628</Description>
    <Title_Description>Update sdk version to 3.0.100-preview3.19116.2 part of https://github.com/dotnet/cli/issues/10628</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10813</IssueLabelID>
    <Title>Could not load file or assembly 'System.Runtime Version=4.2.0.0 on empty project</Title>
    <Description>Hi

I read other post about this error but I m not sure that the other have this issue only when the project is deployed to azure.

Here is my cs projet:
  

My thinking is maybe .net core 2.2.1 is not yet available on Azure. What do you think? How to fix this issue?</Description>
    <Title_Description>Could not load file or assembly 'System.Runtime, Version=4.2.0.0 on empty project Hi

I read other post about this error but I m not sure that the other have this issue only when the project is deployed to azure.

Here is my cs projet:
  

My thinking is maybe .net core 2.2.1 is not yet available on Azure. What do you think? How to fix this issue?</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10811</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/02/2019 12:01:32 AM +00:00</CreatedAt>
    <ClosedAt>19/02/2019 7:17:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10810</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/02/2019 12:01:26 AM +00:00</CreatedAt>
    <ClosedAt>16/02/2019 5:02:58 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10809</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/02/2019 12:01:22 AM +00:00</CreatedAt>
    <ClosedAt>19/02/2019 7:17:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10803</IssueLabelID>
    <Title>Global tool looking in incorrect path</Title>
    <Description>A bug was opened in Roslyn against the dotnet-format (https://github.com/dotnet/roslyn/issues/33414) where the cli is using the wrong path when running the global tool.

## Steps to reproduce
Install the 3.0.0 release version of the dotnet-format global tool.
Run 




</Description>
    <Title_Description>Global tool looking in incorrect path A bug was opened in Roslyn against the dotnet-format (https://github.com/dotnet/roslyn/issues/33414) where the cli is using the wrong path when running the global tool.

## Steps to reproduce
Install the 3.0.0 release version of the dotnet-format global tool.
Run 




</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10802</IssueLabelID>
    <Title>quoted absolute paths being treated as relative paths when dotnet commands are run from unix bash script</Title>
    <Description>## BackGround
I am trying to build and runtests for dotnet\machinelearning repo using  .net core 3.0 sdk preview 2 on a ubuntu machine.

This  https://github.com/dotnet/machinelearning/blob/master/init-tools.sh script is used to initialize the tools for the machine learning repo. 
This script ends up calling https://github.com/dotnet/machinelearning/blob/master/init-tools.sh#L164
with parameters with absolute paths to csproj  tools and packages directory.

This script ends up calling https://github.com/dotnet/buildtools/blob/master/src/Microsoft.DotNet.Build.Tasks/PackageFiles/init-tools.sh#L82

which packages path as "\machinelearning\packages\" (an absolute path) which is set here https://github.com/dotnet/buildtools/blob/master/src/Microsoft.DotNet.Build.Tasks/PackageFiles/init-tools.sh#L38

The expected behoviour is packages being restored in \machinelearning\packages directory but they get restored in \machinelearning\machinelearning\packages path.


## Repro with Independent Project

This behavior can be easily repro with a standalone project.

-  Create a new csproj project
-  Create a new script (restore.sh) with content as follows
.


cc @eerhardt @safern @danmosemsft @livarcocc 
</Description>
    <Title_Description>quoted absolute paths being treated as relative paths when dotnet commands are run from unix bash script ## BackGround
I am trying to build and runtests for dotnet\machinelearning repo using  .net core 3.0 sdk preview 2 on a ubuntu machine.

This  https://github.com/dotnet/machinelearning/blob/master/init-tools.sh script is used to initialize the tools for the machine learning repo. 
This script ends up calling https://github.com/dotnet/machinelearning/blob/master/init-tools.sh#L164
with parameters with absolute paths to csproj  tools and packages directory.

This script ends up calling https://github.com/dotnet/buildtools/blob/master/src/Microsoft.DotNet.Build.Tasks/PackageFiles/init-tools.sh#L82

which packages path as "\machinelearning\packages\" (an absolute path) which is set here https://github.com/dotnet/buildtools/blob/master/src/Microsoft.DotNet.Build.Tasks/PackageFiles/init-tools.sh#L38

The expected behoviour is packages being restored in \machinelearning\packages directory but they get restored in \machinelearning\machinelearning\packages path.


## Repro with Independent Project

This behavior can be easily repro with a standalone project.

-  Create a new csproj project
-  Create a new script (restore.sh) with content as follows
.


cc @eerhardt @safern @danmosemsft @livarcocc 
</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10801</IssueLabelID>
    <Title>LOC CHECKIN | dotnet/cli release/2.2.2xx | 20190215</Title>
    <Description>- If this PR should not run tests please add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Please add description for changes you are making.
- If there is an issue related to this PR please add the reference.
</Description>
    <Title_Description>LOC CHECKIN | dotnet/cli release/2.2.2xx | 20190215 - If this PR should not run tests please add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Please add description for changes you are making.
- If there is an issue related to this PR please add the reference.
</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10797</IssueLabelID>
    <Title>[master] Update dependencies from dotnet/arcade</Title>
    <Description>This pull request updates the following dependencies

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19114.4

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19119.2

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19126.6

</Description>
    <Title_Description>[master] Update dependencies from dotnet/arcade This pull request updates the following dependencies

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19114.4

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19119.2

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2

Updates from https://github.com/dotnet/arcade

- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19126.6

</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10796</IssueLabelID>
    <Title>Merge release/3.0.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/3.0.1xx to master 
This is an automatically generated pull request from release/3.0.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10795</IssueLabelID>
    <Title>Merge release/2.2.2xx to release/3.0.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to release/3.0.1xx 
This is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>15/02/2019 12:01:28 PM +00:00</CreatedAt>
    <ClosedAt>5/04/2019 6:03:33 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10794</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/02/2019 12:01:24 PM +00:00</CreatedAt>
    <ClosedAt>15/02/2019 5:56:55 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10791</IssueLabelID>
    <Title>Add --version to dotnet tool update -g</Title>
    <Description>fix https://github.com/dotnet/cli/issues/10734</Description>
    <Title_Description>Add --version to dotnet tool update -g fix https://github.com/dotnet/cli/issues/10734</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10789</IssueLabelID>
    <Title>Closes dotnet list reference help text and output #10428</Title>
    <Description>This should close #10428 

1. </Description>
    <Title_Description>Closes dotnet list reference help text and output #10428 This should close #10428 

1. </Title_Description>
    <Label>community</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10784</IssueLabelID>
    <Title>Can dotnet store command exclude dependencies from Microsoft.NETCore.App?</Title>
    <Description>## Steps to reproduce

1) Create an xml file listing a package that depends on packages included in Microsoft.NETCore.App. For example.



## Environment data
~/temp/LambdaLayer/AspNetCoreTest/src/AspNetCoreTest$ dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.2.100
 Commit:    51868761f2

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.14
 OS Platform: Darwin
 RID:         osx.10.14-x64
 Base Path:   /usr/local/share/dotnet/sdk/2.2.100/

Host (useful for support):
  Version: 2.2.0
  Commit:  1249f08fed

.NET Core SDKs installed:
  1.1.11 [/usr/local/share/dotnet/sdk]
  2.1.302 [/usr/local/share/dotnet/sdk]
  2.1.403 [/usr/local/share/dotnet/sdk]
  2.1.503 [/usr/local/share/dotnet/sdk]
  2.2.100 [/usr/local/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.10 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]






</Description>
    <Title_Description>Can dotnet store command exclude dependencies from Microsoft.NETCore.App? ## Steps to reproduce

1) Create an xml file listing a package that depends on packages included in Microsoft.NETCore.App. For example.



## Environment data
~/temp/LambdaLayer/AspNetCoreTest/src/AspNetCoreTest$ dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.2.100
 Commit:    51868761f2

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.14
 OS Platform: Darwin
 RID:         osx.10.14-x64
 Base Path:   /usr/local/share/dotnet/sdk/2.2.100/

Host (useful for support):
  Version: 2.2.0
  Commit:  1249f08fed

.NET Core SDKs installed:
  1.1.11 [/usr/local/share/dotnet/sdk]
  2.1.302 [/usr/local/share/dotnet/sdk]
  2.1.403 [/usr/local/share/dotnet/sdk]
  2.1.503 [/usr/local/share/dotnet/sdk]
  2.2.100 [/usr/local/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.10 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]






</Title_Description>
    <Label>question</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10782</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/02/2019 12:01:21 AM +00:00</CreatedAt>
    <ClosedAt>15/02/2019 3:24:09 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10774</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/02/2019 12:01:37 PM +00:00</CreatedAt>
    <ClosedAt>14/02/2019 12:52:41 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10773</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/02/2019 12:01:34 PM +00:00</CreatedAt>
    <ClosedAt>14/02/2019 3:36:14 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10772</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/02/2019 12:01:30 PM +00:00</CreatedAt>
    <ClosedAt>13/02/2019 6:41:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10763</IssueLabelID>
    <Title>Use releases-index.json as the source for "channels" for dotnet-install.ps1/sh</Title>
    <Description>This file contains a list of latest stable releases: https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json.

It would be nice if 
Next fetch https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.1/releases.json and read the data from this file to find the appropriate file.</Description>
    <Title_Description>Use releases-index.json as the source for "channels" for dotnet-install.ps1/sh This file contains a list of latest stable releases: https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json.

It would be nice if 
Next fetch https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.1/releases.json and read the data from this file to find the appropriate file.</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10762</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/02/2019 12:01:23 AM +00:00</CreatedAt>
    <ClosedAt>13/02/2019 6:47:21 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10759</IssueLabelID>
    <Title>Remove package with --interactive</Title>
    <Description>a small change but a lot of loc files

continue https://github.com/dotnet/cli/pull/10674

part of https://github.com/dotnet/cli/issues/10529

@nkolev92 please review</Description>
    <Title_Description>Remove package with --interactive a small change but a lot of loc files

continue https://github.com/dotnet/cli/pull/10674

part of https://github.com/dotnet/cli/issues/10529

@nkolev92 please review</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10744</IssueLabelID>
    <Title>dotnet clean also supports solution files</Title>
    <Description>## Steps to reproduce
 output:
.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview-010184
 Commit:    c57bde4593

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview-010184\

Host (useful for support):
  Version: 3.0.0-preview-27324-5
  Commit:  63a01b08e5

.NET Core SDKs installed:
  1.1.11 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.2.100 [C:\Program Files\dotnet\sdk]
  3.0.100-preview-010184 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27324-5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview-27325-3 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>dotnet clean also supports solution files ## Steps to reproduce
 output:
.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview-010184
 Commit:    c57bde4593

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview-010184\

Host (useful for support):
  Version: 3.0.0-preview-27324-5
  Commit:  63a01b08e5

.NET Core SDKs installed:
  1.1.11 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.2.100 [C:\Program Files\dotnet\sdk]
  3.0.100-preview-010184 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27324-5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview-27325-3 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>good first issue</Label>
    <CreatedAt>9/02/2019 5:04:59 AM +00:00</CreatedAt>
    <ClosedAt>28/02/2019 5:45:26 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10743</IssueLabelID>
    <Title>dotnet migrate --help says "Migration failed." before printing help</Title>
    <Description>## Steps to reproduce
dotnet migrate --help

## Expected  behavior
Only help would be displayed.

## Actual behavior
Message "Migration failed." + help is displayed.

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview-010184
 Commit:    c57bde4593

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview-010184\

Host (useful for support):
  Version: 3.0.0-preview-27324-5
  Commit:  63a01b08e5

.NET Core SDKs installed:
  1.1.11 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.2.100 [C:\Program Files\dotnet\sdk]
  3.0.100-preview-010184 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27324-5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview-27325-3 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download</Description>
    <Title_Description>dotnet migrate --help says "Migration failed." before printing help ## Steps to reproduce
dotnet migrate --help

## Expected  behavior
Only help would be displayed.

## Actual behavior
Message "Migration failed." + help is displayed.

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview-010184
 Commit:    c57bde4593

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview-010184\

Host (useful for support):
  Version: 3.0.0-preview-27324-5
  Commit:  63a01b08e5

.NET Core SDKs installed:
  1.1.11 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.2.100 [C:\Program Files\dotnet\sdk]
  3.0.100-preview-010184 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.2.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27324-5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.0.0-preview-27325-3 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download</Title_Description>
    <Label>good first issue</Label>
    <CreatedAt>9/02/2019 5:00:17 AM +00:00</CreatedAt>
    <ClosedAt>18/02/2019 4:18:14 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10734</IssueLabelID>
    <Title>dotnet tool update does not have a `--version` parameter so can't be used for prereleases</Title>
    <Description>## Steps to reproduce





</Description>
    <Title_Description>dotnet tool update does not have a 




</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10733</IssueLabelID>
    <Title>Fix typo: s/Interective/Interactive/</Title>
    <Description>NOTE: I will backport this to release/2.1.6xx along with the corresponding loc handback

Fix #10728 
</Description>
    <Title_Description>Fix typo: s/Interective/Interactive/ NOTE: I will backport this to release/2.1.6xx along with the corresponding loc handback

Fix #10728 
</Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>8/02/2019 6:33:14 PM +00:00</CreatedAt>
    <ClosedAt>9/02/2019 12:13:34 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10728</IssueLabelID>
    <Title>fsi help is misspelled</Title>
    <Description>## Steps to reproduce



s/Interective/Interactive/

@KevinRansom 


</Description>
    <Title_Description>fsi help is misspelled ## Steps to reproduce



s/Interective/Interactive/

@KevinRansom 


</Title_Description>
    <Label>Bug</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10726</IssueLabelID>
    <Title>Insert NuGet Build 5.0.0-rtm.5821 into cli</Title>
    <Description>Insert NuGet Build 5.0.0-rtm.5821 into cli release/2.1.6xx branch</Description>
    <Title_Description>Insert NuGet Build 5.0.0-rtm.5821 into cli Insert NuGet Build 5.0.0-rtm.5821 into cli release/2.1.6xx branch</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>7/02/2019 6:40:34 PM +00:00</CreatedAt>
    <ClosedAt>7/02/2019 11:53:06 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10722</IssueLabelID>
    <Title>Add an extra line after first run experience message</Title>
    <Description>Clean Linux machine.
Install .NET Core SDK 2.2 per the instructions on the web.
Run
 will now work.

This is confusing if we can't make this work in the original terminal we should at last write out a warning that a new terminal needs to be started.






</Description>
    <Title_Description>Add an extra line after first run experience message Clean Linux machine.
Install .NET Core SDK 2.2 per the instructions on the web.
Run
 will now work.

This is confusing if we can't make this work in the original terminal we should at last write out a warning that a new terminal needs to be started.






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10719</IssueLabelID>
    <Title>Fix VS option to disallow previews in resolver</Title>
    <Description>When the resolver was retargeted to net472 #if NET46 became unused causing the default x-plat behavior of never disallowing previews to be used.

This had not been caught because:

1. VS 16 is the only version with a resolver having this bug and it is still in preview and therefore grays out the option to disallow previews of SDK.

2. VSSettings have to be mocked in unit tests

Also:

* Fix unnecessary deployment of embedded Microsoft.VisualStudio.Setup.Configuration.Interop.
* Remove explicit package dependency on NETStandard.Library on the unofficial nupkg of resolver
* Remove unnecessary unused #if NET46/NET451 that can now use the same API on net472 as netstandard/netcoreapp
</Description>
    <Title_Description>Fix VS option to disallow previews in resolver When the resolver was retargeted to net472 #if NET46 became unused causing the default x-plat behavior of never disallowing previews to be used.

This had not been caught because:

1. VS 16 is the only version with a resolver having this bug and it is still in preview and therefore grays out the option to disallow previews of SDK.

2. VSSettings have to be mocked in unit tests

Also:

* Fix unnecessary deployment of embedded Microsoft.VisualStudio.Setup.Configuration.Interop.
* Remove explicit package dependency on NETStandard.Library on the unofficial nupkg of resolver
* Remove unnecessary unused #if NET46/NET451 that can now use the same API on net472 as netstandard/netcoreapp
</Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>6/02/2019 10:37:21 PM +00:00</CreatedAt>
    <ClosedAt>7/02/2019 10:12:34 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10716</IssueLabelID>
    <Title>Updating 2.2 test templates</Title>
    <Description>Updating the test templates for net 2.2x with precendence fix.
</Description>
    <Title_Description>Updating 2.2 test templates Updating the test templates for net 2.2x with precendence fix.
</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>6/02/2019 3:37:37 PM +00:00</CreatedAt>
    <ClosedAt>8/02/2019 10:21:09 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10714</IssueLabelID>
    <Title>Dotnet tools not found when using xargs</Title>
    <Description>Hi my use case is that I have multiple test projects in one folder and I would like to run all the unit tests. I am using coverlet dotnet tool to run the unit tests and gather code coverage information.


## Steps to reproduce






</Description>
    <Title_Description>Dotnet tools not found when using xargs Hi my use case is that I have multiple test projects in one folder and I would like to run all the unit tests. I am using coverlet dotnet tool to run the unit tests and gather code coverage information.


## Steps to reproduce






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10712</IssueLabelID>
    <Title>Localize MSBuild SDK resolver</Title>
    <Description>Fix #9553</Description>
    <Title_Description>Localize MSBuild SDK resolver Fix #9553</Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>5/02/2019 11:19:47 PM +00:00</CreatedAt>
    <ClosedAt>6/02/2019 9:33:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10704</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>5/02/2019 12:01:36 AM +00:00</CreatedAt>
    <ClosedAt>13/02/2019 12:33:04 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10701</IssueLabelID>
    <Title>dotnet tool install from azure devops failed</Title>
    <Description>## Steps to reproduce

    1. Ensure .NET SDK 2.2.103 is installed
    2.  option is not available.

## My workaround

1. create a dummy project with dotnet new console.
2. create a nuget.config with dotnet new nugetconfig.
3. now add your own feed to your nuget in the nuget.config.
4. now you can perform dotnet restore --interactive and authenticate yourself.
5. your nuget should now be configured.</Description>
    <Title_Description>dotnet tool install from azure devops failed ## Steps to reproduce

    1. Ensure .NET SDK 2.2.103 is installed
    2.  option is not available.

## My workaround

1. create a dummy project with dotnet new console.
2. create a nuget.config with dotnet new nugetconfig.
3. now add your own feed to your nuget in the nuget.config.
4. now you can perform dotnet restore --interactive and authenticate yourself.
5. your nuget should now be configured.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10672</IssueLabelID>
    <Title>Updating the WebSdk package version</Title>
    <Description>Feed with the changes - https://dotnet.myget.org/feed/dotnet-web/package/nuget/Microsoft.NET.Sdk.Web/2.2.200

This is approved for 2.2.200
</Description>
    <Title_Description>Updating the WebSdk package version Feed with the changes - https://dotnet.myget.org/feed/dotnet-web/package/nuget/Microsoft.NET.Sdk.Web/2.2.200

This is approved for 2.2.200
</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10670</IssueLabelID>
    <Title>Merge release/2.2.2xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to master 
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>30/01/2019 12:01:34 AM +00:00</CreatedAt>
    <ClosedAt>27/02/2019 4:24:34 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10669</IssueLabelID>
    <Title>dotnet sln remove puts all nested not empty solution folders into root folder</Title>
    <Description>## Steps to reproduce
1. Create blank solution
2. Create solution folders and any file like this: \NewFolder1\NewFolder2\text.txt
3. Create any project inside the solution
4. Remove project using the "dotnet sln remove" command

## Expected  behavior
File is located in the \NewFolder1\NewFolder2 folder

## Actual behavior
File is located in the \NewFolder2 folder

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.500
 Commit:    b68b931422

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.500\

Host (useful for support):
  Version: 2.1.6
  Commit:  3f4f8eebd8

.NET Core SDKs installed:
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.302 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]
  2.1.500 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
</Description>
    <Title_Description>dotnet sln remove puts all nested not empty solution folders into root folder ## Steps to reproduce
1. Create blank solution
2. Create solution folders and any file like this: \NewFolder1\NewFolder2\text.txt
3. Create any project inside the solution
4. Remove project using the "dotnet sln remove" command

## Expected  behavior
File is located in the \NewFolder1\NewFolder2 folder

## Actual behavior
File is located in the \NewFolder2 folder

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.500
 Commit:    b68b931422

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.500\

Host (useful for support):
  Version: 2.1.6
  Commit:  3f4f8eebd8

.NET Core SDKs installed:
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.302 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]
  2.1.500 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
</Title_Description>
    <Label>good first issue</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10668</IssueLabelID>
    <Title>dotnet add local package -&gt; error: Value cannot be null. error: Parameter name: path1</Title>
    <Description>## Steps to reproduce
I'm on macOS 10.14.2
dotnet version 2.2.103

1. Create a C# class library project
2. Add package metadata to the project file
- inside the existing &lt;PropertyGroup&gt; tag


3. Run the pack command
$ dotnet pack
4 $ nuget add mylib.nupkg -source /Users/myname/nuget_repo
5 $ dotnet nuget push mylib.1.0.0.nupkg -s my-nuget
In my ConsoleApp project try to add my nuget package:
6 $ dotnet add package mylib -s /Users/myname/nuget-repo

## Expected  behavior
Successfully adding my Nuget package.

## Actual behavior
myname:MyConsoleApp myname$ dotnet add package mylib
  Writing /var/folders/cr/4pk4646d1_x5tl_tbbbbvqkw0000gn/T/tmpyagAXi.tmp
info : Adding PackageReference for package 'mylib' into project '/Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj'.
log  : Restoring packages for /Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj...
info : Package 'mylib' is compatible with all the specified frameworks in project '/Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj'.
error: Value cannot be null.
error: Parameter name: path1






</Description>
    <Title_Description>dotnet add local package -&gt; error: Value cannot be null. error: Parameter name: path1 ## Steps to reproduce
I'm on macOS 10.14.2
dotnet version 2.2.103

1. Create a C# class library project
2. Add package metadata to the project file
- inside the existing &lt;PropertyGroup&gt; tag


3. Run the pack command
$ dotnet pack
4 $ nuget add mylib.nupkg -source /Users/myname/nuget_repo
5 $ dotnet nuget push mylib.1.0.0.nupkg -s my-nuget
In my ConsoleApp project try to add my nuget package:
6 $ dotnet add package mylib -s /Users/myname/nuget-repo

## Expected  behavior
Successfully adding my Nuget package.

## Actual behavior
myname:MyConsoleApp myname$ dotnet add package mylib
  Writing /var/folders/cr/4pk4646d1_x5tl_tbbbbvqkw0000gn/T/tmpyagAXi.tmp
info : Adding PackageReference for package 'mylib' into project '/Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj'.
log  : Restoring packages for /Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj...
info : Package 'mylib' is compatible with all the specified frameworks in project '/Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj'.
error: Value cannot be null.
error: Parameter name: path1






</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10664</IssueLabelID>
    <Title>dotnet-install.sh and dotnet-install.ps1 do not work as advertised with respect to printing a repeatable command line (`-DryRun`)</Title>
    <Description>## Steps to reproduce

Note: Assumes the presence presence of [ is needlessly present
  * no version resolution is performed.

## Environment data

Using the aforementioned scripts directly from this repo's master branch as of 27 Jan 2019.






</Description>
    <Title_Description>dotnet-install.sh and dotnet-install.ps1 do not work as advertised with respect to printing a repeatable command line ( is needlessly present
  * no version resolution is performed.

## Environment data

Using the aforementioned scripts directly from this repo's master branch as of 27 Jan 2019.






</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10663</IssueLabelID>
    <Title>dotnet-install.ps1: `-Runtime aspnetcore` is broken</Title>
    <Description>## Steps to reproduce

On Windows assumes the presence of [ (only a version number not preceded by  another line with the commit hash) whereas the code assumes the presence of _2_ lines.

## Environment data

Using the [script directly from the repo](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1) as of 27 Jan 2019.






</Description>
    <Title_Description>dotnet-install.ps1:  (only a version number not preceded by  another line with the commit hash) whereas the code assumes the presence of _2_ lines.

## Environment data

Using the [script directly from the repo](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1) as of 27 Jan 2019.






</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10657</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>26/01/2019 12:01:10 AM +00:00</CreatedAt>
    <ClosedAt>29/01/2019 9:30:26 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10650</IssueLabelID>
    <Title>Add --interactive to dotnet run and test</Title>
    <Description>These 2 verb have verbosity set to quiet. And we need to change it to minimal during --interface
to show the nuget plugin guide

part of #10529 </Description>
    <Title_Description>Add --interactive to dotnet run and test These 2 verb have verbosity set to quiet. And we need to change it to minimal during --interface
to show the nuget plugin guide

part of #10529 </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10647</IssueLabelID>
    <Title>Different build behaviour for .net core web apps between local VS IDE and msbuild</Title>
    <Description>_From @fromorbonia on January 10 2019 9:26_

## Steps to reproduce
Publishing a .NET Core web application with a FileSystem profile under VS2017 IDE creates a directory with an EXE (e.g. MyProject.exe)
There is a Jenkins build server running msbuild which correctly picks up the publish profile that was used and configured locally.
Place the resulting files on a server (with IIS) and a previosuly configured Web Site and the site should start correctly.

## Expected  behavior
I would expect the build server to create exactly the same set of files as produced by the local VS2017 publish process. 
Specifically in this case it should include MyProject.exe with a matching web.config file - so that once the files being copied to the IIS server the web site starts correctly.

## Actual behavior
The publish folder contains an apphost.exe and MyProject.dll but not an EXE. The web.config points to the EXE that does not exist:

I've only set UseAppHost to true because it on the local VS IDE it creates the correct combination of web.config and files so that the web site starts correctly on deployment. I don't have a requirement to use or not use an apphost.exe file.


For the **local VS2017 IDE** this is:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.401
 Commit:    91b1c13032

Runtime Environment:
 OS Name:     Windows
 OS Version:  6.1.7601
 OS Platform: Windows
 RID:         win7-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.401\

Host (useful for support):
  Version: 2.1.3
  Commit:  124038c13e

.NET Core SDKs installed:
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

For the **Jenkins build** server:
12:53:26 .NET Core SDK (reflecting any global.json):
12:53:26  Version:   2.1.502
12:53:26  Commit:    c74ce8f29f
12:53:26 
12:53:26 Runtime Environment:
12:53:26  OS Name:     Windows
12:53:26  OS Version:  10.0.14393
12:53:26  OS Platform: Windows
12:53:26  RID:         win10-x64
12:53:26  Base Path:   C:\Program Files\dotnet\sdk\2.1.502\
12:53:26 
12:53:26 Host (useful for support):
12:53:26   Version: 2.1.6
12:53:26   Commit:  3f4f8eebd8
12:53:26 
12:53:26 .NET Core SDKs installed:
12:53:26   2.1.401 [C:\Program Files\dotnet\sdk]
12:53:26   2.1.500 [C:\Program Files\dotnet\sdk]
12:53:26   2.1.502 [C:\Program Files\dotnet\sdk]
12:53:26 
12:53:26 .NET Core runtimes installed:
12:53:26   Microsoft.AspNetCore.All 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
12:53:26   Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
12:53:26   Microsoft.AspNetCore.App 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
12:53:26   Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
12:53:26   Microsoft.NETCore.App 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
12:53:26   Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]


_Copied from original issue: aspnet/websdk#470_</Description>
    <Title_Description>Different build behaviour for .net core web apps between local VS IDE and msbuild _From @fromorbonia on January 10 2019 9:26_

## Steps to reproduce
Publishing a .NET Core web application with a FileSystem profile under VS2017 IDE creates a directory with an EXE (e.g. MyProject.exe)
There is a Jenkins build server running msbuild which correctly picks up the publish profile that was used and configured locally.
Place the resulting files on a server (with IIS) and a previosuly configured Web Site and the site should start correctly.

## Expected  behavior
I would expect the build server to create exactly the same set of files as produced by the local VS2017 publish process. 
Specifically in this case it should include MyProject.exe with a matching web.config file - so that once the files being copied to the IIS server the web site starts correctly.

## Actual behavior
The publish folder contains an apphost.exe and MyProject.dll but not an EXE. The web.config points to the EXE that does not exist:

I've only set UseAppHost to true because it on the local VS IDE it creates the correct combination of web.config and files so that the web site starts correctly on deployment. I don't have a requirement to use or not use an apphost.exe file.


For the **local VS2017 IDE** this is:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.401
 Commit:    91b1c13032

Runtime Environment:
 OS Name:     Windows
 OS Version:  6.1.7601
 OS Platform: Windows
 RID:         win7-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.401\

Host (useful for support):
  Version: 2.1.3
  Commit:  124038c13e

.NET Core SDKs installed:
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

For the **Jenkins build** server:
12:53:26 .NET Core SDK (reflecting any global.json):
12:53:26  Version:   2.1.502
12:53:26  Commit:    c74ce8f29f
12:53:26 
12:53:26 Runtime Environment:
12:53:26  OS Name:     Windows
12:53:26  OS Version:  10.0.14393
12:53:26  OS Platform: Windows
12:53:26  RID:         win10-x64
12:53:26  Base Path:   C:\Program Files\dotnet\sdk\2.1.502\
12:53:26 
12:53:26 Host (useful for support):
12:53:26   Version: 2.1.6
12:53:26   Commit:  3f4f8eebd8
12:53:26 
12:53:26 .NET Core SDKs installed:
12:53:26   2.1.401 [C:\Program Files\dotnet\sdk]
12:53:26   2.1.500 [C:\Program Files\dotnet\sdk]
12:53:26   2.1.502 [C:\Program Files\dotnet\sdk]
12:53:26 
12:53:26 .NET Core runtimes installed:
12:53:26   Microsoft.AspNetCore.All 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
12:53:26   Microsoft.AspNetCore.All 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
12:53:26   Microsoft.AspNetCore.App 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
12:53:26   Microsoft.AspNetCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
12:53:26   Microsoft.NETCore.App 2.1.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
12:53:26   Microsoft.NETCore.App 2.1.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]


_Copied from original issue: aspnet/websdk#470_</Title_Description>
    <Label>Bug</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10646</IssueLabelID>
    <Title>WIP: Makes dotnet-install.ps1 x-platform</Title>
    <Description>Adds cross-edition and cross-platform support to the script addresses #8278.</Description>
    <Title_Description>WIP: Makes dotnet-install.ps1 x-platform Adds cross-edition and cross-platform support to the script addresses #8278.</Title_Description>
    <Label>Pending discussion</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>22/01/2019 11:06:04 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10645</IssueLabelID>
    <Title>Update dotnet-install.sh (and https://dot.net/v1/dotnet-install.sh) to allow other distros</Title>
    <Description>_From @danmosemsft on January 21 2019 6:3_

Repos using Arcade bootstrap with 


_Copied from original issue: dotnet/arcade#1848_</Description>
    <Title_Description>Update dotnet-install.sh (and https://dot.net/v1/dotnet-install.sh) to allow other distros _From @danmosemsft on January 21 2019 6:3_

Repos using Arcade bootstrap with 


_Copied from original issue: dotnet/arcade#1848_</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10644</IssueLabelID>
    <Title>.NET Core 3.0 SDK preview breaks dependencies</Title>
    <Description>I have a project that has 

</Description>
    <Title_Description>.NET Core 3.0 SDK preview breaks dependencies I have a project that has 

</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10643</IssueLabelID>
    <Title>Cannot build a supported target when an unsupported target exists in `&lt;TargetFrameworks&gt;`</Title>
    <Description>## Steps to reproduce

1. On Windows install .NET Core 2.0 SDK and .NET Framework 4.7 SDK
2.  output:

.NET Command Line Tools (2.1.104)

Product Information:
 Version:            2.1.104
 Commit SHA-1 hash:  48ec687460

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.14393
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.104\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.6
  Build    : 74b1c703813c8910df5b96f304b0f2b78cdf194d




</Description>
    <Title_Description>Cannot build a supported target when an unsupported target exists in  output:

.NET Command Line Tools (2.1.104)

Product Information:
 Version:            2.1.104
 Commit SHA-1 hash:  48ec687460

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.14393
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.104\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.6
  Build    : 74b1c703813c8910df5b96f304b0f2b78cdf194d




</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10638</IssueLabelID>
    <Title>Merge release/2.2.2xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to master 
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>20/01/2019 12:01:14 AM +00:00</CreatedAt>
    <ClosedAt>20/01/2019 11:37:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10630</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10629</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/01/2019 11:53:06 PM +00:00</CreatedAt>
    <ClosedAt>19/01/2019 10:56:54 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10628</IssueLabelID>
    <Title>Insert new nuget with NuGet.Packaging.Core breaking change</Title>
    <Description>- [x] dotnet-migrate branding update
- [x] Finish update of dotnet-migrate
- [x] Queue SDK 2.2.2xxx without test
- [x] Insert SDK 2.2.2xxx to CLI SDK 2.2.2xxx with new nuget and new dotnet-migrate
- [x] Update stage 0 in SDK 2.2.2xxx in new nuget insertion https://github.com/dotnet/sdk/pull/2917
- [x] Update SDK back to CLI  https://github.com/dotnet/cli/pull/10745

--------------
- [x] Queue SDK 2.1.6xxx without test
- [x] Insert SDK 2.1.6xxx to CLI SDK 2.1.6xxx with new nuget and new dotnet-migrate
- [x] Update stage 0 in SDK 2.1.6xxx in new nuget insertion
- [x] Update SDK back to CLI https://github.com/dotnet/cli/pull/10741 
--------------
- [x] Queue SDK 3.0.1xx without test 
- [x] Insert SDK 3.0.1xx to CLI SDK 3.0.1xx with new nuget and new dotnet-migrate https://github.com/dotnet/cli/pull/10818
- [x] Insert CLI to ToolSet
- [x] Insert ToolSet to core-sdk
- [x] Update stage 0 in SDK 3.0.1xx in new nuget insertion https://github.com/dotnet/sdk/pull/2968</Description>
    <Title_Description>Insert new nuget with NuGet.Packaging.Core breaking change - [x] dotnet-migrate branding update
- [x] Finish update of dotnet-migrate
- [x] Queue SDK 2.2.2xxx without test
- [x] Insert SDK 2.2.2xxx to CLI SDK 2.2.2xxx with new nuget and new dotnet-migrate
- [x] Update stage 0 in SDK 2.2.2xxx in new nuget insertion https://github.com/dotnet/sdk/pull/2917
- [x] Update SDK back to CLI  https://github.com/dotnet/cli/pull/10745

--------------
- [x] Queue SDK 2.1.6xxx without test
- [x] Insert SDK 2.1.6xxx to CLI SDK 2.1.6xxx with new nuget and new dotnet-migrate
- [x] Update stage 0 in SDK 2.1.6xxx in new nuget insertion
- [x] Update SDK back to CLI https://github.com/dotnet/cli/pull/10741 
--------------
- [x] Queue SDK 3.0.1xx without test 
- [x] Insert SDK 3.0.1xx to CLI SDK 3.0.1xx with new nuget and new dotnet-migrate https://github.com/dotnet/cli/pull/10818
- [x] Insert CLI to ToolSet
- [x] Insert ToolSet to core-sdk
- [x] Update stage 0 in SDK 3.0.1xx in new nuget insertion https://github.com/dotnet/sdk/pull/2968</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10623</IssueLabelID>
    <Title>Merge release/2.1.6xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.6xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/01/2019 12:01:25 AM +00:00</CreatedAt>
    <ClosedAt>17/01/2019 9:43:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10622</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/01/2019 12:01:23 AM +00:00</CreatedAt>
    <ClosedAt>17/01/2019 7:22:31 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10621</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.1.6xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.1.6xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/01/2019 12:01:20 AM +00:00</CreatedAt>
    <ClosedAt>17/01/2019 9:43:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10620</IssueLabelID>
    <Title>Update FXVersion to use SemVer 2.0.0</Title>
    <Description>Update FXVersion to use SemVer 2.0.0
Extend and fix tests

Fixes #10608</Description>
    <Title_Description>Update FXVersion to use SemVer 2.0.0 Update FXVersion to use SemVer 2.0.0
Extend and fix tests

Fixes #10608</Title_Description>
    <Label>
    </Label>
    <Assignee>sdmaclea</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10619</IssueLabelID>
    <Title>Update 'Architecture' help documentation.</Title>
    <Description>Update 'Architecture' help documentation; other...
</Description>
    <Title_Description>Update 'Architecture' help documentation. Update 'Architecture' help documentation; other...
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10611</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/01/2019 12:01:33 AM +00:00</CreatedAt>
    <ClosedAt>17/01/2019 5:11:53 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10610</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/01/2019 12:01:31 AM +00:00</CreatedAt>
    <ClosedAt>16/01/2019 10:12:44 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10608</IssueLabelID>
    <Title>Support SemVer2.0.0 for SDK resolution</Title>
    <Description>Arcade has started the transition to using SemVer2.0.0 versions.

Current SDK resolution does not yet support SemVer2.0.0

https://github.com/dotnet/cli/blob/f38d1472d05573158f52ec30f5163fe0316ede7b/src/Microsoft.DotNet.MSBuildSdkResolver/FXVersion.cs#L6-L9

See also dotnet/core-setup#4952 &amp; dotnet/core-setup#4953</Description>
    <Title_Description>Support SemVer2.0.0 for SDK resolution Arcade has started the transition to using SemVer2.0.0 versions.

Current SDK resolution does not yet support SemVer2.0.0

https://github.com/dotnet/cli/blob/f38d1472d05573158f52ec30f5163fe0316ede7b/src/Microsoft.DotNet.MSBuildSdkResolver/FXVersion.cs#L6-L9

See also dotnet/core-setup#4952 &amp; dotnet/core-setup#4953</Title_Description>
    <Label>
    </Label>
    <Assignee>sdmaclea</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10607</IssueLabelID>
    <Title>dotnet build -r fails on macOS/Linux succeeds on Windows with PackAsTool</Title>
    <Description>## Steps to reproduce
- Create a new console project (dotnet new console)
- Edit project file and add &lt;PackAsTool&gt;true&lt;/PackAsTool&gt;
- Build project on Windows with dotnet build -r win-x64 -c Release (this works)
- Build project on macOS with dotnet build -r osx-x64 -c Release (fails)
- Build project on Linux with dotnet build -r linux-x64 -c Release (fails)

## Expected  behavior
Build either succeeds or fails on all platforms. Personally I would prefer it would work on all platforms but I'm sure there is a rationale for the error I'm seeing on Linux and macOS.

## Actual behavior
Build succeeds on Windows but fails on the other platforms. Both fail with the following error:

error NETSDK1053: Pack as tool does not support self contained.

Based on the dotnet --info output (shown below) I'm guessing this was changed between 2.1 and 2.2 so perhaps pinning the SDK version to 2.1 would solve the issue for now but I'm not sure what the consequences would be.

## Environment data


</Description>
    <Title_Description>dotnet build -r fails on macOS/Linux, succeeds on Windows with PackAsTool ## Steps to reproduce
- Create a new console project (dotnet new console)
- Edit project file and add &lt;PackAsTool&gt;true&lt;/PackAsTool&gt;
- Build project on Windows with dotnet build -r win-x64 -c Release (this works)
- Build project on macOS with dotnet build -r osx-x64 -c Release (fails)
- Build project on Linux with dotnet build -r linux-x64 -c Release (fails)

## Expected  behavior
Build either succeeds or fails on all platforms. Personally I would prefer it would work on all platforms but I'm sure there is a rationale for the error I'm seeing on Linux and macOS.

## Actual behavior
Build succeeds on Windows but fails on the other platforms. Both fail with the following error:

error NETSDK1053: Pack as tool does not support self contained.

Based on the dotnet --info output (shown below) I'm guessing this was changed between 2.1 and 2.2 so perhaps pinning the SDK version to 2.1 would solve the issue for now but I'm not sure what the consequences would be.

## Environment data


</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10602</IssueLabelID>
    <Title>Dotnet publish with -r ubuntu-x64 and --self-contained=false fails to find framework</Title>
    <Description>## Steps to reproduce
 are used together. What should we expect to happen in this case? Is the app packaged with the specific runtime but not entirely self-contained?

Thanks for the help!</Description>
    <Title_Description>Dotnet publish with -r ubuntu-x64 and --self-contained=false fails to find framework ## Steps to reproduce
 are used together. What should we expect to happen in this case? Is the app packaged with the specific runtime but not entirely self-contained?

Thanks for the help!</Title_Description>
    <Label>Bug</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10600</IssueLabelID>
    <Title>Add specific guide for no manifest</Title>
    <Description>fix https://github.com/dotnet/cli/issues/10499

Actual message:
</Description>
    <Title_Description>Add specific guide for no manifest fix https://github.com/dotnet/cli/issues/10499

Actual message:
</Title_Description>
    <Label>tool</Label>
    <CreatedAt>12/01/2019 12:38:54 AM +00:00</CreatedAt>
    <ClosedAt>15/01/2019 6:31:13 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10592</IssueLabelID>
    <Title>dotnet SDK 2.2.102 fails to run netcoreapp2.1 that references Microsoft.AspNetCore.SignalR</Title>
    <Description>After installing SDK 





</Description>
    <Title_Description>dotnet SDK 2.2.102 fails to run netcoreapp2.1 that references Microsoft.AspNetCore.SignalR After installing SDK 





</Title_Description>
    <Label>duplicate</Label>
    <CreatedAt>11/01/2019 8:59:08 AM +00:00</CreatedAt>
    <ClosedAt>11/01/2019 5:25:05 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10590</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>10/01/2019 9:10:20 PM +00:00</CreatedAt>
    <ClosedAt>11/01/2019 12:13:44 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10581</IssueLabelID>
    <Title>Use finalized targeting pack format</Title>
    <Description>With https://github.com/dotnet/sdk/pull/2774 we are resolving assets from "targeting packs" but we are using the existing packages (such as Microsoft.NETCore.App) as the targeting packs.  We plan to use different packages with different layouts as the real targeting packs.  Along with that we will need to update the asset resolution logic to account for this.

See [dotnet/designs#50](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e) for the current design for the targeting pack layout.

Items that should be resolved from targeting packs:

- [x] Assembly references (from </Description>
    <Title_Description>Use finalized targeting pack format With https://github.com/dotnet/sdk/pull/2774 we are resolving assets from "targeting packs" but we are using the existing packages (such as Microsoft.NETCore.App) as the targeting packs.  We plan to use different packages with different layouts as the real targeting packs.  Along with that we will need to update the asset resolution logic to account for this.

See [dotnet/designs#50](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e) for the current design for the targeting pack layout.

Items that should be resolved from targeting packs:

- [x] Assembly references (from </Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10580</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/01/2019 10:17:09 PM +00:00</CreatedAt>
    <ClosedAt>10/01/2019 6:36:22 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10579</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/01/2019 10:17:07 PM +00:00</CreatedAt>
    <ClosedAt>10/01/2019 12:26:12 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10574</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/01/2019 12:01:18 PM +00:00</CreatedAt>
    <ClosedAt>9/01/2019 5:31:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10573</IssueLabelID>
    <Title>Change the wrong word LocalizableStrings.zh-Hans.xlf</Title>
    <Description>Change the wrong word
 =&gt; '退出遥测'</Description>
    <Title_Description>Change the wrong word LocalizableStrings.zh-Hans.xlf Change the wrong word
 =&gt; '退出遥测'</Title_Description>
    <Label>Pending discussion</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>9/01/2019 4:17:12 AM +00:00</CreatedAt>
    <ClosedAt>19/01/2019 10:58:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10569</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/01/2019 1:37:41 AM +00:00</CreatedAt>
    <ClosedAt>9/01/2019 3:36:42 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10566</IssueLabelID>
    <Title>Limit default apphost feature to netcoreapp3.0</Title>
    <Description>## Steps to reproduce

Using a 3.0 SDK:

1. 





</Description>
    <Title_Description>Limit default apphost feature to netcoreapp3.0 ## Steps to reproduce

Using a 3.0 SDK:

1. 





</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10554</IssueLabelID>
    <Title>latest 3.0 sdk has issue resolving project argument</Title>
    <Description>## Steps to reproduce


## Additional info

This regression occurs on 3.0 daily since 5 Dec.</Description>
    <Title_Description>latest 3.0 sdk has issue resolving project argument ## Steps to reproduce


## Additional info

This regression occurs on 3.0 daily since 5 Dec.</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10553</IssueLabelID>
    <Title>For .NET Core 3.0 create a .net core ASP.NET Core web/webapi/mvc project via CLI dotnet run failed with error: The specified framework 'Microsoft.NETCore.App' version '3.0.0-preview-27219-3' was not found...</Title>
    <Description>## Steps to reproduce
Using CLI : Create a .net core ASP.NET Core web/Web API/Web App (Model-View-Controller) project

## Expected  behavior
Dotnet restore and build and run succeed without errors or warnings.

## Actual behavior
dotnet new web/webapi/mvc --&gt; succeed
dotnet restore/build --&gt;succeed
dotnet run --&gt;failed with error: The specified framework 'Microsoft.NETCore.App' version '3.0.0-preview-27219-3' was not found...

![3](https://user-images.githubusercontent.com/33921754/50762120-1143b880-12a7-11e9-9bae-ac3e7d9e2041.PNG)
**Note**: Add localfeed package source https://dotnet.myget.org/F/dotnet-core/api/v3/index.json or https://dotnetfeed.blob.core.windows.net/3-0/20181121-01/index.json doesn’t work.
## Environment data







</Description>
    <Title_Description>For .NET Core 3.0, create a .net core ASP.NET Core web/webapi/mvc project via CLI, dotnet run failed with error: The specified framework 'Microsoft.NETCore.App', version '3.0.0-preview-27219-3' was not found... ## Steps to reproduce
Using CLI : Create a .net core ASP.NET Core web/Web API/Web App (Model-View-Controller) project

## Expected  behavior
Dotnet restore and build and run succeed without errors or warnings.

## Actual behavior
dotnet new web/webapi/mvc --&gt; succeed
dotnet restore/build --&gt;succeed
dotnet run --&gt;failed with error: The specified framework 'Microsoft.NETCore.App' version '3.0.0-preview-27219-3' was not found...

![3](https://user-images.githubusercontent.com/33921754/50762120-1143b880-12a7-11e9-9bae-ac3e7d9e2041.PNG)
**Note**: Add localfeed package source https://dotnet.myget.org/F/dotnet-core/api/v3/index.json or https://dotnetfeed.blob.core.windows.net/3-0/20181121-01/index.json doesn’t work.
## Environment data







</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10550</IssueLabelID>
    <Title>dotnet build output directory is different on Linux</Title>
    <Description>When I run 

</Description>
    <Title_Description>dotnet build output directory is different on Linux When I run 

</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10548</IssueLabelID>
    <Title>dotnet build /v:q is not as quiet as msbuild /v:q</Title>
    <Description>## Steps to reproduce
dotnet build /v:q

## Expected  behavior
Only the msbuild logo is displayed

## Actual behavior
Additional lines are displayed:
</Description>
    <Title_Description>dotnet build /v:q is not as quiet as msbuild /v:q ## Steps to reproduce
dotnet build /v:q

## Expected  behavior
Only the msbuild logo is displayed

## Actual behavior
Additional lines are displayed:
</Title_Description>
    <Label>good first issue</Label>
    <Assignee>theswanand</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10538</IssueLabelID>
    <Title>Remove extra new line restore success message</Title>
    <Description>fix https://github.com/dotnet/cli/issues/10469</Description>
    <Title_Description>Remove extra new line restore success message fix https://github.com/dotnet/cli/issues/10469</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10530</IssueLabelID>
    <Title>Interactive on build clean pack publish verb</Title>
    <Description>part of https://github.com/dotnet/cli/issues/10529

Make InteractiveOption a CommonOptions and add to the following

build clean pack publish

-------------
- test and run are problematic since they are quiet by default and it will not print auth instruction. Need more discussion
- why do not create command option list for option like verbose no restore and interactive? If you look at the usage of these options. They don't have the same count and it is hard to make sense what is in common(the big verbs?). Also the existing syntax uses param for method argument. To have a common option list I need to make existing options a list and then concat the option list. It is harder to follow.</Description>
    <Title_Description>Interactive on build, clean, pack, publish verb part of https://github.com/dotnet/cli/issues/10529

Make InteractiveOption a CommonOptions and add to the following

build clean pack publish

-------------
- test and run are problematic since they are quiet by default and it will not print auth instruction. Need more discussion
- why do not create command option list for option like verbose no restore and interactive? If you look at the usage of these options. They don't have the same count and it is hard to make sense what is in common(the big verbs?). Also the existing syntax uses param for method argument. To have a common option list I need to make existing options a list and then concat the option list. It is harder to follow.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10529</IssueLabelID>
    <Title>--interactive on most of the commands</Title>
    <Description>1. If a project require --interactive to auth it cannot restore without  option

- [x] add package 
- [x] add reference    -- Microsoft.Build.Evaluation  (in pr)
- [x] build 
- [x] clean
- [x] list package     -- need nuget change https://github.com/NuGet/Home/issues/7727
- [x] list reference    -- Microsoft.Build.Evaluation but work without auth 
- [ ] new               https://github.com/dotnet/templating/issues/1747 
- [x] pack             
- [x] publish           
- [x] remove  package -- need nuget change https://github.com/NuGet/Home/issues/7727
- [x] remove  reference  -- Microsoft.Build.Evaluation but work without auth 
- [x] restore           
- [x] run               Quiet (in PR)
- [x] test              Quiet (in PR)
- [x] tool</Description>
    <Title_Description>--interactive on most of the commands 1. If a project require --interactive to auth it cannot restore without  option

- [x] add package 
- [x] add reference    -- Microsoft.Build.Evaluation  (in pr)
- [x] build 
- [x] clean
- [x] list package     -- need nuget change https://github.com/NuGet/Home/issues/7727
- [x] list reference    -- Microsoft.Build.Evaluation but work without auth 
- [ ] new               https://github.com/dotnet/templating/issues/1747 
- [x] pack             
- [x] publish           
- [x] remove  package -- need nuget change https://github.com/NuGet/Home/issues/7727
- [x] remove  reference  -- Microsoft.Build.Evaluation but work without auth 
- [x] restore           
- [x] run               Quiet (in PR)
- [x] test              Quiet (in PR)
- [x] tool</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10524</IssueLabelID>
    <Title>Add --interactive to dotnet tools</Title>
    <Description>fix https://github.com/dotnet/cli/issues/10231</Description>
    <Title_Description>Add --interactive to dotnet tools fix https://github.com/dotnet/cli/issues/10231</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10523</IssueLabelID>
    <Title>Remove workaround to output minimal when "--interactive" is used in dotnet tools</Title>
    <Description>when https://github.com/NuGet/NuGet.Client/pull/2577 is merged and inserted to CLI

Today output quiet will break "--interacitve" experience since it will output nothing. However minimal output will have the temp project path. After the above nuget change minimal output will not have temp project path anymore so the workaround can be removed</Description>
    <Title_Description>Remove workaround to output minimal when "--interactive" is used in dotnet tools when https://github.com/NuGet/NuGet.Client/pull/2577 is merged and inserted to CLI

Today output quiet will break "--interacitve" experience since it will output nothing. However minimal output will have the temp project path. After the above nuget change minimal output will not have temp project path anymore so the workaround can be removed</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10520</IssueLabelID>
    <Title>Repair the Absolutepath; part 2</Title>
    <Description>Addresses: #10293

PR: https://github.com/dotnet/cli/pull/10512 was not complete
 
Change:
Do not cast 'Source' to a variable type - allow usage to do the typing; variable name is now: "Source" not: "Uri".

@jerickmsft
</Description>
    <Title_Description>Repair the Absolutepath; part 2 Addresses: #10293

PR: https://github.com/dotnet/cli/pull/10512 was not complete
 
Change:
Do not cast 'Source' to a variable type - allow usage to do the typing; variable name is now: "Source" not: "Uri".

@jerickmsft
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10516</IssueLabelID>
    <Title>Dotnet restore bahave differently on linux and windows</Title>
    <Description>## Steps to reproduce
1- create two projects with .netcore 2.2 





</Description>
    <Title_Description>Dotnet restore bahave differently on linux and windows ## Steps to reproduce
1- create two projects with .netcore 2.2 





</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10515</IssueLabelID>
    <Title>Tarball and pkg/SDK installer versions are different in nightly build</Title>
    <Description>tarball:

.NET Core SDKs installed:
  3.0.100-preview-009844 [/Users/kathleen/Downloads/dotnet-sdk-latest-osx-x64/sdk]

pkg:
  3.0.100-preview-009974 [/usr/local/share/dotnet/sdk]

Expect them to be the same 






</Description>
    <Title_Description>Tarball and pkg/SDK installer versions are different in nightly build tarball:

.NET Core SDKs installed:
  3.0.100-preview-009844 [/Users/kathleen/Downloads/dotnet-sdk-latest-osx-x64/sdk]

pkg:
  3.0.100-preview-009974 [/usr/local/share/dotnet/sdk]

Expect them to be the same 






</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10514</IssueLabelID>
    <Title>Nightly build install fails</Title>
    <Description>## Steps to reproduce
On a Mac:
Install nightly build via the SDK installer
Run either 





</Description>
    <Title_Description>Nightly build install fails ## Steps to reproduce
On a Mac:
Install nightly build via the SDK installer
Run either 





</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10513</IssueLabelID>
    <Title>Unbound variable `DOTNET_INSTALL_DIR` in `eng/restore-toolset.sh`</Title>
    <Description>## Steps to reproduce

1. 

## Environment data

Repros on macOS 10.14 and Ubuntu 16.04.






</Description>
    <Title_Description>Unbound variable 

## Environment data

Repros on macOS 10.14 and Ubuntu 16.04.






</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10512</IssueLabelID>
    <Title>Repair the Absolutepath</Title>
    <Description>Addresses: https://github.com/dotnet/cli/issues/10293
</Description>
    <Title_Description>Repair the Absolutepath Addresses: https://github.com/dotnet/cli/issues/10293
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10501</IssueLabelID>
    <Title>Document Composable Shared frameworks design</Title>
    <Description>
    </Description>
    <Title_Description>Document Composable Shared frameworks design </Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10499</IssueLabelID>
    <Title>Add run `dotnet new tool-manifest` to the error message of cannot find manifest</Title>
    <Description>We should guide the user to run _dotnet new tool-manifest_ if they want to create it when there is no manifest in _dotnet tool restore_ or _dotnet tool install mytool_ </Description>
    <Title_Description>Add run  to the error message of cannot find manifest We should guide the user to run _dotnet new tool-manifest_ if they want to create it when there is no manifest in _dotnet tool restore_ or _dotnet tool install mytool_ </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10491</IssueLabelID>
    <Title>Improve --roll-forward-on-no-candidate-fx usage text.</Title>
    <Description>Make it explicit that the --roll-forward-on-no-candidate-fx options requires a value. Modify the description since the argument sets the behavior (it doesn't just enable it it can also disable and so on).

Related to dotnet/core-setup#4873</Description>
    <Title_Description>Improve --roll-forward-on-no-candidate-fx usage text. Make it explicit that the --roll-forward-on-no-candidate-fx options requires a value. Modify the description since the argument sets the behavior (it doesn't just enable it it can also disable and so on).

Related to dotnet/core-setup#4873</Title_Description>
    <Label>
    </Label>
    <Assignee>vitek-karas</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10486</IssueLabelID>
    <Title>Block --interactive and --verbose:quiet</Title>
    <Description>only warning and error will show. So the output of  will not be printed. Need to consider where to implement this MSBuild or CLI</Description>
    <Title_Description>Block --interactive and --verbose:quiet only warning and error will show. So the output of  will not be printed. Need to consider where to implement this MSBuild or CLI</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10485</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>18/12/2018 12:01:08 AM +00:00</CreatedAt>
    <ClosedAt>28/12/2018 5:48:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10484</IssueLabelID>
    <Title>NETSDK1007 error when building solution with ProjectReference tags in specific order</Title>
    <Description>## Steps to reproduce
1. Build the [attached solution](https://github.com/dotnet/cli/files/2688002/NetSdk1007.zip). It should build successfully.
2. In the NetSdk1007/NetSdk1007.csproj file switch the position of the two ProjectReference tags such that they look like this:
</Description>
    <Title_Description>NETSDK1007 error when building solution with ProjectReference tags in specific order ## Steps to reproduce
1. Build the [attached solution](https://github.com/dotnet/cli/files/2688002/NetSdk1007.zip). It should build successfully.
2. In the NetSdk1007/NetSdk1007.csproj file switch the position of the two ProjectReference tags such that they look like this:
</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10479</IssueLabelID>
    <Title>dotnet --info shows runtimes and sdks twice</Title>
    <Description>## Steps to reproduce

dotnet --info

## Expected  behavior

Show every SDK and runtime once.

## Actual behavior

Shows every SDK and runtime twice.

## Environment data

</Description>
    <Title_Description>dotnet --info shows runtimes and sdks twice ## Steps to reproduce

dotnet --info

## Expected  behavior

Show every SDK and runtime once.

## Actual behavior

Shows every SDK and runtime twice.

## Environment data

</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10475</IssueLabelID>
    <Title>Acquire and use AppHost for framework dependent apps targeting .NET Core 3 and up</Title>
    <Description>Currently the AppHost is in the package dependency graph of Microsoft.NETCore.App and the  task finds it in the assets file so that it can be copied to the output directory and renamed for framework-dependent apps.

With .NET Core 3.0 we will be using [targeting packs](https://github.com/dotnet/cli/issues/10006) instead of package references so we will need another way to acquire and locate the apphost.

Likely we will implement this by generating "download only package references" for a package which contains the app host.  This will depend on the RID so we will need to use the RID graph (see #10104) to resolve the best apphost RID to use.

</Description>
    <Title_Description>Acquire and use AppHost for framework dependent apps targeting .NET Core 3 and up Currently the AppHost is in the package dependency graph of Microsoft.NETCore.App and the  task finds it in the assets file so that it can be copied to the output directory and renamed for framework-dependent apps.

With .NET Core 3.0 we will be using [targeting packs](https://github.com/dotnet/cli/issues/10006) instead of package references so we will need another way to acquire and locate the apphost.

Likely we will implement this by generating "download only package references" for a package which contains the app host.  This will depend on the RID so we will need to use the RID graph (see #10104) to resolve the best apphost RID to use.

</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10474</IssueLabelID>
    <Title>Project with multiple RuntimeIdentifiers is missing exe in Self Contained deployment</Title>
    <Description>_From @Suchiman on December 13 2018 17:20_

With a csproj looking like

fixes this but has https://github.com/dotnet/core-setup/issues/4865 as a side effect

_Copied from original issue: dotnet/core#2147_</Description>
    <Title_Description>Project with multiple RuntimeIdentifiers is missing exe in Self Contained deployment _From @Suchiman on December 13 2018 17:20_

With a csproj looking like

fixes this but has https://github.com/dotnet/core-setup/issues/4865 as a side effect

_Copied from original issue: dotnet/core#2147_</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10469</IssueLabelID>
    <Title>Extra new line when tool restore is successful</Title>
    <Description>
    </Description>
    <Title_Description>Extra new line when tool restore is successful </Title_Description>
    <Label>Bug</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10468</IssueLabelID>
    <Title>Add 'dotnet tool install' failure potential reason: 'tool requires a runtime that is not installed'</Title>
    <Description>From https://github.com/dotnet/source-build/issues/926#issuecomment-446345298:

&gt; [@tmds] 'requires a runtime that is not installed' should be added to 'This failure may have been caused by'.

https://github.com/dotnet/cli/blob/22cbfcb49bd9a38292ac6f66a14158b426daefdb/src/dotnet/commands/dotnet-tool/install/LocalizableStrings.resx#L182-L189

Failure context:



/cc @wli3 </Description>
    <Title_Description>Add 'dotnet tool install' failure potential reason: 'tool requires a runtime that is not installed' From https://github.com/dotnet/source-build/issues/926#issuecomment-446345298:

&gt; [@tmds] 'requires a runtime that is not installed' should be added to 'This failure may have been caused by'.

https://github.com/dotnet/cli/blob/22cbfcb49bd9a38292ac6f66a14158b426daefdb/src/dotnet/commands/dotnet-tool/install/LocalizableStrings.resx#L182-L189

Failure context:



/cc @wli3 </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10459</IssueLabelID>
    <Title>dotnet tool aspnet-codegenerator looks for executable at wrong path</Title>
    <Description>_From @tbureck on December 8 2018 23:16_

I'm currently following [this guide](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-2.1&amp;tabs=netcore-cli#scaffold-identity-into-an-empty-project) in order to scaffold Identity in my existing ASP.NET Core project. When trying to run the scaffolder command with the help option though I'm getting this error message:



_Copied from original issue: aspnet/Scaffolding#932_</Description>
    <Title_Description>dotnet tool aspnet-codegenerator looks for executable at wrong path _From @tbureck on December 8 2018 23:16_

I'm currently following [this guide](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-2.1&amp;tabs=netcore-cli#scaffold-identity-into-an-empty-project) in order to scaffold Identity in my existing ASP.NET Core project. When trying to run the scaffolder command with the help option though I'm getting this error message:



_Copied from original issue: aspnet/Scaffolding#932_</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10458</IssueLabelID>
    <Title>Adding dotnet tool from custom source doesn't work on Ubuntu</Title>
    <Description>## Steps to reproduce
Try installing the following tool from myget pre-release source:

This is an Azure hosted Ubuntu-16.04 environment.

I am only having this problem on Ubuntu 16.04 otherwise it works on macOS Mojave and Windows 10 as expected.</Description>
    <Title_Description>Adding dotnet tool from custom source doesn't work on Ubuntu ## Steps to reproduce
Try installing the following tool from myget pre-release source:

This is an Azure hosted Ubuntu-16.04 environment.

I am only having this problem on Ubuntu 16.04 otherwise it works on macOS Mojave and Windows 10 as expected.</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10446</IssueLabelID>
    <Title>`dotnet new tool-manifest` will put dotnet-tools.json under .config folder</Title>
    <Description>Open this issue for feedback. We hope to use the convention of  folder to avoid the clutter of config file under the repo root. Start from local tools manifest</Description>
    <Title_Description> folder to avoid the clutter of config file under the repo root. Start from local tools manifest</Title_Description>
    <Label>waiting-on-feedback</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10445</IssueLabelID>
    <Title>Incorrect binding redirect in net471 project with .net core 3 sdk</Title>
    <Description>Hello friends

I'm having an odd issue with our existing projects that are targeting net 471. After installing the .net core 3 preview binding redirects are generated differently causing runtime exceptions. What's more setting the sdk version in global.json does not seem to fix the issue only uninstalling the v3 sdk does the trick. (this seems very strange to me btw almost to the point that i think i've done something wrong)

One webapp that is using signalR on full framework produces this .config snippet without .net core 3 sdk



i can supply binlog files if it would be helpful but our solution is fairly large so i might have to send them directly to someone

I was just wondering if anyone else has seen something like this. if i set the binding redirects manually to the correct versions everything works it's just the auto generated ones that seem fail. These project uses the new format.</Description>
    <Title_Description>Incorrect binding redirect in net471 project with .net core 3 sdk Hello friends

I'm having an odd issue with our existing projects that are targeting net 471. After installing the .net core 3 preview binding redirects are generated differently causing runtime exceptions. What's more setting the sdk version in global.json does not seem to fix the issue only uninstalling the v3 sdk does the trick. (this seems very strange to me btw almost to the point that i think i've done something wrong)

One webapp that is using signalR on full framework produces this .config snippet without .net core 3 sdk



i can supply binlog files if it would be helpful but our solution is fairly large so i might have to send them directly to someone

I was just wondering if anyone else has seen something like this. if i set the binding redirects manually to the correct versions everything works it's just the auto generated ones that seem fail. These project uses the new format.</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10442</IssueLabelID>
    <Title>Use finalized runtime pack format</Title>
    <Description>SDK work:

- [x] Resolve runtime pack assets from 
  - [x] Add runtime list - https://github.com/aspnet/AspNetCore/issues/10216
  - [x] Add platform manifest - https://github.com/aspnet/AspNetCore/issues/10474

</Description>
    <Title_Description>Use finalized runtime pack format SDK work:

- [x] Resolve runtime pack assets from 
  - [x] Add runtime list - https://github.com/aspnet/AspNetCore/issues/10216
  - [x] Add platform manifest - https://github.com/aspnet/AspNetCore/issues/10474

</Title_Description>
    <Label>Blocked</Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10440</IssueLabelID>
    <Title>Switching to using PackageDownload to acquire targeting and runtime packs</Title>
    <Description>Depends on https://github.com/NuGet/Home/issues/7339</Description>
    <Title_Description>Switching to using PackageDownload to acquire targeting and runtime packs Depends on https://github.com/NuGet/Home/issues/7339</Title_Description>
    <Label>Blocked</Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10438</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>5/12/2018 12:01:18 PM +00:00</CreatedAt>
    <ClosedAt>17/12/2018 4:32:44 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10436</IssueLabelID>
    <Title>Remove test for scenario which is better covered elsewhere</Title>
    <Description>The GivenFrameworkDependentApps and GivenSelfContainedAppsRollForward tests do a better job of covering this scenario</Description>
    <Title_Description>Remove test for scenario which is better covered elsewhere The GivenFrameworkDependentApps and GivenSelfContainedAppsRollForward tests do a better job of covering this scenario</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>5/12/2018 12:18:31 AM +00:00</CreatedAt>
    <ClosedAt>5/12/2018 5:09:24 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10435</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>5/12/2018 12:00:58 AM +00:00</CreatedAt>
    <ClosedAt>6/12/2018 8:51:59 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10434</IssueLabelID>
    <Title>Insert NuGet Build 4.9.2-rtm.5706 into cli</Title>
    <Description>Insert NuGet Build 4.9.2-rtm.5706 into cli release/2.1.502 branch</Description>
    <Title_Description>Insert NuGet Build 4.9.2-rtm.5706 into cli Insert NuGet Build 4.9.2-rtm.5706 into cli release/2.1.502 branch</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>4/12/2018 7:01:58 PM +00:00</CreatedAt>
    <ClosedAt>5/12/2018 12:19:09 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10433</IssueLabelID>
    <Title>Insert NuGet Build 4.9.2-rtm.5706 into cli</Title>
    <Description>Insert NuGet Build 4.9.2-rtm.5706 into cli release/2.2.1xx branch</Description>
    <Title_Description>Insert NuGet Build 4.9.2-rtm.5706 into cli Insert NuGet Build 4.9.2-rtm.5706 into cli release/2.2.1xx branch</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>4/12/2018 7:01:44 PM +00:00</CreatedAt>
    <ClosedAt>5/12/2018 12:18:14 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10432</IssueLabelID>
    <Title>dotnet tool run is too verbose</Title>
    <Description>One of the most common operations with tools is to run them from the command line so I think it's important that the experience of doing that is good. Global tools are run as either  and this should be no different.</Description>
    <Title_Description>dotnet tool run is too verbose One of the most common operations with tools is to run them from the command line so I think it's important that the experience of doing that is good. Global tools are run as either  and this should be no different.</Title_Description>
    <Label>
    </Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10428</IssueLabelID>
    <Title>dotnet list reference help text and output</Title>
    <Description>## Steps to reproduce
1. 



</Description>
    <Title_Description>dotnet list reference help text and output ## Steps to reproduce
1. 



</Title_Description>
    <Label>good first issue</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10427</IssueLabelID>
    <Title>dotnet sln add: Support flag to disable solution folder creation</Title>
    <Description>## Steps to reproduce
Use 





</Description>
    <Title_Description>dotnet sln add: Support flag to disable solution folder creation ## Steps to reproduce
Use 





</Title_Description>
    <Label>good first issue</Label>
    <CreatedAt>4/12/2018 2:59:38 AM +00:00</CreatedAt>
    <ClosedAt>27/03/2019 11:55:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10426</IssueLabelID>
    <Title>dotnet tool list --local</Title>
    <Description>There are several renames please review by commit.

</Description>
    <Title_Description>dotnet tool list --local There are several renames please review by commit.

</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10418</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>30/11/2018 11:23:42 PM +00:00</CreatedAt>
    <ClosedAt>5/12/2018 12:21:58 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10416</IssueLabelID>
    <Title>Merge release/2.2.2xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to master 
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>30/11/2018 7:20:16 PM +00:00</CreatedAt>
    <ClosedAt>19/01/2019 11:29:40 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10414</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/11/2018 11:29:20 PM +00:00</CreatedAt>
    <ClosedAt>30/11/2018 5:22:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10413</IssueLabelID>
    <Title>Merge release/2.2.2xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to master 
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/11/2018 7:01:04 PM +00:00</CreatedAt>
    <ClosedAt>30/11/2018 5:11:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10412</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/11/2018 7:01:00 PM +00:00</CreatedAt>
    <ClosedAt>29/11/2018 8:19:05 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10409</IssueLabelID>
    <Title>Fix build status badge to point at dnceng.</Title>
    <Description>This fixes the build status badge to point at dnceng which is where the
rolling builds are currently.

skip ci please
</Description>
    <Title_Description>Fix build status badge to point at dnceng. This fixes the build status badge to point at dnceng which is where the
rolling builds are currently.

skip ci please
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>29/11/2018 12:54:25 AM +00:00</CreatedAt>
    <ClosedAt>29/11/2018 6:59:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10408</IssueLabelID>
    <Title>Bump SDK package to `3.0.100-preview.18578.2`.</Title>
    <Description>This commit bumps the SDK package to .</Description>
    <Title_Description>Bump SDK package to .</Title_Description>
    <Label>release blocking</Label>
    <CreatedAt>28/11/2018 11:10:14 PM +00:00</CreatedAt>
    <ClosedAt>29/11/2018 12:00:34 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10407</IssueLabelID>
    <Title>Remove query NuGetGlobalPackagesFolder during command resolve</Title>
    <Description>Before this change cache store a relative path to NuGet Global Packages Folder and resolver will query that location and construct the full path. Later we realize the query to get the path is too slow and it showed up in the performance profile.

The decision is to remove this indirection. This will cause the following case. If repo A override nuget global packages folder location say to its root directory and it has a local tool L. Repo B also has the same local tool L. If A restored first when running the tool L in Repo B will run the dll from A’s root directory. However since local tools pin down package id and package version the dll should be the same.
This changed cache scheme. If you restore local tools before please delete your old cache folder. At $HOME/.dotnet/toolResolverCache or %USERPROFILE%\.dotnet\toolResolverCache

Move NuGetGlobalPackagesFolder to test helper
</Description>
    <Title_Description>Remove query NuGetGlobalPackagesFolder during command resolve Before this change cache store a relative path to NuGet Global Packages Folder and resolver will query that location and construct the full path. Later we realize the query to get the path is too slow and it showed up in the performance profile.

The decision is to remove this indirection. This will cause the following case. If repo A override nuget global packages folder location say to its root directory and it has a local tool L. Repo B also has the same local tool L. If A restored first when running the tool L in Repo B will run the dll from A’s root directory. However since local tools pin down package id and package version the dll should be the same.
This changed cache scheme. If you restore local tools before please delete your old cache folder. At $HOME/.dotnet/toolResolverCache or %USERPROFILE%\.dotnet\toolResolverCache

Move NuGetGlobalPackagesFolder to test helper
</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10405</IssueLabelID>
    <Title>Support Nano Server and non-Windows OSes for apphost customization</Title>
    <Description>## Steps to reproduce

On Windows with Docker for Windows installed that has been configured to use "Windows Containers":

1. 





</Description>
    <Title_Description>Support Nano Server and non-Windows OSes for apphost customization ## Steps to reproduce

On Windows with Docker for Windows installed that has been configured to use "Windows Containers":

1. 





</Title_Description>
    <Label>enhancement</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>28/11/2018 9:00:45 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10404</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>28/11/2018 7:01:47 PM +00:00</CreatedAt>
    <ClosedAt>29/11/2018 1:07:50 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10399</IssueLabelID>
    <Title>dotnet new console failing with System.ArgumentNullException using a custom coreclr</Title>
    <Description>## Steps to reproduce

1. Use dotnet-install.ps1 to pull down the latest concurrent dotnet
2. Pull down dotnet/coreclr
3. build.cmd release x64 skiptests
4. Copy coreclr.dll clrjit.dll mscordaccore.dll mscordbi.dll sos.dll sos.NETCore.dll clretwrc.dll System.Private.CoreLib.dll mscorrc.debug.dll and mscorrc.dll into the shared framework of the dotnet install you got in step 1.
5. run dotnet.exe new console

## Expected  behavior

dotnet creates a hello world cs file and csproj

## Actual behavior
Dotnet fails with the following output:



This failing both for one of our perf scenarios and for our PGO and IBC data collection jobs and has been failing since Nov 24 2018 7:00 AM</Description>
    <Title_Description>dotnet new console failing with System.ArgumentNullException using a custom coreclr ## Steps to reproduce

1. Use dotnet-install.ps1 to pull down the latest concurrent dotnet
2. Pull down dotnet/coreclr
3. build.cmd release x64 skiptests
4. Copy coreclr.dll clrjit.dll mscordaccore.dll mscordbi.dll sos.dll sos.NETCore.dll clretwrc.dll System.Private.CoreLib.dll mscorrc.debug.dll and mscorrc.dll into the shared framework of the dotnet install you got in step 1.
5. run dotnet.exe new console

## Expected  behavior

dotnet creates a hello world cs file and csproj

## Actual behavior
Dotnet fails with the following output:



This failing both for one of our perf scenarios and for our PGO and IBC data collection jobs and has been failing since Nov 24 2018 7:00 AM</Title_Description>
    <Label>Bug</Label>
    <CreatedAt>27/11/2018 10:43:18 PM +00:00</CreatedAt>
    <ClosedAt>29/11/2018 6:25:47 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10396</IssueLabelID>
    <Title>Please increase the time-out for downloads within the dotnet-install.ps1 script from 10 minutes to 30 minutes</Title>
    <Description># Increase in the download time-out limit from 10 to 30 minutes

A few days ago I was trying to set up the source code for MS Build on my machine so I could play with it but the build process for setting up the code on my machine kept failing. I finally figured that one of the problems why it was failing was that it was running a Powershell script named 

For details of the issue please read [this comment](https://github.com/Microsoft/msbuild/issues/3937#issuecomment-442037965) of mine in this issue in the MS Build repo.</Description>
    <Title_Description>Please increase the time-out for downloads within the dotnet-install.ps1 script from 10 minutes to 30 minutes # Increase in the download time-out limit from 10 to 30 minutes

A few days ago I was trying to set up the source code for MS Build on my machine so I could play with it but the build process for setting up the code on my machine kept failing. I finally figured that one of the problems why it was failing was that it was running a Powershell script named 

For details of the issue please read [this comment](https://github.com/Microsoft/msbuild/issues/3937#issuecomment-442037965) of mine in this issue in the MS Build repo.</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10395</IssueLabelID>
    <Title>User facing string for local tools install/uninstall</Title>
    <Description>All string changes</Description>
    <Title_Description>User facing string for local tools install/uninstall All string changes</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10394</IssueLabelID>
    <Title>Unhandled exception returned if run web application with sdk 3.0.100-preview-009784</Title>
    <Description>## Steps to reproduce
1. Install sdk 3.0.100-preview-009784
2. dotnet new mvc /web /webapi
3. dotnet run

## Expected  behavior
Dotnet run for mvc web and webap works well

## Actual behavior
It returns Unhandled Exception: System.ArgumentException: Value cannot be null or an empty string.
_nicole@ubu16-27:~/mywebapi$ dotnet run
Unhandled Exception: System.ArgumentException: Value cannot be null or an empty string.
Parameter name: userSecretId
at Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute..ctor(String userSecretId)
at System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule pModule RuntimeType type IRuntimeMethodInfo pCtor Byte** ppBlob Byte* pEndBlob Int32* pcNamedArgs)
at System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule module RuntimeType type IRuntimeMethodInfo ctor IntPtr&amp; blob IntPtr blobEnd Int32&amp; namedArgs)
at System.Reflection.CustomAttribute.AddCustomAttributes(ListBuilder1&amp; attributes RuntimeModule decoratedModule Int32 decoratedMetadataToken RuntimeType attributeFilterType Boolean mustBeInheritable ListBuilder1&amp; derivedAttributes)
at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeModule decoratedModule Int32 decoratedMetadataToken Int32 pcaCount RuntimeType attributeFilterType)
at System.Attribute.GetCustomAttributes(Assembly element Type attributeType Boolean inherit)
at System.Attribute.GetCustomAttribute(Assembly element Type attributeType Boolean inherit)
at System.Reflection.CustomAttributeExtensions.GetCustomAttribute[T](Assembly element)
at Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(IConfigurationBuilder configuration Assembly assembly Boolean optional Boolean reloadOnChange)
at Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(IConfigurationBuilder configuration Assembly assembly Boolean optional)
at Microsoft.AspNetCore.WebHost.&lt;&gt;c__DisplayClass8_0.b__0(WebHostBuilderContext hostingContext IConfigurationBuilder config)
at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException&amp; hostingStartupErrors)
at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()
at mywebapi.Program.Main(String[] args) in /home/nicole/mywebapi/Program.cs:line 17_

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
Version: 3.0.100-preview-009784
Commit: d86a1816c4
Runtime Environment:
OS Name: ubuntu
OS Version: 16.04
OS Platform: Linux
RID: ubuntu.16.04-x64
Base Path: /usr/share/dotnet/sdk/3.0.100-preview-009784/
Host (useful for support):
Version: 3.0.0-preview-27122-01
Commit: 00c5c8bc40
.NET Core SDKs installed:
3.0.100-preview-009784 [/usr/share/dotnet/sdk]
.NET Core runtimes installed:
Microsoft.AspNetCore.App 3.0.0-preview-18572-0018 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
Microsoft.NETCore.App 3.0.0-preview-27122-01 [/usr/share/dotnet/shared/Microsoft.NETCore.App]
To install additional .NET Core runtimes or SDKs:
https://aka.ms/dotnet-download





</Description>
    <Title_Description>Unhandled exception returned if run web application with sdk 3.0.100-preview-009784 ## Steps to reproduce
1. Install sdk 3.0.100-preview-009784
2. dotnet new mvc /web /webapi
3. dotnet run

## Expected  behavior
Dotnet run for mvc web and webap works well

## Actual behavior
It returns Unhandled Exception: System.ArgumentException: Value cannot be null or an empty string.
_nicole@ubu16-27:~/mywebapi$ dotnet run
Unhandled Exception: System.ArgumentException: Value cannot be null or an empty string.
Parameter name: userSecretId
at Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute..ctor(String userSecretId)
at System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule pModule RuntimeType type IRuntimeMethodInfo pCtor Byte** ppBlob Byte* pEndBlob Int32* pcNamedArgs)
at System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule module RuntimeType type IRuntimeMethodInfo ctor IntPtr&amp; blob IntPtr blobEnd Int32&amp; namedArgs)
at System.Reflection.CustomAttribute.AddCustomAttributes(ListBuilder1&amp; attributes RuntimeModule decoratedModule Int32 decoratedMetadataToken RuntimeType attributeFilterType Boolean mustBeInheritable ListBuilder1&amp; derivedAttributes)
at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeModule decoratedModule Int32 decoratedMetadataToken Int32 pcaCount RuntimeType attributeFilterType)
at System.Attribute.GetCustomAttributes(Assembly element Type attributeType Boolean inherit)
at System.Attribute.GetCustomAttribute(Assembly element Type attributeType Boolean inherit)
at System.Reflection.CustomAttributeExtensions.GetCustomAttribute[T](Assembly element)
at Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(IConfigurationBuilder configuration Assembly assembly Boolean optional Boolean reloadOnChange)
at Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(IConfigurationBuilder configuration Assembly assembly Boolean optional)
at Microsoft.AspNetCore.WebHost.&lt;&gt;c__DisplayClass8_0.b__0(WebHostBuilderContext hostingContext IConfigurationBuilder config)
at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException&amp; hostingStartupErrors)
at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()
at mywebapi.Program.Main(String[] args) in /home/nicole/mywebapi/Program.cs:line 17_

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
Version: 3.0.100-preview-009784
Commit: d86a1816c4
Runtime Environment:
OS Name: ubuntu
OS Version: 16.04
OS Platform: Linux
RID: ubuntu.16.04-x64
Base Path: /usr/share/dotnet/sdk/3.0.100-preview-009784/
Host (useful for support):
Version: 3.0.0-preview-27122-01
Commit: 00c5c8bc40
.NET Core SDKs installed:
3.0.100-preview-009784 [/usr/share/dotnet/sdk]
.NET Core runtimes installed:
Microsoft.AspNetCore.App 3.0.0-preview-18572-0018 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
Microsoft.NETCore.App 3.0.0-preview-27122-01 [/usr/share/dotnet/shared/Microsoft.NETCore.App]
To install additional .NET Core runtimes or SDKs:
https://aka.ms/dotnet-download





</Title_Description>
    <Label>
    </Label>
    <Assignee>natemcmaster</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10393</IssueLabelID>
    <Title>Put https://aka.ms/discover-dotnet-tools in help</Title>
    <Description>And update the linked site to a better page when the index of _PackageType_ is available</Description>
    <Title_Description>Put https://aka.ms/discover-dotnet-tools in help And update the linked site to a better page when the index of _PackageType_ is available</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10392</IssueLabelID>
    <Title>Fix no restore command error message</Title>
    <Description>It should show _Run "dotnet tool restore" to make the "dotnetsay" command available._ instead of _Cannot find a command with command name 'dotnetsay'_ when there is no restore.

Root cause a case forget to test</Description>
    <Title_Description>Fix no restore command error message It should show _Run "dotnet tool restore" to make the "dotnetsay" command available._ instead of _Cannot find a command with command name 'dotnetsay'_ when there is no restore.

Root cause a case forget to test</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10391</IssueLabelID>
    <Title>Point user to `dotnet tool restore` when the command is in manifest but lacking restore</Title>
    <Description>
    </Description>
    <Title_Description>Point user to  when the command is in manifest but lacking restore </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10382</IssueLabelID>
    <Title>dotnet tool update does not work when only pre-releases are available</Title>
    <Description>## Steps to reproduce

(At the time of writing.)

- </Description>
    <Title_Description>dotnet tool update does not work when only pre-releases are available ## Steps to reproduce

(At the time of writing.)

- </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10375</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/11/2018 12:01:02 AM +00:00</CreatedAt>
    <ClosedAt>29/11/2018 6:26:56 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10374</IssueLabelID>
    <Title>Could not restore manifest file with markOfTheWeb</Title>
    <Description>
    </Description>
    <Title_Description>Could not restore manifest file with markOfTheWeb </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10373</IssueLabelID>
    <Title>Updating the release/2.2.2xx README</Title>
    <Description>Updating "release/2.2.1xx" to "release/2.2.2xx"
</Description>
    <Title_Description>Updating the release/2.2.2xx README Updating "release/2.2.1xx" to "release/2.2.2xx"
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10370</IssueLabelID>
    <Title>update dotnet-new-nunit dependency version</Title>
    <Description>Update dotnet-new-nunit dependency version to latest 1.6.0 (requested in https://github.com/nunit/dotnet-new-nunit/issues/18)
</Description>
    <Title_Description>update dotnet-new-nunit dependency version Update dotnet-new-nunit dependency version to latest 1.6.0 (requested in https://github.com/nunit/dotnet-new-nunit/issues/18)
</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>20/11/2018 1:46:30 PM +00:00</CreatedAt>
    <ClosedAt>21/11/2018 10:12:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10366</IssueLabelID>
    <Title>Bump SDK package to `3.0.100-preview.18569.3`.</Title>
    <Description>Bumping SDK package to .</Description>
    <Title_Description>Bump SDK package to .</Title_Description>
    <Label>release blocking</Label>
    <CreatedAt>20/11/2018 4:21:16 AM +00:00</CreatedAt>
    <ClosedAt>20/11/2018 7:05:04 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10364</IssueLabelID>
    <Title>Remove flag `DOTNET_SKIP_FIRST_TIME_EXPERIENCE`</Title>
    <Description>Since LZMA cache expansion is no longer needed. The only thing .</Description>
    <Title_Description>Remove flag .</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10363</IssueLabelID>
    <Title>.NET Core SDK 3.0 breaks Azure Functions SDK build</Title>
    <Description>## Steps to reproduce

1. Install a recent .NET Core 3.0 SDK.
2. Install the [Azure Functions core tools](https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local).
3. Run 






</Description>
    <Title_Description>.NET Core SDK 3.0 breaks Azure Functions SDK build ## Steps to reproduce

1. Install a recent .NET Core 3.0 SDK.
2. Install the [Azure Functions core tools](https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local).
3. Run 






</Title_Description>
    <Label>Bug</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10353</IssueLabelID>
    <Title>Merge release/2.2.2xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to master 
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/11/2018 12:01:35 PM +00:00</CreatedAt>
    <ClosedAt>29/11/2018 6:30:12 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10352</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/11/2018 12:01:33 PM +00:00</CreatedAt>
    <ClosedAt>28/11/2018 5:11:37 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10350</IssueLabelID>
    <Title>Bump SDK package version to 3.0.100-preview.18565.3.</Title>
    <Description>This commit bumps the SDK package version to .
</Description>
    <Title_Description>Bump SDK package version to 3.0.100-preview.18565.3. This commit bumps the SDK package version to .
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>16/11/2018 12:56:27 AM +00:00</CreatedAt>
    <ClosedAt>16/11/2018 2:07:00 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10349</IssueLabelID>
    <Title>Bump SDK package to 3.0.100-preview.18565.2.</Title>
    <Description>This commit bumps the SDK package to 3.0.100-preview.18565.2.
</Description>
    <Title_Description>Bump SDK package to 3.0.100-preview.18565.2. This commit bumps the SDK package to 3.0.100-preview.18565.2.
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/11/2018 8:19:26 PM +00:00</CreatedAt>
    <ClosedAt>15/11/2018 10:05:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10342</IssueLabelID>
    <Title>Add WindowsForms and WPF property to allowlist</Title>
    <Description>required for https://github.com/dotnet/sdk/pull/2664

since it could only be true false null. do not need to hash but make everything that is not 'true' 'false' '' to false.</Description>
    <Title_Description>Add WindowsForms and WPF property to allowlist required for https://github.com/dotnet/sdk/pull/2664

since it could only be true false null. do not need to hash but make everything that is not 'true' 'false' '' to false.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10341</IssueLabelID>
    <Title>Change local tools invoke to dotnet tool run COMMANDNAME</Title>
    <Description>Since at this point we are not sure what is the "right way" to call local tools
</Description>
    <Title_Description>Change local tools invoke to dotnet tool run COMMANDNAME Since at this point we are not sure what is the "right way" to call local tools
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10340</IssueLabelID>
    <Title>Update the developer guide following changes introduced by Arcade.</Title>
    <Description>The [developer guide](https://github.com/dotnet/cli/blob/master/Documentation/project-docs/developer-guide.md) needs to be updated regarding the new build locations and any additional changes that resulted from migrating the repo to Arcade.






</Description>
    <Title_Description>Update the developer guide following changes introduced by Arcade. The [developer guide](https://github.com/dotnet/cli/blob/master/Documentation/project-docs/developer-guide.md) needs to be updated regarding the new build locations and any additional changes that resulted from migrating the repo to Arcade.






</Title_Description>
    <Label>documentation</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10339</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/11/2018 12:01:36 AM +00:00</CreatedAt>
    <ClosedAt>20/11/2018 10:26:10 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10332</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/11/2018 12:02:00 PM +00:00</CreatedAt>
    <ClosedAt>14/11/2018 8:49:23 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10329</IssueLabelID>
    <Title>dotnet-install.ps1 too verbose</Title>
    <Description>## Steps to reproduce

I see this when cloning and building dotnet/corefx.

It prints:

 output:






</Description>
    <Title_Description>dotnet-install.ps1 too verbose ## Steps to reproduce

I see this when cloning and building dotnet/corefx.

It prints:

 output:






</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10326</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/11/2018 10:07:14 PM +00:00</CreatedAt>
    <ClosedAt>14/11/2018 8:18:22 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10325</IssueLabelID>
    <Title>First run experience flags change</Title>
    <Description>issue https://github.com/dotnet/cli/issues/10322 and https://github.com/dotnet/cli/issues/10323

</Description>
    <Title_Description>First run experience flags change issue https://github.com/dotnet/cli/issues/10322 and https://github.com/dotnet/cli/issues/10323

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10321</IssueLabelID>
    <Title>Adding explicit dependencies to NuGet and NewtonSoft.Json to update-dependencies</Title>
    <Description>Adding explicit dependencies to NuGet and NewtonSoft.Json to update-dependencies project because they are not being brought transitivily through the VersionTools dependency.
</Description>
    <Title_Description>Adding explicit dependencies to NuGet and NewtonSoft.Json to update-dependencies Adding explicit dependencies to NuGet and NewtonSoft.Json to update-dependencies project because they are not being brought transitivily through the VersionTools dependency.
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/11/2018 8:51:04 PM +00:00</CreatedAt>
    <ClosedAt>13/11/2018 9:57:20 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10315</IssueLabelID>
    <Title>Dotnet tool uninstall local</Title>
    <Description>Please review by commit. Need https://github.com/dotnet/cli/pull/10312 in first</Description>
    <Title_Description>Dotnet tool uninstall local Please review by commit. Need https://github.com/dotnet/cli/pull/10312 in first</Title_Description>
    <Label>tool</Label>
    <CreatedAt>12/11/2018 10:05:09 PM +00:00</CreatedAt>
    <ClosedAt>19/11/2018 10:46:03 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10314</IssueLabelID>
    <Title>Clean up publish target logic following copy-local unification.</Title>
    <Description>This is a tracking issue to follow up on the work performed by dotnet/sdk#2646.

There is duplicated work done in the publish targets for calculating files to copy from package dependencies.

Ideally for both build and publish to be identical in the copy-local of assets behavior publish would reuse the same item set that build does for determining which assets to copy local.

Unfortunately there are a few hurdles that stand in the way of this:

* Support for ASP.NET Core 2.0 runtime stores.  The 2.0  on a package reference excludes the package from publishing but not build copy-local.






</Description>
    <Title_Description>Clean up publish target logic following copy-local unification. This is a tracking issue to follow up on the work performed by dotnet/sdk#2646.

There is duplicated work done in the publish targets for calculating files to copy from package dependencies.

Ideally for both build and publish to be identical in the copy-local of assets behavior publish would reuse the same item set that build does for determining which assets to copy local.

Unfortunately there are a few hurdles that stand in the way of this:

* Support for ASP.NET Core 2.0 runtime stores.  The 2.0  on a package reference excludes the package from publishing but not build copy-local.






</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10313</IssueLabelID>
    <Title>user facing string review for dotnet tool --install</Title>
    <Description>
    </Description>
    <Title_Description>user facing string review for dotnet tool --install 




</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10312</IssueLabelID>
    <Title>dotnet tool install local PACKAGEID</Title>
    <Description>fa04f82 and 83394e4 is set up for this change. Since bigger function like ToolPackageInstaller is a model all along . There are little  can share. So I renamed existing ToolInstallCommand to ToolInstallGlobalOrToolPathCommand and make ToolInstallCommand a simple class just to redirect -g or --local.

873dc68 is to implement local install -- download the package add to cache and add to manifest file
</Description>
    <Title_Description>dotnet tool install local PACKAGEID fa04f82 and 83394e4 is set up for this change. Since bigger function like ToolPackageInstaller is a model all along . There are little  can share. So I renamed existing ToolInstallCommand to ToolInstallGlobalOrToolPathCommand and make ToolInstallCommand a simple class just to redirect -g or --local.

873dc68 is to implement local install -- download the package add to cache and add to manifest file
</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10305</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/11/2018 12:01:28 AM +00:00</CreatedAt>
    <ClosedAt>9/11/2018 1:39:29 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10303</IssueLabelID>
    <Title>Adding downloads of 'arm' and 'arm64'</Title>
    <Description>Adding downloads of 'arm' and 'arm64'

Addresses: https://github.com/dotnet/cli/issues/10302</Description>
    <Title_Description>Adding downloads of 'arm' and 'arm64' Adding downloads of 'arm' and 'arm64'

Addresses: https://github.com/dotnet/cli/issues/10302</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10302</IssueLabelID>
    <Title>dotnet-install.ps1 doesn't allow arm/arm64 runtimes to be installed</Title>
    <Description>The diagnostics and dotnet-diagnostictests repo's need to install arm/arm64 runtimes and this prevents it:

Line 166 dotnet-install.ps1:

</Description>
    <Title_Description>dotnet-install.ps1 doesn't allow arm/arm64 runtimes to be installed The diagnostics and dotnet-diagnostictests repo's need to install arm/arm64 runtimes and this prevents it:

Line 166 dotnet-install.ps1:

</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10301</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>8/11/2018 7:07:12 AM +00:00</CreatedAt>
    <ClosedAt>8/11/2018 6:07:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10299</IssueLabelID>
    <Title> Can add entry to tool manifest file</Title>
    <Description>this is an internal API to add entry to tool manifest file

please review by commits since there is a big rename</Description>
    <Title_Description> Can add entry to tool manifest file this is an internal API to add entry to tool manifest file

please review by commits since there is a big rename</Title_Description>
    <Label>tool</Label>
    <CreatedAt>8/11/2018 5:04:13 AM +00:00</CreatedAt>
    <ClosedAt>9/11/2018 2:08:30 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10298</IssueLabelID>
    <Title>Make "dotnet tool install --local" equivalent to "dotnet tool install"</Title>
    <Description>
    </Description>
    <Title_Description>Make "dotnet tool install --local" equivalent to "dotnet tool install" </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10297</IssueLabelID>
    <Title>Multi Targeting with Global Tools</Title>
    <Description>I'm looking for suggestions on how to handle multiple target frameworks. I have a tool that will be inspecting some target assemblies and I want the global tool to be using the same framework as the target assemblies were complied for.

I had tried the following csproj file where I conditionally set the 

But it looks like the ToolCommandName is not evaluated at build time but instead at pack time so in my nuget package the netcoreapp2.1 and netcoreapp2.2 file DotnetToolSettings.xml is setting command name to dotnet-tfm-test-2.2 for both the netcoreapp2.1 and netcoreapp2.2 version.

So far the best plan I have come up with is to create two different projects and publish two separate global tools. 
</Description>
    <Title_Description>Multi Targeting with Global Tools I'm looking for suggestions on how to handle multiple target frameworks. I have a tool that will be inspecting some target assemblies and I want the global tool to be using the same framework as the target assemblies were complied for.

I had tried the following csproj file where I conditionally set the 

But it looks like the ToolCommandName is not evaluated at build time but instead at pack time so in my nuget package the netcoreapp2.1 and netcoreapp2.2 file DotnetToolSettings.xml is setting command name to dotnet-tfm-test-2.2 for both the netcoreapp2.1 and netcoreapp2.2 version.

So far the best plan I have come up with is to create two different projects and publish two separate global tools. 
</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10296</IssueLabelID>
    <Title>Failure to restore MSTest and XUnit projects</Title>
    <Description>## Steps to reproduce
Install latest d16.0 vs build with Net Core workload (no optional components)
Install latest 3.0.x runtime from https://github.com/dotnet/core-sdk
Open developer command prompt
Run dotnet new mstest -n mstest1

## Expected  behavior
The MSTest project builds and restores correctly

## Actual behavior
The project creates but fails to restore properly:
***
The template "Unit Test Project" was created successfully.

Processing post-creation actions...
Running 'dotnet restore' on mstest\mstest.csproj...
  Restoring packages for c:\Users\v-masche\Downloads\mstest\mstest.csproj...
c:\Users\v-masche\Downloads\mstest\mstest.csproj : error NU1103: Unable to find a stable package Microsoft.NETCore.App with version (&gt;= 2.2.0)
c:\Users\v-masche\Downloads\mstest\mstest.csproj : error NU1103:   - Found 816 version(s) in https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json [ Nearest version: 3.0.0-alphautf8string-26831-02 ]
c:\Users\v-masche\Downloads\mstest\mstest.csproj : error NU1103:   - Found 46 version(s) in nuget.org [ Nearest version: 2.2.0-preview3-27014-02 ]
c:\Users\v-masche\Downloads\mstest\mstest.csproj : error NU1103:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages
  Generating MSBuild file c:\Users\v-masche\Downloads\mstest\obj\mstest.csproj.nuget.g.props.
  Generating MSBuild file c:\Users\v-masche\Downloads\mstest\obj\mstest.csproj.nuget.g.targets.
  Restore failed in 2.04 sec for c:\Users\v-masche\Downloads\mstest\mstest.csproj.

Restore failed.
Post action failed.
Description: Restore NuGet packages required by this project.
Manual instructions: Run 'dotnet restore'
***

Manually running "dotnet restore" fails. XUnit projects fail with a similar error but NUnit projects work correctly.

## Environment data
 output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview-009736
 Commit:    d273cdc5af

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview-009736\

Host (useful for support):
  Version: 3.0.0-preview-27106-02
  Commit:  410cba8501

.NET Core SDKs installed:
  2.1.500-preview-009398 [C:\Program Files\dotnet\sdk]
  3.0.100-preview-009736 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 3.0.0-alpha1-10663 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-alpha1-10663 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.DesktopUI.App 3.0.0-alpha-27106-4 [C:\Program Files\dotnet\shared\Microsoft.DesktopUI.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27106-02 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download




</Description>
    <Title_Description>Failure to restore MSTest and XUnit projects ## Steps to reproduce
Install latest d16.0 vs build with Net Core workload (no optional components)
Install latest 3.0.x runtime from https://github.com/dotnet/core-sdk
Open developer command prompt
Run dotnet new mstest -n mstest1

## Expected  behavior
The MSTest project builds and restores correctly

## Actual behavior
The project creates but fails to restore properly:
***
The template "Unit Test Project" was created successfully.

Processing post-creation actions...
Running 'dotnet restore' on mstest\mstest.csproj...
  Restoring packages for c:\Users\v-masche\Downloads\mstest\mstest.csproj...
c:\Users\v-masche\Downloads\mstest\mstest.csproj : error NU1103: Unable to find a stable package Microsoft.NETCore.App with version (&gt;= 2.2.0)
c:\Users\v-masche\Downloads\mstest\mstest.csproj : error NU1103:   - Found 816 version(s) in https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json [ Nearest version: 3.0.0-alphautf8string-26831-02 ]
c:\Users\v-masche\Downloads\mstest\mstest.csproj : error NU1103:   - Found 46 version(s) in nuget.org [ Nearest version: 2.2.0-preview3-27014-02 ]
c:\Users\v-masche\Downloads\mstest\mstest.csproj : error NU1103:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages
  Generating MSBuild file c:\Users\v-masche\Downloads\mstest\obj\mstest.csproj.nuget.g.props.
  Generating MSBuild file c:\Users\v-masche\Downloads\mstest\obj\mstest.csproj.nuget.g.targets.
  Restore failed in 2.04 sec for c:\Users\v-masche\Downloads\mstest\mstest.csproj.

Restore failed.
Post action failed.
Description: Restore NuGet packages required by this project.
Manual instructions: Run 'dotnet restore'
***

Manually running "dotnet restore" fails. XUnit projects fail with a similar error but NUnit projects work correctly.

## Environment data
 output:

.NET Core SDK (reflecting any global.json):
 Version:   3.0.100-preview-009736
 Commit:    d273cdc5af

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.0.100-preview-009736\

Host (useful for support):
  Version: 3.0.0-preview-27106-02
  Commit:  410cba8501

.NET Core SDKs installed:
  2.1.500-preview-009398 [C:\Program Files\dotnet\sdk]
  3.0.100-preview-009736 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 3.0.0-alpha1-10663 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.0.0-alpha1-10663 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.DesktopUI.App 3.0.0-alpha-27106-4 [C:\Program Files\dotnet\shared\Microsoft.DesktopUI.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.0.0-preview-27106-02 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download




</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10293</IssueLabelID>
    <Title>dotnet-install.ps1 doesn't work with relative path when installing from file system</Title>
    <Description>## Steps to reproduce
1. Download .NET Core Runtime binaries.
2. Put the binaries into ./Runtime/&lt;version&gt; directory
3. Try to install using dotnet-install.ps1:
 for relative paths.





</Description>
    <Title_Description>dotnet-install.ps1 doesn't work with relative path when installing from file system ## Steps to reproduce
1. Download .NET Core Runtime binaries.
2. Put the binaries into ./Runtime/&lt;version&gt; directory
3. Try to install using dotnet-install.ps1:
 for relative paths.





</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10291</IssueLabelID>
    <Title>dotnet run fails on ARM64</Title>
    <Description>dotnet run doesn't work for me on Linux ARM64. 

/cc @livarcocc @RussKeldorph 


</Description>
    <Title_Description>dotnet run fails on ARM64 dotnet run doesn't work for me on Linux ARM64. 

/cc @livarcocc @RussKeldorph 


</Title_Description>
    <Label>Arm64</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10289</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>7/11/2018 12:01:30 AM +00:00</CreatedAt>
    <ClosedAt>7/11/2018 10:03:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10288</IssueLabelID>
    <Title>Local Tools Early Preview Documentation</Title>
    <Description># Local Tools Early Preview Documentation

**This document is for checkin build of dotnet SDK. The feature is still work in progress. We hope to gather more feedback especially on user experience by this documentation**. If you think the experience need improvement you can file issues at [Github](https://github.com/dotnet/cli/issues)

## Motivation

Enable high cohesion between tools and corresponding code repositories. The repository maintainer could check-in a list of dotnet tools with certain version. And other contributor can use these tools within the repository with certain gestures. Local tools use the same package as global tools.

## Walk through

### Install the latest dotnet SDK "checkin build"

1. You can find the installer at [here](https://github.com/dotnet/core-sdk#installers-and-binaries) under the _Master (3.0.x Runtime)_ column.
2. Most of the existing dotnet tools package(global tools) are targeting runtime netcoreapp2.1. You need to install it in order to run the existing command. You can find it at [here](https://www.microsoft.com/net/download/dotnet-core/2.1) under _Run apps - Runtime_ column.

### Create tool manifest file

Run 

Repository maintainer: A dotnet tool consumer. Programmers have the write access to the repository and decide which dotnet tools should be used in this repository.

Repository contributor: A dotnet tool consumer. Programmers have the read access to the repository and use dotnet tools decided by repository maintainer.

Local tools restore: Restore all tools that is possible to be accessed by current directory and generate cache.

Resolver cache: Technical not customer facing. Cache to speed up the local tool resolution.</Description>
    <Title_Description>Local Tools Early Preview Documentation # Local Tools Early Preview Documentation

**This document is for checkin build of dotnet SDK. The feature is still work in progress. We hope to gather more feedback especially on user experience by this documentation**. If you think the experience need improvement you can file issues at [Github](https://github.com/dotnet/cli/issues)

## Motivation

Enable high cohesion between tools and corresponding code repositories. The repository maintainer could check-in a list of dotnet tools with certain version. And other contributor can use these tools within the repository with certain gestures. Local tools use the same package as global tools.

## Walk through

### Install the latest dotnet SDK "checkin build"

1. You can find the installer at [here](https://github.com/dotnet/core-sdk#installers-and-binaries) under the _Master (3.0.x Runtime)_ column.
2. Most of the existing dotnet tools package(global tools) are targeting runtime netcoreapp2.1. You need to install it in order to run the existing command. You can find it at [here](https://www.microsoft.com/net/download/dotnet-core/2.1) under _Run apps - Runtime_ column.

### Create tool manifest file

Run 

Repository maintainer: A dotnet tool consumer. Programmers have the write access to the repository and decide which dotnet tools should be used in this repository.

Repository contributor: A dotnet tool consumer. Programmers have the read access to the repository and use dotnet tools decided by repository maintainer.

Local tools restore: Restore all tools that is possible to be accessed by current directory and generate cache.

Resolver cache: Technical not customer facing. Cache to speed up the local tool resolution.</Title_Description>
    <Label>Pending discussion</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10287</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>6/11/2018 12:01:31 PM +00:00</CreatedAt>
    <ClosedAt>6/11/2018 8:18:35 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10281</IssueLabelID>
    <Title>dotnet-install.sh download progress with wget is super verbose</Title>
    <Description>## Steps to reproduce

Download https://dot.net/v1/dotnet-install.sh and run it. I'm running on an arm32 cross-build Docker container: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-e435274-20180426002420.

Log of Jenkins job that is using this:
https://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_corefx_baseline/36/consoleFull#-1957045196a82fefab-f698-416f-8fca-58544c94cd4e

I see 3200 lines of progress output like:
 output:

</Description>
    <Title_Description>dotnet-install.sh download progress with wget is super verbose ## Steps to reproduce

Download https://dot.net/v1/dotnet-install.sh and run it. I'm running on an arm32 cross-build Docker container: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-e435274-20180426002420.

Log of Jenkins job that is using this:
https://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_corefx_baseline/36/consoleFull#-1957045196a82fefab-f698-416f-8fca-58544c94cd4e

I see 3200 lines of progress output like:
 output:

</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10278</IssueLabelID>
    <Title>Clean up boilerplate in csproj files</Title>
    <Description>Most csproj files in the repo have this:




There's some things which look outdated. We should remove anything unnecessary.
* Do we need the ancient platforms in AssetTargetFallback still?
* Assembly name is the default project file name anyway
* GenerateRuntimeConfigurationFiles=true should be defaulted appropriately as well
* Strong name signing works x-plat now.

And for whatever is common and necessary (strong name key id at least) it should be moved to Directory.Build.props instead of repeated in every project.




</Description>
    <Title_Description>Clean up boilerplate in csproj files Most csproj files in the repo have this:




There's some things which look outdated. We should remove anything unnecessary.
* Do we need the ancient platforms in AssetTargetFallback still?
* Assembly name is the default project file name anyway
* GenerateRuntimeConfigurationFiles=true should be defaulted appropriately as well
* Strong name signing works x-plat now.

And for whatever is common and necessary (strong name key id at least) it should be moved to Directory.Build.props instead of repeated in every project.




</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>5/11/2018 7:29:25 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10276</IssueLabelID>
    <Title>Can't build F# projects with apphosts on Windows</Title>
    <Description>## Steps to reproduce

On __Windows__:

1. 


</Description>
    <Title_Description>Can't build F# projects with apphosts on Windows ## Steps to reproduce

On __Windows__:

1. 


</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10275</IssueLabelID>
    <Title>Merge release/2.2.2xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to master 
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>3/11/2018 12:01:11 PM +00:00</CreatedAt>
    <ClosedAt>16/11/2018 4:40:12 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10274</IssueLabelID>
    <Title>Re-enable Fedora 27 CI leg</Title>
    <Description>Fedora 27 is failing with the move to arcade with the following:



Not clear to me why but I don't want to keep blocking the arcade move on this.






</Description>
    <Title_Description>Re-enable Fedora 27 CI leg Fedora 27 is failing with the move to arcade with the following:



Not clear to me why but I don't want to keep blocking the arcade move on this.






</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10267</IssueLabelID>
    <Title>Turn the CI flag back on on arcade</Title>
    <Description>As part of the move to arcade we should use the CI flag. I had to turn it off though because I ran into a bunch of issues regarding csc and roslyn assembly version when building the test assets.

This happens because the test assets are being built as part of the main build using MSBuild but they are not using the arcade SDK this causes task versions to conflict.

The fix here is to move all test asset production within the tests themselves but CLI has quite a bit so I prefer to break it up.</Description>
    <Title_Description>Turn the CI flag back on on arcade As part of the move to arcade we should use the CI flag. I had to turn it off though because I ran into a bunch of issues regarding csc and roslyn assembly version when building the test assets.

This happens because the test assets are being built as part of the main build using MSBuild but they are not using the arcade SDK this causes task versions to conflict.

The fix here is to move all test asset production within the tests themselves but CLI has quite a bit so I prefer to break it up.</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10253</IssueLabelID>
    <Title>dotnet-install.sh not downloading latest sdk</Title>
    <Description>_From @piquet-h on Wednesday 24 October 2018 21:44:20_

Copying issue from https://github.com/aspnet/Docs/issues/9193 - suggested I raise it here. 


But if I download and install on Windows manually rather than scripted on Linux it works.

_Copied from original issue: aspnet/AspNetCore#3716_</Description>
    <Title_Description>dotnet-install.sh not downloading latest sdk _From @piquet-h on Wednesday 24 October 2018 21:44:20_

Copying issue from https://github.com/aspnet/Docs/issues/9193 - suggested I raise it here. 


But if I download and install on Windows manually rather than scripted on Linux it works.

_Copied from original issue: aspnet/AspNetCore#3716_</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10249</IssueLabelID>
    <Title>Dotnet tool restore in parallel</Title>
    <Description>Need https://github.com/dotnet/cli/pull/10246 get in first due to merge conflict

Make dotnet tool restore run in parallel so I will be faster when there are multiple tools</Description>
    <Title_Description>Dotnet tool restore in parallel Need https://github.com/dotnet/cli/pull/10246 get in first due to merge conflict

Make dotnet tool restore run in parallel so I will be faster when there are multiple tools</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10246</IssueLabelID>
    <Title>NuGet prob nuget.config should start from the directory of the manifest file</Title>
    <Description>The production change is rather small. However nuget prob nuget config
and CLI prob manifest file is quite complex problem logic and it is even
worse when 2 are combined. The bug caused by it would be very nasty as
in the test’s scenario. So I added infrastructure to simulate this situation.
</Description>
    <Title_Description>NuGet prob nuget.config should start from the directory of the manifest file The production change is rather small. However nuget prob nuget config
and CLI prob manifest file is quite complex problem logic and it is even
worse when 2 are combined. The bug caused by it would be very nasty as
in the test’s scenario. So I added infrastructure to simulate this situation.
</Title_Description>
    <Label>tool</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>26/10/2018 11:41:47 PM +00:00</CreatedAt>
    <ClosedAt>1/11/2018 1:14:01 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10245</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>26/10/2018 8:57:39 PM +00:00</CreatedAt>
    <ClosedAt>29/10/2018 5:01:13 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10243</IssueLabelID>
    <Title>SDK resolver in Visual Studio &amp; command shell experience</Title>
    <Description>Parent issue: https://github.com/dotnet/cli/issues/10100
________________
SDK resolver in Visual Studio &amp; command shell experience
    The SDK resolver finds the appropriate ‘dotnet.exe’ by finding it on the path - first instance wins. The current behavior of the SDK bundle is to append the SDK bundle installation location to the PATH environmental variable. 
Proposal: the SDK bundle will prepend instead of appending the SDK bundle installation location to the PATH environmental variable.

Scenarios
Installation of Visual Studio
•	Only one installation location is on the path.
Installation of Visual Studio1 then side-by-side installation of Visual Studio2
•	Only one installation location is on the path – Visual Studio does not allow the subsequent modification of the ‘shared’ components location; therefore the second SDK bundle installation location will be the same as the first.
Installation of Visual Studio then ‘stand-alone’ installation of the SDK bundle
•	Only one installation location is on the path – as the ‘stand-alone’ SDK bundle installation uses the previous the SDK bundle installation location via Visual Studio as the default.
Installation of Visual Studio then ‘stand-alone’ installation of the SDK bundle using the command line “installpath” where the SDK bundle installation locations differ
•	Two installation locations are on the path – Visual Studio’s SDK resolver finds the dotnet.exe installed by the second installation of the SDK bundle from the ‘stand-alone’ SDK installation.

‘Stand-alone’ installation of the SDK bundle then installation of Visual Studio where the SDK bundle installation locations differ
•	Two installation locations are on the path – Visual Studio’s SDK resolver finds the dotnet.exe installed by the second installation of the SDK bundle via Visual Studio.


Implementation detail: achieved by ‘short-circuiting’ the Host &amp; the HostFXR MSI packages methodology of appending of the SDK bundle installation location on the global PATH environmental variable. 
1.	The CLI MSI package will prepend the SDK bundle installation location on the global PATH environmental variable
2.	The CLI MSI package will necessarily go first in the SDK bundle’s MSI chain
3.	The CLI MSI package will be disabled from installing outside the SDK bundle






</Description>
    <Title_Description>SDK resolver in Visual Studio &amp; command shell experience Parent issue: https://github.com/dotnet/cli/issues/10100
________________
SDK resolver in Visual Studio &amp; command shell experience
    The SDK resolver finds the appropriate ‘dotnet.exe’ by finding it on the path - first instance wins. The current behavior of the SDK bundle is to append the SDK bundle installation location to the PATH environmental variable. 
Proposal: the SDK bundle will prepend instead of appending the SDK bundle installation location to the PATH environmental variable.

Scenarios
Installation of Visual Studio
•	Only one installation location is on the path.
Installation of Visual Studio1 then side-by-side installation of Visual Studio2
•	Only one installation location is on the path – Visual Studio does not allow the subsequent modification of the ‘shared’ components location; therefore the second SDK bundle installation location will be the same as the first.
Installation of Visual Studio then ‘stand-alone’ installation of the SDK bundle
•	Only one installation location is on the path – as the ‘stand-alone’ SDK bundle installation uses the previous the SDK bundle installation location via Visual Studio as the default.
Installation of Visual Studio then ‘stand-alone’ installation of the SDK bundle using the command line “installpath” where the SDK bundle installation locations differ
•	Two installation locations are on the path – Visual Studio’s SDK resolver finds the dotnet.exe installed by the second installation of the SDK bundle from the ‘stand-alone’ SDK installation.

‘Stand-alone’ installation of the SDK bundle then installation of Visual Studio where the SDK bundle installation locations differ
•	Two installation locations are on the path – Visual Studio’s SDK resolver finds the dotnet.exe installed by the second installation of the SDK bundle via Visual Studio.


Implementation detail: achieved by ‘short-circuiting’ the Host &amp; the HostFXR MSI packages methodology of appending of the SDK bundle installation location on the global PATH environmental variable. 
1.	The CLI MSI package will prepend the SDK bundle installation location on the global PATH environmental variable
2.	The CLI MSI package will necessarily go first in the SDK bundle’s MSI chain
3.	The CLI MSI package will be disabled from installing outside the SDK bundle






</Title_Description>
    <Label>Area: Setup</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10241</IssueLabelID>
    <Title>dotnet tool install fails with multiple feeds</Title>
    <Description>_From @ppumkin on September 26 2018 10:20_

# Issue Title

When I try to install a global tool for example coverlet I get an error. 

If I try any other tool I get the same error

# General

The error message is as follows


The problem is that we use private NuGet feeds from Azure DevOps packages and symbol server.

So two things are happening here.

1. When access to a source feed fails the entire tool bombs out.
- Expected to use NEXT source which would have been NuGet.
1. Authorisation is not working from the command line
- Expected authorisation window to show or use credentials Visual Studio has already created

# Workaround

1. In visual studio Disable the private feed and run the dotnet tool install.
1. Installs as expected.
1. Enable private feed after completed





_Copied from original issue: dotnet/core#1962_</Description>
    <Title_Description>dotnet tool install fails with multiple feeds _From @ppumkin on September 26 2018 10:20_

# Issue Title

When I try to install a global tool for example coverlet I get an error. 

If I try any other tool I get the same error

# General

The error message is as follows


The problem is that we use private NuGet feeds from Azure DevOps packages and symbol server.

So two things are happening here.

1. When access to a source feed fails the entire tool bombs out.
- Expected to use NEXT source which would have been NuGet.
1. Authorisation is not working from the command line
- Expected authorisation window to show or use credentials Visual Studio has already created

# Workaround

1. In visual studio Disable the private feed and run the dotnet tool install.
1. Installs as expected.
1. Enable private feed after completed





_Copied from original issue: dotnet/core#1962_</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10239</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>26/10/2018 12:01:23 AM +00:00</CreatedAt>
    <ClosedAt>7/11/2018 6:57:08 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10237</IssueLabelID>
    <Title>dotnet-install.sh gives wrong path when using "source" on macOS 10.13</Title>
    <Description>## Steps to reproduce


</Description>
    <Title_Description>dotnet-install.sh gives wrong path when using "source" on macOS 10.13 ## Steps to reproduce


</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10236</IssueLabelID>
    <Title>Build tools look for ._* variants of required files on OSX</Title>
    <Description>## Steps to reproduce

Download the .NET Core SDK binaries for OSX and extract to a volume which stores extended file attributes as 





</Description>
    <Title_Description>Build tools look for ._* variants of required files on OSX ## Steps to reproduce

Download the .NET Core SDK binaries for OSX and extract to a volume which stores extended file attributes as 





</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10235</IssueLabelID>
    <Title>add FreeBSD to build platforms</Title>
    <Description>This may not be complete fix yet but when running build on FreeBSD it sets targetGroup/targetOS to Linux. This at least add detection to FreeBSD and it also adds it to isUnix family. </Description>
    <Title_Description>add FreeBSD to build platforms This may not be complete fix yet but when running build on FreeBSD it sets targetGroup/targetOS to Linux. This at least add detection to FreeBSD and it also adds it to isUnix family. </Title_Description>
    <Label>os-support</Label>
    <Assignee>wfurt</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10232</IssueLabelID>
    <Title>dotnet tooling cannot find configuration</Title>
    <Description>## Steps to reproduce
Install any dotnet core tool that requires appsettings.json 

## Expected  behavior
the tool can find the appsettings files that are in the same directory as the .dll

## Actual behavior
dotnet tool fails with file not found error. 

The default dotnet core bootstrap startup uses 
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.403
 Commit:    04e15494b6

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.403\

Host (useful for support):
  Version: 2.1.5
  Commit:  290303f510

.NET Core SDKs installed:
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>dotnet tooling cannot find configuration ## Steps to reproduce
Install any dotnet core tool that requires appsettings.json 

## Expected  behavior
the tool can find the appsettings files that are in the same directory as the .dll

## Actual behavior
dotnet tool fails with file not found error. 

The default dotnet core bootstrap startup uses 
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.403
 Commit:    04e15494b6

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.403\

Host (useful for support):
  Version: 2.1.5
  Commit:  290303f510

.NET Core SDKs installed:
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10231</IssueLabelID>
    <Title>Dotnet Tool Install should support --interactive</Title>
    <Description>## Steps to reproduce
Using a private feed run dotnet tool install -g &lt;ToolName hosted in private feed&gt; --interactive

## Expected  behavior
dotnet tool install passes the interactive flag to dotnet restore during the installation to support authentication

## Actual behavior
dotnet tool fails with unknown command --interactive


Honestly feel the entire auth workflow needs some attention when dealing with Azure DevOps feeds. Currently the only working flow to get this to install is this: 
1. dotnet nuget locals -c all
2. dotnet restore --interactive (this gives me a URL &amp; code to open in a browser to complete auth) ??
3. dotnet tool install -g &lt;%toolname%&gt; 

If I don't clear all nuget cache first the tool install command doesn't seem to look outside the cache folders and simply fails with a package not found error. 

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.403
 Commit:    04e15494b6

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.403\

Host (useful for support):
  Version: 2.1.5
  Commit:  290303f510

.NET Core SDKs installed:
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>Dotnet Tool Install should support --interactive ## Steps to reproduce
Using a private feed run dotnet tool install -g &lt;ToolName hosted in private feed&gt; --interactive

## Expected  behavior
dotnet tool install passes the interactive flag to dotnet restore during the installation to support authentication

## Actual behavior
dotnet tool fails with unknown command --interactive


Honestly feel the entire auth workflow needs some attention when dealing with Azure DevOps feeds. Currently the only working flow to get this to install is this: 
1. dotnet nuget locals -c all
2. dotnet restore --interactive (this gives me a URL &amp; code to open in a browser to complete auth) ??
3. dotnet tool install -g &lt;%toolname%&gt; 

If I don't clear all nuget cache first the tool install command doesn't seem to look outside the cache folders and simply fails with a package not found error. 

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.403
 Commit:    04e15494b6

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.403\

Host (useful for support):
  Version: 2.1.5
  Commit:  290303f510

.NET Core SDKs installed:
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]
  2.1.403 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10215</IssueLabelID>
    <Title>Consider hardening scripts/obtain/dotnet-install.sh  against connection reset issues / fix legacy download</Title>
    <Description>@dotnet-mc-bot commented on [Tue Oct 23 2018](https://github.com/dotnet/core-eng/issues/4451)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2145365
  - **Agent:** DDVSOLINUXAGE004
  - **Error log:** curl: (22) The requested URL returned error: 404 Not Found...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2145363
  - **Agent:** DDVSOLINUXAGE002
  - **Error log:** curl: (22) The requested URL returned error: 404 Not Found...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2145368
  - **Agent:** DDVSOLINUXAGE006
  - **Error log:** ;[39;49m;[36m     1&gt;;[39;49m;[39;49m;[31m/opt/code/build/Test.targets(00): error MSB6006: "dotnet" exited with code 134. [/opt/code/build.proj]...

@jcagme @markwilkie


---

@MattGal commented on [Tue Oct 23 2018](https://github.com/dotnet/core-eng/issues/4451#issuecomment-432323421)

This problem has been seen in several places this morning (it would seem the dotnetcli storage account and/or CDN has a rough night) but in this specific case the code that's doing the dotnet-install stuff is from https://github.com/dotnet/cli/blob/release/2.1.4xx/scripts/obtain/dotnet-install.sh which would be the only place to fix it via retry logic (note that curl --retry seems to have difficulty with certain types of failures and not perform retries in this and "TCP Connection Reset by Peer" states. 

</Description>
    <Title_Description>Consider hardening scripts/obtain/dotnet-install.sh  against connection reset issues / fix legacy download @dotnet-mc-bot commented on [Tue Oct 23 2018](https://github.com/dotnet/core-eng/issues/4451)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2145365
  - **Agent:** DDVSOLINUXAGE004
  - **Error log:** curl: (22) The requested URL returned error: 404 Not Found...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2145363
  - **Agent:** DDVSOLINUXAGE002
  - **Error log:** curl: (22) The requested URL returned error: 404 Not Found...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2145368
  - **Agent:** DDVSOLINUXAGE006
  - **Error log:** ;[39;49m;[36m     1&gt;;[39;49m;[39;49m;[31m/opt/code/build/Test.targets(00): error MSB6006: "dotnet" exited with code 134. [/opt/code/build.proj]...

@jcagme @markwilkie


---

@MattGal commented on [Tue Oct 23 2018](https://github.com/dotnet/core-eng/issues/4451#issuecomment-432323421)

This problem has been seen in several places this morning (it would seem the dotnetcli storage account and/or CDN has a rough night) but in this specific case the code that's doing the dotnet-install stuff is from https://github.com/dotnet/cli/blob/release/2.1.4xx/scripts/obtain/dotnet-install.sh which would be the only place to fix it via retry logic (note that curl --retry seems to have difficulty with certain types of failures and not perform retries in this and "TCP Connection Reset by Peer" states. 

</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10211</IssueLabelID>
    <Title>manifest file and nuget.config interaction</Title>
    <Description>
    </Description>
    <Title_Description>manifest file and nuget.config interaction </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10206</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>22/10/2018 12:03:59 AM +00:00</CreatedAt>
    <ClosedAt>25/10/2018 11:11:26 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10203</IssueLabelID>
    <Title>Merge release/2.2.2xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to master 
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>20/10/2018 12:01:22 AM +00:00</CreatedAt>
    <ClosedAt>3/11/2018 6:33:51 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10202</IssueLabelID>
    <Title>Manual test plan for local tools</Title>
    <Description>
    </Description>
    <Title_Description>Manual test plan for local tools 




</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10200</IssueLabelID>
    <Title>DOTNET_CLI_HOME usage</Title>
    <Description>DOTNET_CLI_HOME is used in this repo and it is showing up in a number of other repos.

Based on the usage I wonder if the variable could be eliminated and be replaced with .</Description>
    <Title_Description>DOTNET_CLI_HOME usage DOTNET_CLI_HOME is used in this repo and it is showing up in a number of other repos.

Based on the usage I wonder if the variable could be eliminated and be replaced with .</Title_Description>
    <Label>good first issue</Label>
    <CreatedAt>19/10/2018 5:20:40 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10198</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/10/2018 12:01:34 AM +00:00</CreatedAt>
    <ClosedAt>19/10/2018 5:51:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10196</IssueLabelID>
    <Title>dotnet run command should set DOTNET_ROOT environment variable</Title>
    <Description>#Repro steps

- Install a local copy of the .NET Core SDK (ie unzip it to a local folder or install it to a local folder using the dotnet-install script)
- Create a new console app ( from the muxer could help but so far have decided against it.

FYI @natemcmaster @peterhuene 

</Description>
    <Title_Description>dotnet run command should set DOTNET_ROOT environment variable #Repro steps

- Install a local copy of the .NET Core SDK (ie unzip it to a local folder or install it to a local folder using the dotnet-install script)
- Create a new console app ( from the muxer could help but so far have decided against it.

FYI @natemcmaster @peterhuene 

</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10191</IssueLabelID>
    <Title>Merge release/2.2.2xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.2xx to master 
This is an automatically generated pull request from release/2.2.2xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>18/10/2018 12:01:23 AM +00:00</CreatedAt>
    <ClosedAt>19/10/2018 8:43:39 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10190</IssueLabelID>
    <Title>Merge release/2.2.1xx to release/2.2.2xx</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to release/2.2.2xx 
This is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>18/10/2018 12:01:21 AM +00:00</CreatedAt>
    <ClosedAt>18/10/2018 8:44:46 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10189</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>18/10/2018 12:01:19 AM +00:00</CreatedAt>
    <ClosedAt>18/10/2018 8:42:57 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10186</IssueLabelID>
    <Title>Remove the explicit 'ProjectRuntimeConfigFilePath' inclusions.</Title>
    <Description>Fixes ProdCon related warnings [errors]:
Addresses: https://github.com/dotnet/cli/issues/10170

E:\A\_work\4527\s\bin\2\win-x64\dotnet\sdk\2.1.500-preview-009365\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets(2025): error NU5118: File 'E:\A\_work\4527\s\TestAssets\TestPackages\dotnet-portable-v1-prefercli\bin\Release\netcoreapp1.1\dotnet-portable-v1-prefercli.runtimeconfig.json' is not added because the package already contains file 'lib\netcoreapp1.1\dotnet-portable-v1-prefercli.runtimeconfig.json' [E:\A\_work\4527\s\TestAssets\TestPackages\dotnet-portable-v1-prefercli\dotnet-portable-v1-prefercli.csproj] [E:\A\_work\4527\s\build.proj]

Possibly related: https://github.com/dotnet/sdk/pull/2548</Description>
    <Title_Description>Remove the explicit 'ProjectRuntimeConfigFilePath' inclusions. Fixes ProdCon related warnings [errors]:
Addresses: https://github.com/dotnet/cli/issues/10170

E:\A\_work\4527\s\bin\2\win-x64\dotnet\sdk\2.1.500-preview-009365\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets(2025): error NU5118: File 'E:\A\_work\4527\s\TestAssets\TestPackages\dotnet-portable-v1-prefercli\bin\Release\netcoreapp1.1\dotnet-portable-v1-prefercli.runtimeconfig.json' is not added because the package already contains file 'lib\netcoreapp1.1\dotnet-portable-v1-prefercli.runtimeconfig.json' [E:\A\_work\4527\s\TestAssets\TestPackages\dotnet-portable-v1-prefercli\dotnet-portable-v1-prefercli.csproj] [E:\A\_work\4527\s\build.proj]

Possibly related: https://github.com/dotnet/sdk/pull/2548</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10185</IssueLabelID>
    <Title>dotnet-install.ps1 fails to download sdk using remote powershell + proxy</Title>
    <Description>## Steps to reproduce
* Need to be behind an NTLM Proxy
* Multiple server where you need to install dotnet SDK remotly
* From your pc (or a trigger in your CI for example) :
 then run it (fails too)


not sure what happens around this :
https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1#L218-L222

I tried using both "Windows Powershell 5.x" and "Powershell core 6.0.3"</Description>
    <Title_Description>dotnet-install.ps1 fails to download sdk using remote powershell + proxy ## Steps to reproduce
* Need to be behind an NTLM Proxy
* Multiple server where you need to install dotnet SDK remotly
* From your pc (or a trigger in your CI for example) :
 then run it (fails too)


not sure what happens around this :
https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1#L218-L222

I tried using both "Windows Powershell 5.x" and "Powershell core 6.0.3"</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10183</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/10/2018 12:01:22 AM +00:00</CreatedAt>
    <ClosedAt>18/10/2018 1:07:23 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10182</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/10/2018 12:01:20 AM +00:00</CreatedAt>
    <ClosedAt>17/10/2018 6:01:25 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10181</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/10/2018 12:01:17 AM +00:00</CreatedAt>
    <ClosedAt>21/10/2018 5:14:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10174</IssueLabelID>
    <Title>Multi-target ported PresentationBuildTasks</Title>
    <Description>Make it so that the new ported PresentationBuildTasks are used from both  (msbuild on .NET Core).




</Description>
    <Title_Description>Multi-target ported PresentationBuildTasks Make it so that the new ported PresentationBuildTasks are used from both  (msbuild on .NET Core).




</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10172</IssueLabelID>
    <Title>Adding new VS.Redist packages for 2.1 so that we can serve both 15.x and 16.x</Title>
    <Description>
    </Description>
    <Title_Description>Adding new VS.Redist packages for 2.1, so that we can serve both 15.x and 16.x </Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/10/2018 1:01:35 AM +00:00</CreatedAt>
    <ClosedAt>16/10/2018 8:52:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10170</IssueLabelID>
    <Title>ToolsError build failures in 'prodcon/cli/release/2.1.5xx/' - '20181013.01'</Title>
    <Description>@dotnet-mc-bot commented on [Sat Oct 13 2018](https://github.com/dotnet/core-eng/issues/4387)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2115061
  - **Agent:** DDVSOWINAGE017
  - **Error log:** 1&gt;E:\A\_work\0\s\bin\2\win-x64\dotnet\sdk\2.1.500-preview-009365\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets(00): error NU5118: File 'E:\A\_work\0\s\TestAssets\TestPackages\dotnet-portable-v1-prefercli\bin\pl...

@jcagme @markwilkie


---

@ChadNedzlek commented on [Mon Oct 15 2018](https://github.com/dotnet/core-eng/issues/4387#issuecomment-429964132)

I can't tell if this is a tooling problem or a product build failure... I think it's some custom build goo in the CLI that's failing.

---

@ChadNedzlek commented on [Mon Oct 15 2018](https://github.com/dotnet/core-eng/issues/4387#issuecomment-429990552)

Seems like two targets are attempting to write to the same location here.

</Description>
    <Title_Description>ToolsError build failures in 'prodcon/cli/release/2.1.5xx/' - '20181013.01' @dotnet-mc-bot commented on [Sat Oct 13 2018](https://github.com/dotnet/core-eng/issues/4387)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2115061
  - **Agent:** DDVSOWINAGE017
  - **Error log:** 1&gt;E:\A\_work\0\s\bin\2\win-x64\dotnet\sdk\2.1.500-preview-009365\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets(00): error NU5118: File 'E:\A\_work\0\s\TestAssets\TestPackages\dotnet-portable-v1-prefercli\bin\pl...

@jcagme @markwilkie


---

@ChadNedzlek commented on [Mon Oct 15 2018](https://github.com/dotnet/core-eng/issues/4387#issuecomment-429964132)

I can't tell if this is a tooling problem or a product build failure... I think it's some custom build goo in the CLI that's failing.

---

@ChadNedzlek commented on [Mon Oct 15 2018](https://github.com/dotnet/core-eng/issues/4387#issuecomment-429990552)

Seems like two targets are attempting to write to the same location here.

</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10167</IssueLabelID>
    <Title>Add extra probing location of manifest file .config/ and rename to dotnet-tool.json</Title>
    <Description>
    </Description>
    <Title_Description>Add extra probing location of manifest file .config/ and rename to dotnet-tool.json 




</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10166</IssueLabelID>
    <Title>dotnet sln list command doesn't list files of a read-only solution file</Title>
    <Description>The 
</Description>
    <Title_Description>dotnet sln list command doesn't list files of a read-only solution file The 
</Title_Description>
    <Label>good first issue</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10164</IssueLabelID>
    <Title>Change UI on tool and use reviewed strings</Title>
    <Description>- Change where manifest path is put and remove stack trace

- Remove unused targetframework

- Add Json parsing error

- Add aka.ms link for missing command

- Remove not used resources and use reviewed strings

- Change success message order and color</Description>
    <Title_Description>Change UI on tool and use reviewed strings - Change where manifest path is put and remove stack trace

- Remove unused targetframework

- Add Json parsing error

- Add aka.ms link for missing command

- Remove not used resources and use reviewed strings

- Change success message order and color</Title_Description>
    <Label>tool</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>12/10/2018 2:58:17 AM +00:00</CreatedAt>
    <ClosedAt>17/10/2018 4:15:46 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10163</IssueLabelID>
    <Title>Remove MicrosoftNETCoreAppPackageVersion in toolset repo</Title>
    <Description>it is not used and misleading</Description>
    <Title_Description>Remove MicrosoftNETCoreAppPackageVersion in toolset repo it is not used and misleading</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10162</IssueLabelID>
    <Title>Doc for missing dotnet command</Title>
    <Description>The following is the experience when cannot find command. Due to the added complicity of local tools we need a link for more detail. The second session is proposed the message. And the aka.ms need a doc with detailed information.



- [ ] As well as https://aka.ms/motw -- Mark of the Web</Description>
    <Title_Description>Doc for missing dotnet command The following is the experience when cannot find command. Due to the added complicity of local tools we need a link for more detail. The second session is proposed the message. And the aka.ms need a doc with detailed information.



- [ ] As well as https://aka.ms/motw -- Mark of the Web</Title_Description>
    <Label>tool</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10161</IssueLabelID>
    <Title>Build stability: Consider detection of incomplete .NET SDK download and retry</Title>
    <Description>@dotnet-mc-bot commented on [Mon Oct 08 2018](https://github.com/dotnet/core-eng/issues/4333)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2097028
  - **Agent:** DDVSOLINUXAGE009
  - **Error log:** dotnet_install: Error: Extraction failed...

@jcagme @markwilkie


---

@MattGal commented on [Thu Oct 11 2018](https://github.com/dotnet/core-eng/issues/4333#issuecomment-429054154)

This is an interesting one so I'll move it to CLI to see if they want to investigate it. 

Basically the script gets the download it was doing cancelled at around 13% complete but then tries to untar the resulting download with predictable results:



It seems an obvious candidate for error detection and possibly retry. 

</Description>
    <Title_Description>Build stability: Consider detection of incomplete .NET SDK download and retry @dotnet-mc-bot commented on [Mon Oct 08 2018](https://github.com/dotnet/core-eng/issues/4333)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2097028
  - **Agent:** DDVSOLINUXAGE009
  - **Error log:** dotnet_install: Error: Extraction failed...

@jcagme @markwilkie


---

@MattGal commented on [Thu Oct 11 2018](https://github.com/dotnet/core-eng/issues/4333#issuecomment-429054154)

This is an interesting one so I'll move it to CLI to see if they want to investigate it. 

Basically the script gets the download it was doing cancelled at around 13% complete but then tries to untar the resulting download with predictable results:



It seems an obvious candidate for error detection and possibly retry. 

</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10160</IssueLabelID>
    <Title>Add local tools command resolver</Title>
    <Description>Combine resolver cache and manifest reader. And it can both restore and run command now</Description>
    <Title_Description>Add local tools command resolver Combine resolver cache and manifest reader. And it can both restore and run command now</Title_Description>
    <Label>tool</Label>
    <CreatedAt>11/10/2018 6:06:52 AM +00:00</CreatedAt>
    <ClosedAt>17/10/2018 6:32:56 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10157</IssueLabelID>
    <Title>Visual Studio installer communicates the install folder to the SDK MSI</Title>
    <Description>Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4641
__________________
Visual Studio communication/interaction with the SDK bundle
     The SDK bundle installation location is ‘Program Files’ + “dotnet” regardless of Visual Studio’s ‘shared’ components installation location.
Proposal: The Visual Studio installation communicates to the SDK bundle installer the installation location and correctly includes the SDK bundle in the Visual Studio ‘drive’ allocation estimates.
Scenarios
Installation of Visual Studio’s ‘shared’ components installation location = “C:\Program Files (x86)\Microsoft Visual Studio\Shared” where ‘C’ is the operating system volume and the SDK bundle’s self-registered location is NULL
•	The VS installer communicates the SDK bundle installation location: “C:\Program File\dotnet”
Installation of Visual Studio’s ‘shared’ components installation location = “E:\Visual Studio\Shared” where ‘E’ is not the operating system volume and the SDK bundle’s self-registered location is NULL
•	The VS installer communicates the SDK bundle installation location: “E:\dotnet”

Installation of Visual Studio’s ‘shared’ components installation location = “E:\Visual Studio\Shared” where ‘E’ is not the operating system volume and the SDK bundle’s self-registered location = “G:\DotnetCoreSDKs\dotnet”
•	The VS installer communicates the SDK bundle installation location: “G:\DotnetCoreSDKs\dotnet”

Changes in Visual Studio installation methodology:
A: Introduce a ‘ProgramFilesDotnetOrSharedDriveDotnetOrSDKBundleRegisteredLocation’ installation internal variable based on the ‘shared’ components installation location and/or the SDK bundle’s self-registered location. Where the value is:
1.	‘Program Files’\dotnet
2.	the root of the ‘shared’ components installation location’s drive + “\dotnet”
3.	the SDK bundle’s self-registered location



B: Add a parameter to the call to the SDK bundle installer. To wit: 
-installpath \"[ ProgramFilesDotnetOrSharedDriveDotnetOrSDKBundleRegisteredLocation]\"
C: Adjust the ‘drive’ allocation estimates to account for the location of the SDK bundle’s installation location.







</Description>
    <Title_Description>Visual Studio installer communicates the install folder to the SDK MSI Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4641
__________________
Visual Studio communication/interaction with the SDK bundle
     The SDK bundle installation location is ‘Program Files’ + “dotnet” regardless of Visual Studio’s ‘shared’ components installation location.
Proposal: The Visual Studio installation communicates to the SDK bundle installer the installation location and correctly includes the SDK bundle in the Visual Studio ‘drive’ allocation estimates.
Scenarios
Installation of Visual Studio’s ‘shared’ components installation location = “C:\Program Files (x86)\Microsoft Visual Studio\Shared” where ‘C’ is the operating system volume and the SDK bundle’s self-registered location is NULL
•	The VS installer communicates the SDK bundle installation location: “C:\Program File\dotnet”
Installation of Visual Studio’s ‘shared’ components installation location = “E:\Visual Studio\Shared” where ‘E’ is not the operating system volume and the SDK bundle’s self-registered location is NULL
•	The VS installer communicates the SDK bundle installation location: “E:\dotnet”

Installation of Visual Studio’s ‘shared’ components installation location = “E:\Visual Studio\Shared” where ‘E’ is not the operating system volume and the SDK bundle’s self-registered location = “G:\DotnetCoreSDKs\dotnet”
•	The VS installer communicates the SDK bundle installation location: “G:\DotnetCoreSDKs\dotnet”

Changes in Visual Studio installation methodology:
A: Introduce a ‘ProgramFilesDotnetOrSharedDriveDotnetOrSDKBundleRegisteredLocation’ installation internal variable based on the ‘shared’ components installation location and/or the SDK bundle’s self-registered location. Where the value is:
1.	‘Program Files’\dotnet
2.	the root of the ‘shared’ components installation location’s drive + “\dotnet”
3.	the SDK bundle’s self-registered location



B: Add a parameter to the call to the SDK bundle installer. To wit: 
-installpath \"[ ProgramFilesDotnetOrSharedDriveDotnetOrSDKBundleRegisteredLocation]\"
C: Adjust the ‘drive’ allocation estimates to account for the location of the SDK bundle’s installation location.







</Title_Description>
    <Label>Area: Setup</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10156</IssueLabelID>
    <Title>Manage the SDK bundle installation locations</Title>
    <Description>Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4640
________________
The SDK bundle installer
    The SDK bundle installation location is ‘Program Files’ + “dotnet”.
Proposal: Enable the SDK bundle to install to a different location than: ‘Program Files’ + “dotnet”.

Changes in SDK bundle installation methodology:
A: Manage the 4 potential SDK bundle installation locations
In precedential order:
1. ‘Program Files’ + “dotnet” - if there is a “dotnet.exe” at that location
2. the SDK bundle’s latest self-registered installation location
3. the “installpath’s” input parameter’s value
4. ‘Program Files’ + “dotnet”







</Description>
    <Title_Description>Manage the SDK bundle installation locations Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4640
________________
The SDK bundle installer
    The SDK bundle installation location is ‘Program Files’ + “dotnet”.
Proposal: Enable the SDK bundle to install to a different location than: ‘Program Files’ + “dotnet”.

Changes in SDK bundle installation methodology:
A: Manage the 4 potential SDK bundle installation locations
In precedential order:
1. ‘Program Files’ + “dotnet” - if there is a “dotnet.exe” at that location
2. the SDK bundle’s latest self-registered installation location
3. the “installpath’s” input parameter’s value
4. ‘Program Files’ + “dotnet”







</Title_Description>
    <Label>Area: Setup</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10155</IssueLabelID>
    <Title>The SDK bundle installer Procedure [Windows]</Title>
    <Description>Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4639
______________________
The SDK bundle installer
    The SDK bundle installation location is ‘Program Files’ + “dotnet”.
Proposal: Enable the SDK bundle to install to a different location than: ‘Program Files’ + “dotnet”.

Changes in SDK bundle installation methodology:
A: Manage the 4 potential SDK bundle installation locations
In precedential order:
1.	‘Program Files’ + “dotnet” - if there is a “dotnet.exe” at that location
2.	the “installpath’s” input parameter’s value
3.	the SDK bundle’s latest self-registered installation location
4.	‘Program Files’ + “dotnet”

B: Communicate the SDK bundle installation location to the chained MSIs and AspNetCoreSharedFramework WiXLib
1.	CLI SDK MSI
2.	Shared FX MSI
3.	Host FXR MSI
4.	Shared Host MSI
5.	WinFormsAndWpf MSI
6.	AspNetCoreSharedFramework WiXLib

C: Disable the CLI SDK MSI from installing ‘stand-alone’
•	see: SDK resolver in Visual Studio &amp; command shell experience: https://github.com/dotnet/cli/issues/10243

D: SDK bundle self-registers the installation location value.
•	see: SDK resolver in Visual Studio &amp; command shell experience: https://github.com/dotnet/cli/issues/10243

E: SDK bundle updates the global PATH environmental variable.
•	    see: SDK resolver in Visual Studio &amp; command shell experience:https://github.com/dotnet/cli/issues/10243






</Description>
    <Title_Description>The SDK bundle installer Procedure [Windows] Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4639
______________________
The SDK bundle installer
    The SDK bundle installation location is ‘Program Files’ + “dotnet”.
Proposal: Enable the SDK bundle to install to a different location than: ‘Program Files’ + “dotnet”.

Changes in SDK bundle installation methodology:
A: Manage the 4 potential SDK bundle installation locations
In precedential order:
1.	‘Program Files’ + “dotnet” - if there is a “dotnet.exe” at that location
2.	the “installpath’s” input parameter’s value
3.	the SDK bundle’s latest self-registered installation location
4.	‘Program Files’ + “dotnet”

B: Communicate the SDK bundle installation location to the chained MSIs and AspNetCoreSharedFramework WiXLib
1.	CLI SDK MSI
2.	Shared FX MSI
3.	Host FXR MSI
4.	Shared Host MSI
5.	WinFormsAndWpf MSI
6.	AspNetCoreSharedFramework WiXLib

C: Disable the CLI SDK MSI from installing ‘stand-alone’
•	see: SDK resolver in Visual Studio &amp; command shell experience: https://github.com/dotnet/cli/issues/10243

D: SDK bundle self-registers the installation location value.
•	see: SDK resolver in Visual Studio &amp; command shell experience: https://github.com/dotnet/cli/issues/10243

E: SDK bundle updates the global PATH environmental variable.
•	    see: SDK resolver in Visual Studio &amp; command shell experience:https://github.com/dotnet/cli/issues/10243






</Title_Description>
    <Label>Area: Setup</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10154</IssueLabelID>
    <Title>SDK Uninstall Procedure [Windows/MAC] </Title>
    <Description>Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4638
__________________________
_Open questions:_
Does the registry’s well known location value get removed upon an uninstall?
Do we use a ref count here?
Do we store the previous well known location value?







</Description>
    <Title_Description>SDK Uninstall Procedure [Windows/MAC]  Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4638
__________________________
_Open questions:_
Does the registry’s well known location value get removed upon an uninstall?
Do we use a ref count here?
Do we store the previous well known location value?







</Title_Description>
    <Label>Area: Setup</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10153</IssueLabelID>
    <Title>SDK muxer [the host] and multi-level lookup</Title>
    <Description>Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4636
____________________
SDK muxer [the host] and multi-level lookup
    When multi-level lookup is enabled the SDK muxer searches two locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe and the ‘Program Files’ “dotnet\SDK” folder.
Proposal: the SDK muxer’s multi-level lookup will potentially search three locations to find an appropriate SDK: the “SDK” folder adjacent to dotnet.exe and the ‘Program Files’ “dotnet\SDK” folder as before with the addition of the SDK bundle installation’s self-registered installation location.

Scenarios
Installation of any number of SDK bundles and/or Visual Studio all using the default ‘Program Files’
•	The SDK muxer searches two locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe and the ‘Program Files’ “dotnet\SDK” folder. The SDK bundle may or may not have self-registered the ‘Program Files’ “dotnet\SDK” folder.
Installation of any number of SDK bundles and/or Visual Studio all using a specialized SDK bundle self-registered location
•	The SDK muxer searches three locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe the ‘Program Files’ “dotnet\SDK” folder and the SDK bundle installation’s self-registered value. 
Note: Even though no SDKs exist in the ‘Program Files’ “dotnet\SDK” folder the search includes this location as before with no deleterious impact.
Installation of SDK bundles and/or Visual Studio using the default ‘Program Files’ and a specialized SDK bundle self-registered location
•	The SDK muxer searches three locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe the ‘Program Files’ “dotnet\SDK” folder and the SDK bundle installation’s self-registered value.
Installation of SDK bundles and/or Visual Studio using the default ‘Program Files’ and/or using two+ specialized SDK bundle self-registered location
•	The SDK muxer searches three locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe the ‘Program Files’ “dotnet\SDK” folder and the SDK bundle installation’s last self-registered value. All the previous SDK bundle installation’s previous self-registered values are ignored.
Note: This scenario is possible when using the command line “installpath” during a ‘stand-alone’ SDK bundle installation and  

Implementation detail: If the SDK bundle installation has self-registered then add the location to the SDK muxer’s multi-level lookup. If the SDK bundle installation’s self-registered value matches the default ‘Program Files’ ignore the third option.









</Description>
    <Title_Description>SDK muxer [the host] and multi-level lookup Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4636
____________________
SDK muxer [the host] and multi-level lookup
    When multi-level lookup is enabled the SDK muxer searches two locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe and the ‘Program Files’ “dotnet\SDK” folder.
Proposal: the SDK muxer’s multi-level lookup will potentially search three locations to find an appropriate SDK: the “SDK” folder adjacent to dotnet.exe and the ‘Program Files’ “dotnet\SDK” folder as before with the addition of the SDK bundle installation’s self-registered installation location.

Scenarios
Installation of any number of SDK bundles and/or Visual Studio all using the default ‘Program Files’
•	The SDK muxer searches two locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe and the ‘Program Files’ “dotnet\SDK” folder. The SDK bundle may or may not have self-registered the ‘Program Files’ “dotnet\SDK” folder.
Installation of any number of SDK bundles and/or Visual Studio all using a specialized SDK bundle self-registered location
•	The SDK muxer searches three locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe the ‘Program Files’ “dotnet\SDK” folder and the SDK bundle installation’s self-registered value. 
Note: Even though no SDKs exist in the ‘Program Files’ “dotnet\SDK” folder the search includes this location as before with no deleterious impact.
Installation of SDK bundles and/or Visual Studio using the default ‘Program Files’ and a specialized SDK bundle self-registered location
•	The SDK muxer searches three locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe the ‘Program Files’ “dotnet\SDK” folder and the SDK bundle installation’s self-registered value.
Installation of SDK bundles and/or Visual Studio using the default ‘Program Files’ and/or using two+ specialized SDK bundle self-registered location
•	The SDK muxer searches three locations to find an appropriate SDK – the “SDK” folder adjacent to dotnet.exe the ‘Program Files’ “dotnet\SDK” folder and the SDK bundle installation’s last self-registered value. All the previous SDK bundle installation’s previous self-registered values are ignored.
Note: This scenario is possible when using the command line “installpath” during a ‘stand-alone’ SDK bundle installation and  

Implementation detail: If the SDK bundle installation has self-registered then add the location to the SDK muxer’s multi-level lookup. If the SDK bundle installation’s self-registered value matches the default ‘Program Files’ ignore the third option.









</Title_Description>
    <Label>Area: Host</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10152</IssueLabelID>
    <Title>Advertise the dynamic VS/SDK install folder change</Title>
    <Description>Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4642
______________________________________

1. Advertise the dynamic VS/SDK install folder change
2. Document the supported scenario

Notes from meetings:
Understood.  I think this is a scenario we should not support and our guidance to customers is that once you choose e:/foo-2.1 as your well known location you should not choose another.
The reason we should not support this scenario is that it adds all the same complexity that we have in fxr about rollforward/rollback etc. into code that should not have to deal with that complexity.
Keep in mind this only applies to official installs of the sdk/runtime and not xcopy or standalone deployments.
As a result of this scenario we may choose to not allow users to move it but this well known reg/conf.etc key is still important due to our choice of install location on Linux and avoids hard coded paths in our code.






</Description>
    <Title_Description>Advertise the dynamic VS/SDK install folder change Parent issue: https://github.com/dotnet/cli/issues/10100
Related: https://github.com/dotnet/core-setup/issues/4642
______________________________________

1. Advertise the dynamic VS/SDK install folder change
2. Document the supported scenario

Notes from meetings:
Understood.  I think this is a scenario we should not support and our guidance to customers is that once you choose e:/foo-2.1 as your well known location you should not choose another.
The reason we should not support this scenario is that it adds all the same complexity that we have in fxr about rollforward/rollback etc. into code that should not have to deal with that complexity.
Keep in mind this only applies to official installs of the sdk/runtime and not xcopy or standalone deployments.
As a result of this scenario we may choose to not allow users to move it but this well known reg/conf.etc key is still important due to our choice of install location on Linux and avoids hard coded paths in our code.






</Title_Description>
    <Label>documentation</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10147</IssueLabelID>
    <Title>Update LatestPatchVersionForNetCore 1.0 and 1.1</Title>
    <Description>Now 1.0.13 and 1.1.10 are released</Description>
    <Title_Description>Update LatestPatchVersionForNetCore 1.0 and 1.1 Now 1.0.13 and 1.1.10 are released</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>10/10/2018 5:06:03 AM +00:00</CreatedAt>
    <ClosedAt>10/10/2018 5:20:14 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10146</IssueLabelID>
    <Title>Merge rel/1.1.0-MSRC to rel/1.1.0.</Title>
    <Description>
    </Description>
    <Title_Description>Merge rel/1.1.0-MSRC to rel/1.1.0. </Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>9/10/2018 10:26:56 PM +00:00</CreatedAt>
    <ClosedAt>10/10/2018 12:24:12 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10144</IssueLabelID>
    <Title>toolset builds using shared toolset (Arcade SDK)</Title>
    <Description>Use Arcade SDK - here are some "getting started" steps experience / usage may vary.

- [ ] Add a [global.json](https://github.com/dotnet/arcade-minimalci-sample/blob/master/global.json)
- [ ] Add (or copy) [Directory.Build.props](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.props) &amp;&amp; [Directory.build.targets](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.targets)
- [ ] Copy  from [Arcade](https://github.com/dotnet/arcade/tree/master/eng/common) into repo
- [ ] Add dotnet-core feed to [NuGet.config](https://github.com/dotnet/arcade-minimalci-sample/blob/master/NuGet.Config)</Description>
    <Title_Description>toolset builds using shared toolset (Arcade SDK) Use Arcade SDK - here are some "getting started" steps experience / usage may vary.

- [ ] Add a [global.json](https://github.com/dotnet/arcade-minimalci-sample/blob/master/global.json)
- [ ] Add (or copy) [Directory.Build.props](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.props) &amp;&amp; [Directory.build.targets](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.targets)
- [ ] Copy  from [Arcade](https://github.com/dotnet/arcade/tree/master/eng/common) into repo
- [ ] Add dotnet-core feed to [NuGet.config](https://github.com/dotnet/arcade-minimalci-sample/blob/master/NuGet.Config)</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10142</IssueLabelID>
    <Title>Move toolset CI to VSTS (dev.azure.com/dnceng/public)</Title>
    <Description>VSTS public CI builds
- [ ] public CI builds are building in VSTS (dnceng.visualstudio.com)
  - [ ] Using YAML
  - [ ] Imports [base.yml](https://github.com/dotnet/arcade-minimalci-sample#base-your-builds-on-arcade-for-ease-of-use)


</Description>
    <Title_Description>Move toolset CI to VSTS (dev.azure.com/dnceng/public) VSTS public CI builds
- [ ] public CI builds are building in VSTS (dnceng.visualstudio.com)
  - [ ] Using YAML
  - [ ] Imports [base.yml](https://github.com/dotnet/arcade-minimalci-sample#base-your-builds-on-arcade-for-ease-of-use)


</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10138</IssueLabelID>
    <Title>Move Core-Sdk CI to VSTS (dev.azure.com/dnceng/public)</Title>
    <Description>@chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/696)

VSTS public CI builds
- [ ] public CI builds are building in VSTS (dnceng.visualstudio.com)
  - [ ] Using YAML
  - [ ] Imports [base.yml](https://github.com/dotnet/arcade-minimalci-sample#base-your-builds-on-arcade-for-ease-of-use)


</Description>
    <Title_Description>Move Core-Sdk CI to VSTS (dev.azure.com/dnceng/public) @chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/696)

VSTS public CI builds
- [ ] public CI builds are building in VSTS (dnceng.visualstudio.com)
  - [ ] Using YAML
  - [ ] Imports [base.yml](https://github.com/dotnet/arcade-minimalci-sample#base-your-builds-on-arcade-for-ease-of-use)


</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10136</IssueLabelID>
    <Title>Core-Sdk builds using shared toolset (Arcade SDK)</Title>
    <Description>@chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/694)

Use Arcade SDK - here are some "getting started" steps experience / usage may vary.

- [ ] Add a [global.json](https://github.com/dotnet/arcade-minimalci-sample/blob/master/global.json)
- [ ] Add (or copy) [Directory.Build.props](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.props) &amp;&amp; [Directory.build.targets](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.targets)
- [ ] Copy  from [Arcade](https://github.com/dotnet/arcade/tree/master/eng/common) into repo
- [ ] Add dotnet-core feed to [NuGet.config](https://github.com/dotnet/arcade-minimalci-sample/blob/master/NuGet.Config)

</Description>
    <Title_Description>Core-Sdk builds using shared toolset (Arcade SDK) @chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/694)

Use Arcade SDK - here are some "getting started" steps experience / usage may vary.

- [ ] Add a [global.json](https://github.com/dotnet/arcade-minimalci-sample/blob/master/global.json)
- [ ] Add (or copy) [Directory.Build.props](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.props) &amp;&amp; [Directory.build.targets](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.targets)
- [ ] Copy  from [Arcade](https://github.com/dotnet/arcade/tree/master/eng/common) into repo
- [ ] Add dotnet-core feed to [NuGet.config](https://github.com/dotnet/arcade-minimalci-sample/blob/master/NuGet.Config)

</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10134</IssueLabelID>
    <Title>Move CLI CI to VSTS (dev.azure.com/dnceng/public)</Title>
    <Description>@chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/655)

VSTS public CI builds
- [ ] public CI builds are building in VSTS (dnceng.visualstudio.com)
  - [ ] Using YAML
  - [ ] Imports [base.yml](https://github.com/dotnet/arcade-minimalci-sample#base-your-builds-on-arcade-for-ease-of-use)


</Description>
    <Title_Description>Move CLI CI to VSTS (dev.azure.com/dnceng/public) @chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/655)

VSTS public CI builds
- [ ] public CI builds are building in VSTS (dnceng.visualstudio.com)
  - [ ] Using YAML
  - [ ] Imports [base.yml](https://github.com/dotnet/arcade-minimalci-sample#base-your-builds-on-arcade-for-ease-of-use)


</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10133</IssueLabelID>
    <Title>CLI official builds from VSTS (dev.azure.com/dnceng/internal)</Title>
    <Description>@chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/654)

Official builds on VSTS - https://github.com/dotnet/arcade/blob/master/Documentation/VSTS/MovingFromDevDivToDncEng.md
- [ ] Official builds are building in VSTS (dnceng)
  - [ ] Using YAML
  - [ ] Referencing [base.yml](https://github.com/dotnet/arcade-minimalci-sample#base-your-builds-on-arcade-for-ease-of-use)

</Description>
    <Title_Description>CLI official builds from VSTS (dev.azure.com/dnceng/internal) @chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/654)

Official builds on VSTS - https://github.com/dotnet/arcade/blob/master/Documentation/VSTS/MovingFromDevDivToDncEng.md
- [ ] Official builds are building in VSTS (dnceng)
  - [ ] Using YAML
  - [ ] Referencing [base.yml](https://github.com/dotnet/arcade-minimalci-sample#base-your-builds-on-arcade-for-ease-of-use)

</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10132</IssueLabelID>
    <Title>CLI builds using shared toolset (Arcade SDK)</Title>
    <Description>@chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/653)

Use Arcade SDK - here are some "getting started" steps experience / usage may vary.

- [ ] Add a [global.json](https://github.com/dotnet/arcade-minimalci-sample/blob/master/global.json)
- [ ] Add (or copy) [Directory.Build.props](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.props) &amp;&amp; [Directory.build.targets](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.targets)
- [ ] Copy  from [Arcade](https://github.com/dotnet/arcade/tree/master/eng/common) into repo
- [ ] Add dotnet-core feed to [NuGet.config](https://github.com/dotnet/arcade-minimalci-sample/blob/master/NuGet.Config)

</Description>
    <Title_Description>CLI builds using shared toolset (Arcade SDK) @chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/653)

Use Arcade SDK - here are some "getting started" steps experience / usage may vary.

- [ ] Add a [global.json](https://github.com/dotnet/arcade-minimalci-sample/blob/master/global.json)
- [ ] Add (or copy) [Directory.Build.props](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.props) &amp;&amp; [Directory.build.targets](https://github.com/dotnet/arcade-minimalci-sample/blob/master/Directory.Build.targets)
- [ ] Copy  from [Arcade](https://github.com/dotnet/arcade/tree/master/eng/common) into repo
- [ ] Add dotnet-core feed to [NuGet.config](https://github.com/dotnet/arcade-minimalci-sample/blob/master/NuGet.Config)

</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10131</IssueLabelID>
    <Title>Onboard CLI/SDK owned repos into VSTS Arcade and ProdCon V2</Title>
    <Description>
    </Description>
    <Title_Description>Onboard CLI/SDK owned repos into VSTS, Arcade and ProdCon V2 </Title_Description>
    <Label>Epic</Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10129</IssueLabelID>
    <Title>SDK uses engineering dependency flow</Title>
    <Description>@chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/647)

Documentation for dependency flow is currently being created / updated here is some starter info

[Dependency flow](https://github.com/dotnet/arcade/blob/master/Documentation/DependenciesFlowPlan.md)

Add Version.Details.xml
- [ ] Create [Version.Details.xml](https://github.com/dotnet/arcade/blob/master/Documentation/Darc.md#engversiondetailsxml) file manually in repo

Channel mapping
- [ ] Create a [channel mapping](https://github.com/dotnet/arcade/blob/master/Documentation/Maestro/BuildAssetRegistry.md) between branch and channel name
  - manually (using REST API) documentation forthcoming

Create subscriptions
- [ ] Create [subscriptions](https://github.com/dotnet/arcade/blob/e20e8459bdae871bcafb731cf139210319d939d4/Documentation/Maestro/BuildAssetRegistry.md#subscription) 
  - manually (using REST API) documentation forthcoming

</Description>
    <Title_Description>SDK uses engineering dependency flow @chcosta commented on [Tue Sep 11 2018](https://github.com/dotnet/arcade/issues/647)

Documentation for dependency flow is currently being created / updated here is some starter info

[Dependency flow](https://github.com/dotnet/arcade/blob/master/Documentation/DependenciesFlowPlan.md)

Add Version.Details.xml
- [ ] Create [Version.Details.xml](https://github.com/dotnet/arcade/blob/master/Documentation/Darc.md#engversiondetailsxml) file manually in repo

Channel mapping
- [ ] Create a [channel mapping](https://github.com/dotnet/arcade/blob/master/Documentation/Maestro/BuildAssetRegistry.md) between branch and channel name
  - manually (using REST API) documentation forthcoming

Create subscriptions
- [ ] Create [subscriptions](https://github.com/dotnet/arcade/blob/e20e8459bdae871bcafb731cf139210319d939d4/Documentation/Maestro/BuildAssetRegistry.md#subscription) 
  - manually (using REST API) documentation forthcoming

</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10125</IssueLabelID>
    <Title>Enable targeting .NET Core 2.2 from 3.0 SDK</Title>
    <Description>.NET Core 2.2 and 3.0 are both currently under development.  Normally we use the version of the runtime inserted into the SDK to determine what preview version to use for the implicit package references to frameworks that are under development.  We don't have a straightforward way to do this since we don't insert the 2.2 runtime into the 3.0 SDK.

So for now the 3.0 SDK won't support targeting .NET Core 2.2.  When .NET Core 2.2 is released then we will need to update core-sdk to include an ImplicitPackageVariable for .NET Core 2.2 (and the ASP.NET packages) in the BundledVersions.props file.</Description>
    <Title_Description>Enable targeting .NET Core 2.2 from 3.0 SDK .NET Core 2.2 and 3.0 are both currently under development.  Normally we use the version of the runtime inserted into the SDK to determine what preview version to use for the implicit package references to frameworks that are under development.  We don't have a straightforward way to do this since we don't insert the 2.2 runtime into the 3.0 SDK.

So for now the 3.0 SDK won't support targeting .NET Core 2.2.  When .NET Core 2.2 is released then we will need to update core-sdk to include an ImplicitPackageVariable for .NET Core 2.2 (and the ASP.NET packages) in the BundledVersions.props file.</Title_Description>
    <Label>release blocking</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>9/10/2018 1:41:41 AM +00:00</CreatedAt>
    <ClosedAt>27/11/2018 4:14:49 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10124</IssueLabelID>
    <Title>Support versionless PackageReference for AspNetCore when targeting .NET Core 3.0</Title>
    <Description>In .NET Core 3.0 the syntax for depending on the ASP.NET Core shared framework is:

 syntax  when targeting 3.0.  We might also want a warning or info message suggesting a change to the newer syntax.</Description>
    <Title_Description>Support versionless PackageReference for AspNetCore when targeting .NET Core 3.0 In .NET Core 3.0 the syntax for depending on the ASP.NET Core shared framework is:

 syntax  when targeting 3.0.  We might also want a warning or info message suggesting a change to the newer syntax.</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10123</IssueLabelID>
    <Title>Enable implicit versions tests in core-sdk master branch</Title>
    <Description>I'm merging the [implicit ASP.NET PackageVersion support](https://github.com/dotnet/sdk/pull/2533) from our 2.2 branches into master.  The end-to-end scenario requires logic that lives in dotnet/sdk as well as the correct entries in the BundledVersions.props file which for the master branch is generated in dotnet/core-sdk.

Because of this repo split I am going to disable the implicit versions tests in core-sdk until we can insert the dotnet/sdk code that correctly consumes the items from the bundled versions file.</Description>
    <Title_Description>Enable implicit versions tests in core-sdk master branch I'm merging the [implicit ASP.NET PackageVersion support](https://github.com/dotnet/sdk/pull/2533) from our 2.2 branches into master.  The end-to-end scenario requires logic that lives in dotnet/sdk as well as the correct entries in the BundledVersions.props file which for the master branch is generated in dotnet/core-sdk.

Because of this repo split I am going to disable the implicit versions tests in core-sdk until we can insert the dotnet/sdk code that correctly consumes the items from the bundled versions file.</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10122</IssueLabelID>
    <Title>vs code .Net console template does not exists HELP PLEASE</Title>
    <Description>I have donwloaded .net core 2.1 and sdk from microsoft and when i try to create new console program in vs code error comes up:     dotnet new console -o MyApp
output:
No templates matched the input template name: console.

Templates      Short Name      Language      Tags
-------------------------------------------------

when i try to download it from internet it downloaded 1.1 version that does not work with my 2.1

------------------------------------------
dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.1.403
 Commit:    04e15494b6

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.13
 OS Platform: Darwin
 RID:         osx.10.13-x64
 Base Path:   /usr/local/share/dotnet/sdk/2.1.403/

Host (useful for support):
  Version: 2.1.5
  Commit:  290303f510

.NET Core SDKs installed:
  2.1.403 [/usr/local/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]





</Description>
    <Title_Description>vs code .Net console template does not exists HELP PLEASE I have donwloaded .net core 2.1 and sdk from microsoft and when i try to create new console program in vs code error comes up:     dotnet new console -o MyApp
output:
No templates matched the input template name: console.

Templates      Short Name      Language      Tags
-------------------------------------------------

when i try to download it from internet it downloaded 1.1 version that does not work with my 2.1

------------------------------------------
dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.1.403
 Commit:    04e15494b6

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.13
 OS Platform: Darwin
 RID:         osx.10.13-x64
 Base Path:   /usr/local/share/dotnet/sdk/2.1.403/

Host (useful for support):
  Version: 2.1.5
  Commit:  290303f510

.NET Core SDKs installed:
  2.1.403 [/usr/local/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]





</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10121</IssueLabelID>
    <Title>CLI fails global tools install with Authentication failure</Title>
    <Description>## Steps to reproduce
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.402
 Commit:    3599f217f4

Runtime Environment:
 OS Name:     Windows
 OS Version:  6.1.7601
 OS Platform: Windows
 RID:         win7-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.402\

Host (useful for support):
  Version: 2.1.4
  Commit:  85255dde3e

.NET Core SDKs installed:
  1.0.0-preview2-003131 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.301 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download



I am behind a corporate firewall that uses NTLM</Description>
    <Title_Description>CLI fails global tools install with Authentication failure ## Steps to reproduce
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.402
 Commit:    3599f217f4

Runtime Environment:
 OS Name:     Windows
 OS Version:  6.1.7601
 OS Platform: Windows
 RID:         win7-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.402\

Host (useful for support):
  Version: 2.1.4
  Commit:  85255dde3e

.NET Core SDKs installed:
  1.0.0-preview2-003131 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.301 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download



I am behind a corporate firewall that uses NTLM</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10114</IssueLabelID>
    <Title> Move Resolving command concern to dotnet.dll</Title>
    <Description>Review by commits is easier

Move Resolving command concern to dotnet.dll

Change namespace to CommandFactory. And moved Factory method on Command to a separated class</Description>
    <Title_Description> Move Resolving command concern to dotnet.dll Review by commits is easier

Move Resolving command concern to dotnet.dll

Change namespace to CommandFactory. And moved Factory method on Command to a separated class</Title_Description>
    <Label>tool</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>5/10/2018 7:08:33 PM +00:00</CreatedAt>
    <ClosedAt>8/10/2018 6:25:54 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10107</IssueLabelID>
    <Title>Consider making FrameworkReferences implicit in WPF and Web SDKs</Title>
    <Description>In .NET Core 3.0 a WPF project will import the WPF SDK in its project element (.

Having to specify both the Sdk and the FrameworkReference seems redundant.  They do serve separate purposes: the FrameworkReference allows you to use the APIs in the shared framework while the Sdk import brings in the build logic (for example razor or xaml compilation or default globs for the project type).

We should consider having WPF and Web SDKs by default include an implicit FrameworkReference to the corresponding shared framework and removing the FrameworkReferences from the project templates.






</Description>
    <Title_Description>Consider making FrameworkReferences implicit in WPF and Web SDKs In .NET Core 3.0 a WPF project will import the WPF SDK in its project element (.

Having to specify both the Sdk and the FrameworkReference seems redundant.  They do serve separate purposes: the FrameworkReference allows you to use the APIs in the shared framework while the Sdk import brings in the build logic (for example razor or xaml compilation or default globs for the project type).

We should consider having WPF and Web SDKs by default include an implicit FrameworkReference to the corresponding shared framework and removing the FrameworkReferences from the project templates.






</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10106</IssueLabelID>
    <Title>Figure out conventions for WPF Xaml files in Sdk-style projects</Title>
    <Description>Currently WPF projects for .NET Core 3.0 include explicit items for xaml files.  We should include these items implicitly if possible.  Though there are a bunch of different item templates (user control page window etc) it looks like they all end up as </Description>
    <Title_Description>Figure out conventions for WPF Xaml files in Sdk-style projects Currently WPF projects for .NET Core 3.0 include explicit items for xaml files.  We should include these items implicitly if possible.  Though there are a bunch of different item templates (user control page window etc) it looks like they all end up as </Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10101</IssueLabelID>
    <Title>tool install cannot install on culture "en-US-POSIX"  -- `dotnet tool install` cannot install on ubuntu 18.04</Title>
    <Description>https://github.com/NuKeeperDotNet/NuKeeper/issues/433
https://github.com/dotnet/cli/issues/9974

on WSL ubuntu 18.04

Run 


</Description>
    <Title_Description>tool install cannot install on culture "en-US-POSIX"  -- 


</Title_Description>
    <Label>Pending Shiproom Approval</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10100</IssueLabelID>
    <Title>Flexibility in SDK install folder</Title>
    <Description>As a Visual Studio user I can specify the folder for the .NET Core SDK that is different from c:\program files\dotnet so that I can reduce the footprint on the system drive.
_________________________________
Visual Studio will have flexibility in its installation location - therefore SDK will also have flexibility in its installation location.

**Scenarios**
Installations:
1. an SDK installation chained from a Visual Studio installation instance
2. a 'stand-alone' SDK installation
_________________________________
**Work Items**

_SetUp work items [area-Setup]:_
- [ ] Visual Studio installer communicates the install folder to the SDK MSI
https://github.com/dotnet/cli/issues/10157
- [x] Manage the SDK bundle installation locations
https://github.com/dotnet/cli/issues/10156
- [x] The SDK bundle installer Procedure [Windows]
https://github.com/dotnet/cli/issues/10155
- [x] SDK resolver in Visual Studio &amp; command shell experience
https://github.com/dotnet/cli/issues/10243
- [x] Add properties to override default location for shared framework installer in Windows
https://github.com/aspnet/AspNetCore/issues/3697
- [x] The Runtime bundle installer Procedure [Windows]
not needed at this time - @rakeshsinghranchi

_Host work items [area-Host]:_
- [x] Runtime dynamic multilevel lookup - muxer
https://github.com/dotnet/core-setup/issues/4637
- [x] SDK muxer [the host] and multi-level lookup
https://github.com/dotnet/cli/issues/10153
- [x] ASP.NET's native code to locate the hostfxr 
https://github.com/aspnet/IISIntegration/issues/1566

_Documentation:_
- [ ] Advertise the dynamic VS/SDK install folder change
https://github.com/dotnet/cli/issues/10152

_Testing:_

SDK bundle 'other-volume' testing...
To install the SDK bundle to another volume:
Example:




</Description>
    <Title_Description>Flexibility in SDK install folder As a Visual Studio user I can specify the folder for the .NET Core SDK that is different from c:\program files\dotnet so that I can reduce the footprint on the system drive.
_________________________________
Visual Studio will have flexibility in its installation location - therefore SDK will also have flexibility in its installation location.

**Scenarios**
Installations:
1. an SDK installation chained from a Visual Studio installation instance
2. a 'stand-alone' SDK installation
_________________________________
**Work Items**

_SetUp work items [area-Setup]:_
- [ ] Visual Studio installer communicates the install folder to the SDK MSI
https://github.com/dotnet/cli/issues/10157
- [x] Manage the SDK bundle installation locations
https://github.com/dotnet/cli/issues/10156
- [x] The SDK bundle installer Procedure [Windows]
https://github.com/dotnet/cli/issues/10155
- [x] SDK resolver in Visual Studio &amp; command shell experience
https://github.com/dotnet/cli/issues/10243
- [x] Add properties to override default location for shared framework installer in Windows
https://github.com/aspnet/AspNetCore/issues/3697
- [x] The Runtime bundle installer Procedure [Windows]
not needed at this time - @rakeshsinghranchi

_Host work items [area-Host]:_
- [x] Runtime dynamic multilevel lookup - muxer
https://github.com/dotnet/core-setup/issues/4637
- [x] SDK muxer [the host] and multi-level lookup
https://github.com/dotnet/cli/issues/10153
- [x] ASP.NET's native code to locate the hostfxr 
https://github.com/aspnet/IISIntegration/issues/1566

_Documentation:_
- [ ] Advertise the dynamic VS/SDK install folder change
https://github.com/dotnet/cli/issues/10152

_Testing:_

SDK bundle 'other-volume' testing...
To install the SDK bundle to another volume:
Example:




</Title_Description>
    <Label>Epic</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10099</IssueLabelID>
    <Title>Add the Razor SDK to the versions to update</Title>
    <Description>- If this PR should not run tests please add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Please add description for changes you are making.
- If there is an issue related to this PR please add the reference.
</Description>
    <Title_Description>Add the Razor SDK to the versions to update - If this PR should not run tests please add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Please add description for changes you are making.
- If there is an issue related to this PR please add the reference.
</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>4/10/2018 2:51:17 PM +00:00</CreatedAt>
    <ClosedAt>4/10/2018 7:50:25 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10092</IssueLabelID>
    <Title>Adding NU5123 to the NOWARN list.</Title>
    <Description>Adding NU5123 to the NOWARN list. This was a new warning introduced by NuGet that we started hitting when upgrading to a newer SDK.

This is breaking source build.

Fixes https://github.com/dotnet/cli/issues/10052
</Description>
    <Title_Description>Adding NU5123 to the NOWARN list. Adding NU5123 to the NOWARN list. This was a new warning introduced by NuGet that we started hitting when upgrading to a newer SDK.

This is breaking source build.

Fixes https://github.com/dotnet/cli/issues/10052
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>3/10/2018 7:01:30 PM +00:00</CreatedAt>
    <ClosedAt>5/10/2018 11:15:14 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10090</IssueLabelID>
    <Title>Simplify opensuse docker image</Title>
    <Description>Update base image and remove redundant install</Description>
    <Title_Description>Simplify opensuse docker image Update base image and remove redundant install</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>3/10/2018 6:20:00 PM +00:00</CreatedAt>
    <ClosedAt>3/10/2018 8:11:21 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10089</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>3/10/2018 6:12:34 PM +00:00</CreatedAt>
    <ClosedAt>16/10/2018 8:52:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10086</IssueLabelID>
    <Title>Support commands to download targeting and runtime packs</Title>
    <Description>For .NET Core 3.0 we expect to separate [targeting packs](#10006) which contain the assets needed at build time when targeting .NET Core 3.0 from [runtime packs](#10007) which will include the platform-specific runtime components for .NET Core 3 which are deployed with self-contained apps.

Targeting packs will ship as part of the .NET Core SDK and targeting packs and runtime packs will be acquired during restore as necessary via ["download only package references"](https://github.com/NuGet/Home/issues/7339).

In addition we could also support explicit CLI commands to download targeting and runtime packs something like the following:

- 

These commands would basically download the relevant packages to the local NuGet cache.  This could be useful for scenarios where you are going to go offline or want to publish a self-contained app without restoring.

An alternative to these commands would be to build or publish a project targeting the desired framework / RID so we currently don't think we need to add these commands.  However this issue tracks the idea.</Description>
    <Title_Description>Support commands to download targeting and runtime packs For .NET Core 3.0 we expect to separate [targeting packs](#10006) which contain the assets needed at build time when targeting .NET Core 3.0 from [runtime packs](#10007) which will include the platform-specific runtime components for .NET Core 3 which are deployed with self-contained apps.

Targeting packs will ship as part of the .NET Core SDK and targeting packs and runtime packs will be acquired during restore as necessary via ["download only package references"](https://github.com/NuGet/Home/issues/7339).

In addition we could also support explicit CLI commands to download targeting and runtime packs something like the following:

- 

These commands would basically download the relevant packages to the local NuGet cache.  This could be useful for scenarios where you are going to go offline or want to publish a self-contained app without restoring.

An alternative to these commands would be to build or publish a project targeting the desired framework / RID so we currently don't think we need to add these commands.  However this issue tracks the idea.</Title_Description>
    <Label>enhancement</Label>
    <CreatedAt>3/10/2018 1:01:30 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10085</IssueLabelID>
    <Title>Consume targeting packs at build time</Title>
    <Description>Once we have targeting packs (see #10006) for the shared frameworks and .NET Standard we need to update the SDK to consume them at build time.  This will involve:

- Resolving targeting packs that are installed with the .NET Core SDK
- Adding a ["download only" package reference](https://github.com/NuGet/Home/issues/7339) to the targeting pack if it isn't installed with the .NET Core SDK so that restore will download it
- Use assets from targeting pack in the build</Description>
    <Title_Description>Consume targeting packs at build time Once we have targeting packs (see #10006) for the shared frameworks and .NET Standard we need to update the SDK to consume them at build time.  This will involve:

- Resolving targeting packs that are installed with the .NET Core SDK
- Adding a ["download only" package reference](https://github.com/NuGet/Home/issues/7339) to the targeting pack if it isn't installed with the .NET Core SDK so that restore will download it
- Use assets from targeting pack in the build</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10083</IssueLabelID>
    <Title>Get tasks and targets for WPF ported so that projects can built with the .NET Core SDK</Title>
    <Description>
    </Description>
    <Title_Description>Get tasks and targets for WPF ported so that projects can built with the .NET Core SDK 





</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10081</IssueLabelID>
    <Title>Review all user facing string from ToolManifest and dotnet-tool/restore</Title>
    <Description>https://github.com/dotnet/cli/blob/master/src/dotnet/ToolManifest/LocalizableStrings.resx

https://github.com/dotnet/cli/blob/master/src/dotnet/commands/dotnet-tool/restore/LocalizableStrings.resx</Description>
    <Title_Description>Review all user facing string from ToolManifest and dotnet-tool/restore https://github.com/dotnet/cli/blob/master/src/dotnet/ToolManifest/LocalizableStrings.resx

https://github.com/dotnet/cli/blob/master/src/dotnet/commands/dotnet-tool/restore/LocalizableStrings.resx</Title_Description>
    <Label>tool</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10080</IssueLabelID>
    <Title>Updating CLI branding to 2.1.404</Title>
    <Description>
    </Description>
    <Title_Description>Updating CLI branding to 2.1.404 </Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>2/10/2018 6:19:04 PM +00:00</CreatedAt>
    <ClosedAt>3/10/2018 7:04:54 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10079</IssueLabelID>
    <Title>As a .NET Core user (VS or not) I can specify icon and activation host for my windows executable</Title>
    <Description>Tracks customization capabilities to the host particularly for windows executables.</Description>
    <Title_Description>As a .NET Core user (VS or not) I can specify icon and activation host for my windows executable Tracks customization capabilities to the host particularly for windows executables.</Title_Description>
    <Label>Epic</Label>
    <CreatedAt>2/10/2018 12:18:51 AM +00:00</CreatedAt>
    <ClosedAt>3/12/2018 11:06:06 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10078</IssueLabelID>
    <Title>Write a new CTI test for icon setting on Windows GUI applications</Title>
    <Description>
    </Description>
    <Title_Description>Write a new CTI test for icon setting on Windows GUI applications </Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10077</IssueLabelID>
    <Title>Write one page document describing changes to make build more like publish</Title>
    <Description>We need to have a small document that describes the high level changes we are making to make build more like publish.</Description>
    <Title_Description>Write one page document describing changes to make build more like publish We need to have a small document that describes the high level changes we are making to make build more like publish.</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10073</IssueLabelID>
    <Title>Add retry to download</Title>
    <Description>Reuse retry code from https://github.com/dotnet/cli/commit/7f54ccb903f43cd7c8a8b774a4d3e84cecf1064a

That PR is reverted later due to no need for publish deb to the feed.</Description>
    <Title_Description>Add retry to download Reuse retry code from https://github.com/dotnet/cli/commit/7f54ccb903f43cd7c8a8b774a4d3e84cecf1064a

That PR is reverted later due to no need for publish deb to the feed.</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>1/10/2018 7:23:53 PM +00:00</CreatedAt>
    <ClosedAt>3/10/2018 7:37:23 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10072</IssueLabelID>
    <Title>Typos/spelling errors in XML doc comments and markdown. #Hacktoberfest</Title>
    <Description>skipciplease skipci please

Typos/spelling errors in XML doc comments and markdown. #Hacktoberfest

Going for a nice t-shirt.

Here's some typos/spelling errors I found in this repo.

Happy #Hacktoberfest :smiley_cat: :fearful: :skull_and_crossbones: :moon: :bat: 

Thanks
Brian

:beach_umbrella: :trumpet: **[Beach Boys - Good Vibrations (Nick Warren bootleg)](https://www.youtube.com/watch?v=PZiV-Sd2uOs)**
</Description>
    <Title_Description>Typos/spelling errors in XML doc comments and markdown. #Hacktoberfest skipciplease skipci please

Typos/spelling errors in XML doc comments and markdown. #Hacktoberfest

Going for a nice t-shirt.

Here's some typos/spelling errors I found in this repo.

Happy #Hacktoberfest :smiley_cat: :fearful: :skull_and_crossbones: :moon: :bat: 

Thanks
Brian

:beach_umbrella: :trumpet: **[Beach Boys - Good Vibrations (Nick Warren bootleg)](https://www.youtube.com/watch?v=PZiV-Sd2uOs)**
</Title_Description>
    <Label>community</Label>
    <CreatedAt>1/10/2018 6:53:12 PM +00:00</CreatedAt>
    <ClosedAt>3/10/2018 7:05:50 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10070</IssueLabelID>
    <Title>update year in license</Title>
    <Description>- Changed the year in the license file. Now it's up to date.
- Solves #10069 
</Description>
    <Title_Description>update year in license - Changed the year in the license file. Now it's up to date.
- Solves #10069 
</Title_Description>
    <Label>Pending discussion</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>1/10/2018 8:27:26 AM +00:00</CreatedAt>
    <ClosedAt>19/01/2019 11:33:08 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10066</IssueLabelID>
    <Title>ZSH completion breaks path completion</Title>
    <Description>https://github.com/dotnet/cli/blob/7af1d28dd72fb933966e6201414dc8df6753fcd3/scripts/register-completions.zsh#L10

If I'm not missing something this indeed helps to autocomplete commands for  but equally it will break normal path completion.</Description>
    <Title_Description>ZSH completion breaks path completion https://github.com/dotnet/cli/blob/7af1d28dd72fb933966e6201414dc8df6753fcd3/scripts/register-completions.zsh#L10

If I'm not missing something this indeed helps to autocomplete commands for  but equally it will break normal path completion.</Title_Description>
    <Label>help wanted</Label>
    <CreatedAt>29/09/2018 7:07:52 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10064</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>28/09/2018 5:42:18 PM +00:00</CreatedAt>
    <ClosedAt>3/10/2018 5:43:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10062</IssueLabelID>
    <Title>Tool restore pending works</Title>
    <Description>Fix https://github.com/dotnet/cli/issues/10032 . Review commit by commit is much easier

-  success message after dotnet tool restore
-  Avoid restore every thing in manifest file only restore diff
-  IsRoot != true support for manifest file
-  should throw when manifest file version bigger than 1
-  Handling version missing case default to 1

</Description>
    <Title_Description>Tool restore pending works Fix https://github.com/dotnet/cli/issues/10032 . Review commit by commit is much easier

-  success message after dotnet tool restore
-  Avoid restore every thing in manifest file only restore diff
-  IsRoot != true support for manifest file
-  should throw when manifest file version bigger than 1
-  Handling version missing case default to 1

</Title_Description>
    <Label>tool</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/09/2018 10:28:20 PM +00:00</CreatedAt>
    <ClosedAt>3/10/2018 6:14:27 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10061</IssueLabelID>
    <Title>Copy local package dependencies on build.</Title>
    <Description>## Steps to reproduce

Currently package dependencies are probed from the NuGet cache for the build output at runtime.  While there is a measurable performance gain for not copying the files it inherently makes the build output not transferable from machine to machine thus requiring users to first "publish" for all projects even for projects where this is simply copying those dependencies locally.

With the intention being that the output of a build for most projects is copy-deployable (an additional publishing step to post-process the build output notwithstanding for certain project types) the NuGet dependencies should also be copied local like they would for today's "publish" operation.  As we start generating an executable by default for 

## Expected  behavior

The build directory contains package dependencies locally.  For framework-dependent applications this means all but the runtime package dependencies.

## Actual behavior

The package dependencies are sourced from the NuGet cache.





</Description>
    <Title_Description>Copy local package dependencies on build. ## Steps to reproduce

Currently package dependencies are probed from the NuGet cache for the build output at runtime.  While there is a measurable performance gain for not copying the files it inherently makes the build output not transferable from machine to machine thus requiring users to first "publish" for all projects even for projects where this is simply copying those dependencies locally.

With the intention being that the output of a build for most projects is copy-deployable (an additional publishing step to post-process the build output notwithstanding for certain project types) the NuGet dependencies should also be copied local like they would for today's "publish" operation.  As we start generating an executable by default for 

## Expected  behavior

The build directory contains package dependencies locally.  For framework-dependent applications this means all but the runtime package dependencies.

## Actual behavior

The package dependencies are sourced from the NuGet cache.





</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10059</IssueLabelID>
    <Title>tools path are not in the env PATH Azure DevOps VMs</Title>
    <Description>https://github.com/dotnet/cli/issues/8368#issuecomment-424963647
</Description>
    <Title_Description>tools path are not in the env PATH Azure DevOps VMs https://github.com/dotnet/cli/issues/8368#issuecomment-424963647
</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10055</IssueLabelID>
    <Title>dotnet tool install of local tool fails due to NU1212</Title>
    <Description>## Steps to reproduce
*  output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.402
 Commit:    3599f217f4

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.402\

Host (useful for support):
  Version: 2.1.4
  Commit:  85255dde3e

.NET Core SDKs installed:
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Description>
    <Title_Description>dotnet tool install of local tool fails due to NU1212 ## Steps to reproduce
*  output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.402
 Commit:    3599f217f4

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.402\

Host (useful for support):
  Version: 2.1.4
  Commit:  85255dde3e

.NET Core SDKs installed:
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.402 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Title_Description>
    <Label>tool</Label>
    <CreatedAt>27/09/2018 3:22:36 AM +00:00</CreatedAt>
    <ClosedAt>28/09/2018 4:58:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10053</IssueLabelID>
    <Title>dotnet commands that do an implicit restore don't support --interactive flag</Title>
    <Description>## Steps to reproduce




</Description>
    <Title_Description>dotnet commands that do an implicit restore don't support --interactive flag ## Steps to reproduce




</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10052</IssueLabelID>
    <Title>Building release/2.1.4xx branch using 2.1.402 SDK fails due to NU5123</Title>
    <Description>This showed up in source-build fixed by [a patch](https://github.com/dotnet/source-build/blob/8e382759a35a44cb18973c8af695a9ebef5db354/patches/cli/0002-Ignore-NU5123-build-failure-with-SDK-2.1.402.patch) for 




</Description>
    <Title_Description>Building release/2.1.4xx branch using 2.1.402 SDK fails due to NU5123 This showed up in source-build fixed by [a patch](https://github.com/dotnet/source-build/blob/8e382759a35a44cb18973c8af695a9ebef5db354/patches/cli/0002-Ignore-NU5123-build-failure-with-SDK-2.1.402.patch) for 




</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10050</IssueLabelID>
    <Title>Microsoft.DotNet.Cli.Build.DownloadFile has no retry logic and will fail CLI build for any loss of connection to server</Title>
    <Description>@dotnet-mc-bot commented on [Wed Sep 26 2018](https://github.com/dotnet/core-eng/issues/4241)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2063339
  - **Agent:** DDVSOWINAGE015
  - **Error log:** 1&gt;E:\A\_work\0\s\build\Prepare.targets(00): error MSB4018: The "DownloadFile" task failed unexpectedly. [E:\A\_work\0\s\build.proj]...

@jcagme @markwilkie


---

@MattGal commented on [Wed Sep 26 2018](https://github.com/dotnet/core-eng/issues/4241#issuecomment-424754206)

This is a failure in code trying to download a blob in https://github.com/dotnet/cli/blob/release/2.1.2xx/build_projects/dotnet-cli-build/DownloadFile.cs#L51 hitting a temporary network interruption ()and choosing to throw an exception instead of retry. 

As the code is all in the cli's repo itself there's nothing DncEng can do about this so I will migrate this to their repo for triage.

</Description>
    <Title_Description>Microsoft.DotNet.Cli.Build.DownloadFile has no retry logic and will fail CLI build for any loss of connection to server @dotnet-mc-bot commented on [Wed Sep 26 2018](https://github.com/dotnet/core-eng/issues/4241)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=2063339
  - **Agent:** DDVSOWINAGE015
  - **Error log:** 1&gt;E:\A\_work\0\s\build\Prepare.targets(00): error MSB4018: The "DownloadFile" task failed unexpectedly. [E:\A\_work\0\s\build.proj]...

@jcagme @markwilkie


---

@MattGal commented on [Wed Sep 26 2018](https://github.com/dotnet/core-eng/issues/4241#issuecomment-424754206)

This is a failure in code trying to download a blob in https://github.com/dotnet/cli/blob/release/2.1.2xx/build_projects/dotnet-cli-build/DownloadFile.cs#L51 hitting a temporary network interruption ()and choosing to throw an exception instead of retry. 

As the code is all in the cli's repo itself there's nothing DncEng can do about this so I will migrate this to their repo for triage.

</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10048</IssueLabelID>
    <Title>As a .NET Core user (VS or not) I can target shared frameworks</Title>
    <Description>This covers the work for composable shared frameworks runtime packs and targeting packs.

&gt; **NOTE**: This is a [ZenHub](https://zenhub.com/) epic. Install the browser extension to see all of the child issues.
</Description>
    <Title_Description>As a .NET Core user (VS or not) I can target shared frameworks This covers the work for composable shared frameworks runtime packs and targeting packs.

&gt; **NOTE**: This is a [ZenHub](https://zenhub.com/) epic. Install the browser extension to see all of the child issues.
</Title_Description>
    <Label>Epic</Label>
    <CreatedAt>25/09/2018 10:50:02 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10043</IssueLabelID>
    <Title>Generate apphost for default build.</Title>
    <Description>## Steps to reproduce

1.  output:






</Description>
    <Title_Description>Generate apphost for default build. ## Steps to reproduce

1.  output:






</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10041</IssueLabelID>
    <Title>Make .NET Core SDK build experience more consistent with the publish experience</Title>
    <Description>## Steps to reproduce

1.  output:






</Description>
    <Title_Description>Make .NET Core SDK build experience more consistent with the publish experience ## Steps to reproduce

1.  output:






</Title_Description>
    <Label>Epic</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10040</IssueLabelID>
    <Title>tools security review</Title>
    <Description>
    </Description>
    <Title_Description>tools security review 





</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10039</IssueLabelID>
    <Title>Avoid setting dotnet tool path permanently during test</Title>
    <Description>On Windows dotnet will try to add dotnet tool path to registry whenever when it is not on the path. Although there is sentinel file that can also control it adding it to child process environment during test command creation is more bullet proof. We also don’t need to clean up sentinel file.
</Description>
    <Title_Description>Avoid setting dotnet tool path permanently during test On Windows dotnet will try to add dotnet tool path to registry whenever when it is not on the path. Although there is sentinel file that can also control it adding it to child process environment during test command creation is more bullet proof. We also don’t need to clean up sentinel file.
</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>22/09/2018 10:48:56 PM +00:00</CreatedAt>
    <ClosedAt>24/09/2018 6:11:52 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10038</IssueLabelID>
    <Title>why is HKEY_USERS\.DEFAULT\Environment Path modified by the sdk setup?</Title>
    <Description>@rgl commented on [Fri Sep 14 2018](https://github.com/dotnet/core/issues/1942)

why is the  user -- the user that installed the dotnetcore sdk).

</Description>
    <Title_Description>why is HKEY_USERS\.DEFAULT\Environment Path modified by the sdk setup? @rgl commented on [Fri Sep 14 2018](https://github.com/dotnet/core/issues/1942)

why is the  user -- the user that installed the dotnetcore sdk).

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10037</IssueLabelID>
    <Title>Can't target framework 2.1.3 after being upgraded to 2.1.4</Title>
    <Description>@dennyChandler commented on [Fri Sep 21 2018](https://github.com/dotnet/core/issues/1958)

I started developing a new website prior to .net core framework 2.1.4 was released we got our production environment all set up with "Coming Soon" pages etc.

As this server hosts other sites we do not want to restart for an upgrade to 2.1.4 so I updated the csproj file with

    &lt;RuntimeFrameworkVersion&gt;2.1.3&lt;/RuntimeFrameworkVersion&gt;

I also checked the NuGet packages for Microsoft.NETCore.App and it is set to 2.1.3

I even went so far as to uninstall Microsoft .NET Core Runtime 2.1.402 from my dev machine

Yet when I publish the site and copy it to the folder on the host it still logs

&gt; It was not possible to find any compatible framework version The specified framework 'Microsoft.NETCore.App' version '2.1.4' was not found. 
&gt; - Check application dependencies and target a framework version installed at: "PATH" 
&gt; - Installing .NET Core prerequisites might help resolve this problem: http://go.microsoft.com/fwlink/?LinkID=798306&amp;clcid=0x409 
&gt; - The .NET Core framework and SDK can be installed from: https://aka.ms/dotnet-download 
&gt; - The following versions are installed: 
&gt; 1.0.4 at [C:\Program Files\dotnet\shared\Microsoft.NETCore.App] 
&gt; 1.1.1 at [C:\Program Files\dotnet\shared\Microsoft.NETCore.App] 
&gt; 2.1.2 at [C:\Program Files\dotnet\shared\Microsoft.NETCore.App] 
&gt; 2.1.3 at [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]


I'm not sure if this is the right place to report this but I am out of options at this point... So sorry if I'm at the wrong place.

---

@Petermarcu commented on [Sat Sep 22 2018](https://github.com/dotnet/core/issues/1958#issuecomment-423760799)

/cc @livarcocc @dsplaisted 

It sounds like 2.1.4 is getting burned into your deps file. Can you search for it in there in your published application? Published applications that run on the shared framework are supposed to specify 2.0.0 as the min version. I wonder if this is a regression in the tooling due to recent changes to try to keep more people up to date by default.



</Description>
    <Title_Description>Can't target framework 2.1.3 after being upgraded to 2.1.4 @dennyChandler commented on [Fri Sep 21 2018](https://github.com/dotnet/core/issues/1958)

I started developing a new website prior to .net core framework 2.1.4 was released we got our production environment all set up with "Coming Soon" pages etc.

As this server hosts other sites we do not want to restart for an upgrade to 2.1.4 so I updated the csproj file with

    &lt;RuntimeFrameworkVersion&gt;2.1.3&lt;/RuntimeFrameworkVersion&gt;

I also checked the NuGet packages for Microsoft.NETCore.App and it is set to 2.1.3

I even went so far as to uninstall Microsoft .NET Core Runtime 2.1.402 from my dev machine

Yet when I publish the site and copy it to the folder on the host it still logs

&gt; It was not possible to find any compatible framework version The specified framework 'Microsoft.NETCore.App' version '2.1.4' was not found. 
&gt; - Check application dependencies and target a framework version installed at: "PATH" 
&gt; - Installing .NET Core prerequisites might help resolve this problem: http://go.microsoft.com/fwlink/?LinkID=798306&amp;clcid=0x409 
&gt; - The .NET Core framework and SDK can be installed from: https://aka.ms/dotnet-download 
&gt; - The following versions are installed: 
&gt; 1.0.4 at [C:\Program Files\dotnet\shared\Microsoft.NETCore.App] 
&gt; 1.1.1 at [C:\Program Files\dotnet\shared\Microsoft.NETCore.App] 
&gt; 2.1.2 at [C:\Program Files\dotnet\shared\Microsoft.NETCore.App] 
&gt; 2.1.3 at [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]


I'm not sure if this is the right place to report this but I am out of options at this point... So sorry if I'm at the wrong place.

---

@Petermarcu commented on [Sat Sep 22 2018](https://github.com/dotnet/core/issues/1958#issuecomment-423760799)

/cc @livarcocc @dsplaisted 

It sounds like 2.1.4 is getting burned into your deps file. Can you search for it in there in your published application? Published applications that run on the shared framework are supposed to specify 2.0.0 as the min version. I wonder if this is a regression in the tooling due to recent changes to try to keep more people up to date by default.



</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10036</IssueLabelID>
    <Title>Remove Get-CimInstance dependency from dotnet-install.ps1</Title>
    <Description>Get-CimInstance is not supported on Windows 7 and Windows Server Nano edition.
Using Get-PSDrive instead fixes the issue.
</Description>
    <Title_Description>Remove Get-CimInstance dependency from dotnet-install.ps1 Get-CimInstance is not supported on Windows 7 and Windows Server Nano edition.
Using Get-PSDrive instead fixes the issue.
</Title_Description>
    <Label>Install-Script</Label>
    <CreatedAt>21/09/2018 11:56:15 PM +00:00</CreatedAt>
    <ClosedAt>26/09/2018 4:57:30 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10032</IssueLabelID>
    <Title>Pending issues for dotnet tool restore</Title>
    <Description>- [ ] success message after dotnet tool restore
- [ ] Avoid restore every thing in manifest file only restore diff
- [ ] IsRoot != true support for manifest file
- [ ] should print warning when manifest file version bigger than 1
- [ ] Handling version missing case


</Description>
    <Title_Description>Pending issues for dotnet tool restore - [ ] success message after dotnet tool restore
- [ ] Avoid restore every thing in manifest file only restore diff
- [ ] IsRoot != true support for manifest file
- [ ] should print warning when manifest file version bigger than 1
- [ ] Handling version missing case


</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10029</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/09/2018 12:01:01 AM +00:00</CreatedAt>
    <ClosedAt>28/09/2018 5:18:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10028</IssueLabelID>
    <Title>Dotnet list package command</Title>
    <Description>See https://github.com/dotnet/cli/pull/9935 for previous PR.  This is a continuation due to an error I made when squashing the PR's commits.

&gt; This PR adds the code for dotnet list package command as described in this spec https://github.com/NuGet/Home/wiki/dotnet-list-package
&gt; 
&gt; The tests here will fail since this this will use a version of NuGet that does not support list. @rohit21agrawal can help with changes to make the tests run as expected and with changes.</Description>
    <Title_Description>Dotnet list package command See https://github.com/dotnet/cli/pull/9935 for previous PR.  This is a continuation due to an error I made when squashing the PR's commits.

&gt; This PR adds the code for dotnet list package command as described in this spec https://github.com/NuGet/Home/wiki/dotnet-list-package
&gt; 
&gt; The tests here will fail since this this will use a version of NuGet that does not support list. @rohit21agrawal can help with changes to make the tests run as expected and with changes.</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>20/09/2018 5:29:36 PM +00:00</CreatedAt>
    <ClosedAt>20/09/2018 8:04:46 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10024</IssueLabelID>
    <Title>*WIP* Update task feed package to latest version.</Title>
    <Description>Closes: dotnet/core-eng#4213</Description>
    <Title_Description>*WIP* Update task feed package to latest version. Closes: dotnet/core-eng#4213</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/09/2018 10:23:46 PM +00:00</CreatedAt>
    <ClosedAt>20/09/2018 6:42:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10023</IssueLabelID>
    <Title>Improve runtime configuration documentation</Title>
    <Description>Update the samples to look like 2.1 files generated by the tools.
Fix inconsistencies in the document.
Update parts which were still from the 1.0 era.
Adds description of properties and sections which were missing.
Update the description of dependencies and how they're used to match 2.1 behavior.</Description>
    <Title_Description>Improve runtime configuration documentation Update the samples to look like 2.1 files generated by the tools.
Fix inconsistencies in the document.
Update parts which were still from the 1.0 era.
Adds description of properties and sections which were missing.
Update the description of dependencies and how they're used to match 2.1 behavior.</Title_Description>
    <Label>documentation</Label>
    <Assignee>vitek-karas</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10022</IssueLabelID>
    <Title>Resolver not failing when min msbuild version is specified.</Title>
    <Description>## Steps to reproduce
1. Create a new console app in VS
2.	Update the content of minimumMSBuildVersion to 9999.3.0;
3.	Reload the project

## Expected  behavior
There is 1 error in error list window:
_





</Description>
    <Title_Description>Resolver not failing when min msbuild version is specified. ## Steps to reproduce
1. Create a new console app in VS
2.	Update the content of minimumMSBuildVersion to 9999.3.0;
3.	Reload the project

## Expected  behavior
There is 1 error in error list window:
_





</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10021</IssueLabelID>
    <Title>Always use the suffixed version for the 'VS' NuPkgs</Title>
    <Description>Always use the suffixed version for the 'VS.Redist.Common.Net.Core.SDK.*' files &amp; publish them.

**build/Publish.targets:**
publish the 'VS' NuPkgs

**build/Version.props:**
define: 'SuffixedNugetVersion'

**build/package/Installer.MSI.targets:**
use: 'SuffixedNugetVersion' for the 'VS' NuPkgs</Description>
    <Title_Description>Always use the suffixed version for the 'VS' NuPkgs Always use the suffixed version for the 'VS.Redist.Common.Net.Core.SDK.*' files &amp; publish them.

**build/Publish.targets:**
publish the 'VS' NuPkgs

**build/Version.props:**
define: 'SuffixedNugetVersion'

**build/package/Installer.MSI.targets:**
use: 'SuffixedNugetVersion' for the 'VS' NuPkgs</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10018</IssueLabelID>
    <Title>Add ImplicitPackageReferenceVersion items to bundled versions file</Title>
    <Description>Adds </Description>
    <Title_Description>Add ImplicitPackageReferenceVersion items to bundled versions file Adds </Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>18/09/2018 12:21:32 AM +00:00</CreatedAt>
    <ClosedAt>18/09/2018 10:41:04 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10013</IssueLabelID>
    <Title>Dotnet run for mvc web webapi failed on OpenSuse 42.3 with sdk 1.1.11</Title>
    <Description>## Steps to reproduce
Install sdk 1.1.11-msrc-fnl-005294 on OpenSuse 42.3
dotnet new mvc or web or webapi
dotnet run to observe

## Expected  behavior
Dotnet run works fine

## Actual behavior
Dotnet run failed with below error text

nicole@opensuse-1:~/mymvc&gt; dotnet run
crit: Microsoft.AspNetCore.Server.Kestrel[0]
      Unable to start Kestrel.
System.AggregateException: One or more errors occurred. (Unable to load DLL 'libuv': The specified module could not be found.
 (Exception from HRESULT: 0x8007007E)) ---&gt; System.DllNotFoundException: Unable to load DLL 'libuv': The specified module could not be found.
 (Exception from HRESULT: 0x8007007E)
   at Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.Libuv.NativeMethods.uv_loop_size()
   at Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.UvLoopHandle.Init(Libuv uv)
   at Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelThread.ThreadStart(Object parameter)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelEngine.Start(Int32 count)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelServer.Start[TContext](IHttpApplication output:

.NET Command Line Tools (1.1.11)

Product Information:
 Version:            1.1.11
 Commit SHA-1 hash:  d2610b5786

Runtime Environment:
 OS Name:     opensuse
 OS Version:  42.3
 OS Platform: Linux
 RID:         opensuse.42.3-x64
 Base Path:   /home/nicole/mytest/sdk/1.1.11
</Description>
    <Title_Description>Dotnet run for mvc, web, webapi failed on OpenSuse 42.3 with sdk 1.1.11 ## Steps to reproduce
Install sdk 1.1.11-msrc-fnl-005294 on OpenSuse 42.3
dotnet new mvc or web or webapi
dotnet run to observe

## Expected  behavior
Dotnet run works fine

## Actual behavior
Dotnet run failed with below error text

nicole@opensuse-1:~/mymvc&gt; dotnet run
crit: Microsoft.AspNetCore.Server.Kestrel[0]
      Unable to start Kestrel.
System.AggregateException: One or more errors occurred. (Unable to load DLL 'libuv': The specified module could not be found.
 (Exception from HRESULT: 0x8007007E)) ---&gt; System.DllNotFoundException: Unable to load DLL 'libuv': The specified module could not be found.
 (Exception from HRESULT: 0x8007007E)
   at Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.Libuv.NativeMethods.uv_loop_size()
   at Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.UvLoopHandle.Init(Libuv uv)
   at Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelThread.ThreadStart(Object parameter)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelEngine.Start(Int32 count)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelServer.Start[TContext](IHttpApplication output:

.NET Command Line Tools (1.1.11)

Product Information:
 Version:            1.1.11
 Commit SHA-1 hash:  d2610b5786

Runtime Environment:
 OS Name:     opensuse
 OS Version:  42.3
 OS Platform: Linux
 RID:         opensuse.42.3-x64
 Base Path:   /home/nicole/mytest/sdk/1.1.11
</Title_Description>
    <Label>release blocking</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10010</IssueLabelID>
    <Title>Add DekstopUI runtime to install scripts</Title>
    <Description>We are adding a new runtime to dotnet core for Dekstop UI apps.

We need to add this new runtime to the acquisition scripts.</Description>
    <Title_Description>Add DekstopUI runtime to install scripts We are adding a new runtime to dotnet core for Dekstop UI apps.

We need to add this new runtime to the acquisition scripts.</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10007</IssueLabelID>
    <Title>Runtime pack support for .NET Core 3.0</Title>
    <Description>For .NET Core 3.0 we expect to separate targeting packs which contain the assets needed at build time when targeting .NET Core 3.0 from "runtime packs" which will include the platform-specific runtime components for .NET Core 3 which are deployed with self-contained apps.

This issue tracks the work required in order to support runtime packs.  This includes:

- Figuring out the layout of runtime packs
- [Resolve runtime pack to use for self-contained publish (including RID)](https://github.com/dotnet/cli/issues/10095)
- [Consuming the assets from a runtime pack for self-contained publish](https://github.com/dotnet/cli/issues/10096)
- Creating the runtime packs for each supported shared framework:
  - .NET Core
  - ASP.NET Core
  - Microsoft.DesktopUI
- Potentially [supporting explicit runtime pack acquisition](https://github.com/dotnet/cli/issues/10086) (via a command such as </Description>
    <Title_Description>Runtime pack support for .NET Core 3.0 For .NET Core 3.0 we expect to separate targeting packs which contain the assets needed at build time when targeting .NET Core 3.0 from "runtime packs" which will include the platform-specific runtime components for .NET Core 3 which are deployed with self-contained apps.

This issue tracks the work required in order to support runtime packs.  This includes:

- Figuring out the layout of runtime packs
- [Resolve runtime pack to use for self-contained publish (including RID)](https://github.com/dotnet/cli/issues/10095)
- [Consuming the assets from a runtime pack for self-contained publish](https://github.com/dotnet/cli/issues/10096)
- Creating the runtime packs for each supported shared framework:
  - .NET Core
  - ASP.NET Core
  - Microsoft.DesktopUI
- Potentially [supporting explicit runtime pack acquisition](https://github.com/dotnet/cli/issues/10086) (via a command such as </Title_Description>
    <Label>Epic</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>14/09/2018 9:55:40 PM +00:00</CreatedAt>
    <ClosedAt>7/08/2019 4:33:25 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10006</IssueLabelID>
    <Title>Targeting pack support for .NET Core 3.0</Title>
    <Description>For .NET Core 3.0 we expect to separate targeting packs which contain the assets needed at build time when targeting .NET Core 3.0 (for example reference assemblies and intellisense documentation) from "runtime packs" which will include the platform-specific runtime components for .NET Core 3.

This issue tracks the work required in order to support targeting packs.  This may include:

- Figure out what the layout of targeting packs will be
- Create the targeting packs for each supported shared framework (as NuGet packages and msi apt-get etc installation packages)
  - [.NET Core](https://github.com/dotnet/core-setup/issues/4622)
  - [ASP.NET Core](https://github.com/aspnet/AspNetCore/issues/6501)
  - [Microsoft.WindowsDesktop.App](https://github.com/dotnet/core-setup/issues/4943)
  - [.NET Standard](https://github.com/dotnet/standard/issues/1051) (this is not a shared framework but the targeting pack should work in a similar way)
- [Bundle targeting packs in core-sdk](https://github.com/dotnet/cli/issues/10082)
- [Consume targeting packs at build time](https://github.com/dotnet/cli/issues/10085) - resolve targeting packs that ship with the SDK add "download only" package reference if need be
- [Supply RID graph for .NET Core 3.0 SDK](https://github.com/dotnet/cli/issues/10104)
- [Trim earlier versions of platform packages from NuGet graph](https://github.com/dotnet/cli/issues/10105)
- [Support explicit targeting pack acquisition](https://github.com/dotnet/cli/issues/10086) (ie via a command such as )
- [Support build logic which was previously in the package closure of Microsoft.AspNetCore.App](https://github.com/dotnet/cli/issues/10093)

Finer-grained issues for these tasks will be filed as necessary</Description>
    <Title_Description>Targeting pack support for .NET Core 3.0 For .NET Core 3.0 we expect to separate targeting packs which contain the assets needed at build time when targeting .NET Core 3.0 (for example reference assemblies and intellisense documentation) from "runtime packs" which will include the platform-specific runtime components for .NET Core 3.

This issue tracks the work required in order to support targeting packs.  This may include:

- Figure out what the layout of targeting packs will be
- Create the targeting packs for each supported shared framework (as NuGet packages and msi apt-get etc installation packages)
  - [.NET Core](https://github.com/dotnet/core-setup/issues/4622)
  - [ASP.NET Core](https://github.com/aspnet/AspNetCore/issues/6501)
  - [Microsoft.WindowsDesktop.App](https://github.com/dotnet/core-setup/issues/4943)
  - [.NET Standard](https://github.com/dotnet/standard/issues/1051) (this is not a shared framework but the targeting pack should work in a similar way)
- [Bundle targeting packs in core-sdk](https://github.com/dotnet/cli/issues/10082)
- [Consume targeting packs at build time](https://github.com/dotnet/cli/issues/10085) - resolve targeting packs that ship with the SDK add "download only" package reference if need be
- [Supply RID graph for .NET Core 3.0 SDK](https://github.com/dotnet/cli/issues/10104)
- [Trim earlier versions of platform packages from NuGet graph](https://github.com/dotnet/cli/issues/10105)
- [Support explicit targeting pack acquisition](https://github.com/dotnet/cli/issues/10086) (ie via a command such as )
- [Support build logic which was previously in the package closure of Microsoft.AspNetCore.App](https://github.com/dotnet/cli/issues/10093)

Finer-grained issues for these tasks will be filed as necessary</Title_Description>
    <Label>Epic</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>14/09/2018 9:49:59 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10003</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/09/2018 12:01:10 AM +00:00</CreatedAt>
    <ClosedAt>20/09/2018 6:06:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>10000</IssueLabelID>
    <Title>CLI "official" builds need to be modified to stop permanently adding variable the PATH variable on Windows</Title>
    <Description>## Steps to reproduce

Official builds in the Dotnet-Build Agent pool hit this issue.  It seems from the paths below every build adds several long paths to the PATH environment variable eventually choking the machine to death.

## Expected  behavior

The current running user's %PATH% environment variable should not increase in length during a build.

## Actual behavior
We end up with official build machines having the active user's PATH env variable be something like:


## Environment data

Server 2012 R2 VSTS build agents






</Description>
    <Title_Description>CLI "official" builds need to be modified to stop permanently adding variable the PATH variable on Windows ## Steps to reproduce

Official builds in the Dotnet-Build Agent pool hit this issue.  It seems from the paths below every build adds several long paths to the PATH environment variable eventually choking the machine to death.

## Expected  behavior

The current running user's %PATH% environment variable should not increase in length during a build.

## Actual behavior
We end up with official build machines having the active user's PATH env variable be something like:


## Environment data

Server 2012 R2 VSTS build agents






</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9998</IssueLabelID>
    <Title>NonSuffix ProdCon CLI builds should drop to a NonSuffix folder</Title>
    <Description>If ProdCon/Orchestrated = true; then 'FullNugetVersion' = 'NugetVersion' - therefore the SDK drop folder will have the non-suffix version if the actual version is non-suffix; plus manifests so ProdCon/Orchestrated can find the assets. The VS.Redist.Common.Net.Core.SDK*NuPkgs should not ship.

@mmitche 
The 'latest.version' and 'latest.coherent.version' pointer files are processed by 'FinishBuild.targets' by the CLI. However in a ProdCon build  - it has it's own mirror-like step for this that will need to understand when we are building non-suffix and act accordingly. Additionally the generation of the 'ReadMe' will need modification.</Description>
    <Title_Description>NonSuffix ProdCon CLI builds should drop to a NonSuffix folder If ProdCon/Orchestrated = true; then 'FullNugetVersion' = 'NugetVersion' - therefore the SDK drop folder will have the non-suffix version if the actual version is non-suffix; plus manifests so ProdCon/Orchestrated can find the assets. The VS.Redist.Common.Net.Core.SDK*NuPkgs should not ship.

@mmitche 
The 'latest.version' and 'latest.coherent.version' pointer files are processed by 'FinishBuild.targets' by the CLI. However in a ProdCon build  - it has it's own mirror-like step for this that will need to understand when we are building non-suffix and act accordingly. Additionally the generation of the 'ReadMe' will need modification.</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9990</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>13/09/2018 12:01:32 AM +00:00</CreatedAt>
    <ClosedAt>13/09/2018 11:43:26 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9986</IssueLabelID>
    <Title>Update core-setup and re-enable all sdk resolver tests</Title>
    <Description>* Update core-setup to 2.1.5-servicing-26911-03
* Re-unify hostfxr.dll used by resolver and runtime
* Re-enable all sdk resolver tests on all platforms

Fix #9851</Description>
    <Title_Description>Update core-setup and re-enable all sdk resolver tests * Update core-setup to 2.1.5-servicing-26911-03
* Re-unify hostfxr.dll used by resolver and runtime
* Re-enable all sdk resolver tests on all platforms

Fix #9851</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>12/09/2018 6:13:40 PM +00:00</CreatedAt>
    <ClosedAt>13/09/2018 8:02:59 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9983</IssueLabelID>
    <Title>Update dependencies for the 2.1.402 release.</Title>
    <Description>
    </Description>
    <Title_Description>Update dependencies for the 2.1.402 release. 
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>12/09/2018 12:31:20 AM +00:00</CreatedAt>
    <ClosedAt>12/09/2018 4:15:59 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9982</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>12/09/2018 12:01:32 AM +00:00</CreatedAt>
    <ClosedAt>16/10/2018 7:02:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9981</IssueLabelID>
    <Title>Installer metadata in ARP uses HTTP URLs release/2.1.4xx</Title>
    <Description>#### Description
SDK Windows installer metadata in ARP uses HTTP URLs instead of HTTPS
#### Customer Impact
http link is not secure.
#### Regression?
No
#### Risk
Low only installer metadata change

Issue:
https://github.com/dotnet/cli/issues/9977

Porting 2.2.1xx change https://github.com/dotnet/cli/pull/9857</Description>
    <Title_Description>Installer metadata in ARP uses HTTP URLs release/2.1.4xx #### Description
SDK Windows installer metadata in ARP uses HTTP URLs instead of HTTPS
#### Customer Impact
http link is not secure.
#### Regression?
No
#### Risk
Low only installer metadata change

Issue:
https://github.com/dotnet/cli/issues/9977

Porting 2.2.1xx change https://github.com/dotnet/cli/pull/9857</Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9980</IssueLabelID>
    <Title>Installer metadata in ARP uses HTTP URLs rel/1.1.0</Title>
    <Description>#### Description
SDK Windows installer metadata in ARP uses HTTP URLs instead of HTTPS
#### Customer Impact
http link is not secure.
#### Regression?
No
#### Risk
Low only installer metadata change

Issue:
https://github.com/dotnet/cli/issues/9977

Porting 2.2.1xx change https://github.com/dotnet/cli/pull/9857</Description>
    <Title_Description>Installer metadata in ARP uses HTTP URLs rel/1.1.0 #### Description
SDK Windows installer metadata in ARP uses HTTP URLs instead of HTTPS
#### Customer Impact
http link is not secure.
#### Regression?
No
#### Risk
Low only installer metadata change

Issue:
https://github.com/dotnet/cli/issues/9977

Porting 2.2.1xx change https://github.com/dotnet/cli/pull/9857</Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9979</IssueLabelID>
    <Title>SDK Windows installer metadata in ARP uses HTTP URLs instead of HTTPS rel/1.1.0</Title>
    <Description>#### Description
SDK Windows installer metadata in ARP uses HTTP URLs instead of HTTPS
#### Customer Impact
http link is not secure.
#### Regression?
No
#### Risk
Low only metadata change
</Description>
    <Title_Description>SDK Windows installer metadata in ARP uses HTTP URLs instead of HTTPS rel/1.1.0 #### Description
SDK Windows installer metadata in ARP uses HTTP URLs instead of HTTPS
#### Customer Impact
http link is not secure.
#### Regression?
No
#### Risk
Low only metadata change
</Title_Description>
    <Label>Servicing-consider</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9978</IssueLabelID>
    <Title>Simplify first run experience flags</Title>
    <Description>When DOTNET_CLI_TELEMETRY_OPTOUT is set to 1 or true SDK should not print the telemetry message notice.  When this behavior is corrected the SDK no longer needs the DOTNET_PRINT_TELEMETRY_MESSAGE environmental variable and it will no longer be checked or used. 

The reason of the flag is added: https://github.com/dotnet/cli/pull/6869#discussion_r122033436</Description>
    <Title_Description>Simplify first run experience flags When DOTNET_CLI_TELEMETRY_OPTOUT is set to 1 or true SDK should not print the telemetry message notice.  When this behavior is corrected the SDK no longer needs the DOTNET_PRINT_TELEMETRY_MESSAGE environmental variable and it will no longer be checked or used. 

The reason of the flag is added: https://github.com/dotnet/cli/pull/6869#discussion_r122033436</Title_Description>
    <Label>Epic</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9977</IssueLabelID>
    <Title>Windows Support and Help links are http.</Title>
    <Description>## Steps to reproduce
Install SDK or runtime go to Add/Remove programs cry.

## Expected  behavior

Help and Support links should be https

## Actual behavior

![dm1y5jwuyaa3qek](https://user-images.githubusercontent.com/796298/45380760-55a09f80-b5b8-11e8-91cd-ce3f63525eb8.jpg)

See https://github.com/dotnet/core-setup/issues/4559 for parent issue. @leecow wanted 3 issues :)


</Description>
    <Title_Description>Windows Support and Help links are http. ## Steps to reproduce
Install SDK or runtime go to Add/Remove programs cry.

## Expected  behavior

Help and Support links should be https

## Actual behavior

![dm1y5jwuyaa3qek](https://user-images.githubusercontent.com/796298/45380760-55a09f80-b5b8-11e8-91cd-ce3f63525eb8.jpg)

See https://github.com/dotnet/core-setup/issues/4559 for parent issue. @leecow wanted 3 issues :)


</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9976</IssueLabelID>
    <Title>Merge release/2.1.402-MSRC to release/2.1.4xx</Title>
    <Description>
    </Description>
    <Title_Description>Merge release/2.1.402-MSRC to release/2.1.4xx </Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>11/09/2018 5:41:55 PM +00:00</CreatedAt>
    <ClosedAt>11/09/2018 9:23:12 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9974</IssueLabelID>
    <Title>On WSL Ubuntu 18.04 dotnet tool install -g Cake.Tool and Octopus.DotNet.Cli fails</Title>
    <Description>The combination of WSL and Ubuntu 18.04 seems to cause issues with .NET global tools.

## Steps to reproduce
 using 2.1.401 on

* Docker
  - microsoft/dotnet:2.1-sdk
  - ubuntu:18.04
  - ubuntu:16.04
  - fedora:28
  - centos:centos7
* WSL
  - Ubuntu 16.04
  - openSuse Leap 42
  - Debian 9
* Windows
* Mac

So doesn't seem package related but rather a specific environment issue.</Description>
    <Title_Description>On WSL Ubuntu 18.04 dotnet tool install -g Cake.Tool and Octopus.DotNet.Cli fails The combination of WSL and Ubuntu 18.04 seems to cause issues with .NET global tools.

## Steps to reproduce
 using 2.1.401 on

* Docker
  - microsoft/dotnet:2.1-sdk
  - ubuntu:18.04
  - ubuntu:16.04
  - fedora:28
  - centos:centos7
* WSL
  - Ubuntu 16.04
  - openSuse Leap 42
  - Debian 9
* Windows
* Mac

So doesn't seem package related but rather a specific environment issue.</Title_Description>
    <Label>tool</Label>
    <CreatedAt>11/09/2018 7:58:56 AM +00:00</CreatedAt>
    <ClosedAt>9/10/2018 6:42:47 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9970</IssueLabelID>
    <Title>global tool - appsettings.json</Title>
    <Description>## Steps to reproduce

I am developing a global tool and the first thing it does is in it's entry point is load some configuration from a local  output:

&gt; Version:   2.1.401
 Commit:    91b1c13032

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.401\

Host (useful for support):
  Version: 2.1.3
  Commit:  124038c13e




</Description>
    <Title_Description>global tool - appsettings.json ## Steps to reproduce

I am developing a global tool and the first thing it does is in it's entry point is load some configuration from a local  output:

&gt; Version:   2.1.401
 Commit:    91b1c13032

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.401\

Host (useful for support):
  Version: 2.1.3
  Commit:  124038c13e




</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9968</IssueLabelID>
    <Title>Enable WeCoverLatestNetCoreAppRollForward when there is netcoreapp3.0 template</Title>
    <Description>That test assert default template(netcoreapp2.2) is supported in SDK. In master since netcoreapp2.2 cannot be restored from nuget(no release version). The test cannot pass.

When there is netcoreapp3.0 template inserted it should be resolved.</Description>
    <Title_Description>Enable WeCoverLatestNetCoreAppRollForward when there is netcoreapp3.0 template That test assert default template(netcoreapp2.2) is supported in SDK. In master since netcoreapp2.2 cannot be restored from nuget(no release version). The test cannot pass.

When there is netcoreapp3.0 template inserted it should be resolved.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9967</IssueLabelID>
    <Title>Create another PR in core-sdk 🐱</Title>
    <Description>https://github.com/dotnet/cli/pull/9872

Merged only CLI part. Rest of the merge need go in to core-sdk 
</Description>
    <Title_Description>Create another PR in core-sdk 🐱 https://github.com/dotnet/cli/pull/9872

Merged only CLI part. Rest of the merge need go in to core-sdk 
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9966</IssueLabelID>
    <Title>forward command is not forwarded in ToolUpdateCommand</Title>
    <Description>No counterpart as in
https://github.com/dotnet/cli/blob/release/2.2.1xx/src/dotnet/commands/dotnet-tool/install/ToolInstallCommand.cs#L68</Description>
    <Title_Description>forward command is not forwarded in ToolUpdateCommand No counterpart as in
https://github.com/dotnet/cli/blob/release/2.2.1xx/src/dotnet/commands/dotnet-tool/install/ToolInstallCommand.cs#L68</Title_Description>
    <Label>Bug</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9964</IssueLabelID>
    <Title>Refactoring add strong type to ToolCommandName</Title>
    <Description>Right now it is just string. And it is used separated enough to give it a strong type.</Description>
    <Title_Description>Refactoring, add strong type to ToolCommandName Right now it is just string. And it is used separated enough to give it a strong type.</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9961</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>7/09/2018 12:01:27 AM +00:00</CreatedAt>
    <ClosedAt>12/09/2018 10:12:49 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9960</IssueLabelID>
    <Title>Update SLA to clarify business days.</Title>
    <Description>Adding a clarifying  adjective where appropriate to expected time
periods.
</Description>
    <Title_Description>Update SLA to clarify business days. Adding a clarifying  adjective where appropriate to expected time
periods.
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>6/09/2018 10:06:57 PM +00:00</CreatedAt>
    <ClosedAt>7/09/2018 12:40:01 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9956</IssueLabelID>
    <Title>Update dependency updater (port from 2.2.1xx)</Title>
    <Description>- If this PR should not run tests please add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Please add description for changes you are making.
- If there is an issue related to this PR please add the reference.
</Description>
    <Title_Description>Update dependency updater (port from 2.2.1xx) - If this PR should not run tests please add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Please add description for changes you are making.
- If there is an issue related to this PR please add the reference.
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>6/09/2018 4:34:28 PM +00:00</CreatedAt>
    <ClosedAt>6/09/2018 9:33:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9955</IssueLabelID>
    <Title>dotnet run/test failed as .NETCore 1.1.2 was not found on sdk 1.1.11</Title>
    <Description>## Steps to reproduce
1. Install sdk 1.1.11-msrc-fnl-005292
2. dotnet new console or mstest
3. dotnet run/test to observe



## Expected  behavior
dotnet run/test works normally

## Actual behavior
dotnet run/test failed with as .NETCore 1.1.2 was not found
c:\nicole-test\myconsole&gt;dotnet run
The specified framework 'Microsoft.NETCore.App' version '1.1.2' was not found.
  - Check application dependencies and target a framework version installed at:
      C:\Program Files\dotnet\shared\Microsoft.NETCore.App
  - The following versions are installed:
      1.0.13-servicing-005091-00
      1.1.10-servicing-001782-00
  - Alternatively install the framework version '1.1.2'.

## Environment data
 output:
c:\nicole-test\myconsole&gt;dotnet run
The specified framework 'Microsoft.NETCore.App' version '1.1.2' was not found.
  - Check application dependencies and target a framework version installed at:
      C:\Program Files\dotnet\shared\Microsoft.NETCore.App
  - The following versions are installed:
      1.0.13-servicing-005091-00
      1.1.10-servicing-001782-00
  - Alternatively install the framework version '1.1.2'.





</Description>
    <Title_Description>dotnet run/test failed as .NETCore 1.1.2 was not found on sdk 1.1.11 ## Steps to reproduce
1. Install sdk 1.1.11-msrc-fnl-005292
2. dotnet new console or mstest
3. dotnet run/test to observe



## Expected  behavior
dotnet run/test works normally

## Actual behavior
dotnet run/test failed with as .NETCore 1.1.2 was not found
c:\nicole-test\myconsole&gt;dotnet run
The specified framework 'Microsoft.NETCore.App' version '1.1.2' was not found.
  - Check application dependencies and target a framework version installed at:
      C:\Program Files\dotnet\shared\Microsoft.NETCore.App
  - The following versions are installed:
      1.0.13-servicing-005091-00
      1.1.10-servicing-001782-00
  - Alternatively install the framework version '1.1.2'.

## Environment data
 output:
c:\nicole-test\myconsole&gt;dotnet run
The specified framework 'Microsoft.NETCore.App' version '1.1.2' was not found.
  - Check application dependencies and target a framework version installed at:
      C:\Program Files\dotnet\shared\Microsoft.NETCore.App
  - The following versions are installed:
      1.0.13-servicing-005091-00
      1.1.10-servicing-001782-00
  - Alternatively install the framework version '1.1.2'.





</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9953</IssueLabelID>
    <Title>Add local tool resolver cache</Title>
    <Description>It is used to speed up local tools command resolution. Currently is an isolated component. https://github.com/dotnet/cli/issues/9922

## Correctness
In this version the correctness is the first. And there are a lot of usage of linq and creating new objects. However from the profile of the prototype reading from the cache is trivial compared with other places. Also there is no end to end code so I hope to optimize this part after I have it. At the same time there are many strategies for different bottle necks if it shows up. Like I can order the cache during save or add an extra field to store the hash of fields. If we spend more time reading manifest file we should spend more development effort to cache manifest file info instead.

## When it will be used
After user issue tool restore we will run NuGet restore and we can get IReadOnlyList&lt;CommandSettings&gt; as the result. Cache Save will be run to store the mapping between Package Id–Version-TFM-RID-command name and tools command available. Load will be used during command resolution or picking out already restored commands.

## Concurrency
No lock on write if file is corrupted treat it as empty. And a new restore will be triggered and the cache will be rewrite if it is during tool restore.

The reason being there are only 2 ways a file could be corrupted. 1. two CLI running at the same time. Since there should not be duplication in package id in one manifest file (the code to validate is coming). And in this case it is user error. 2. Direct edit the cache it is still a user error.

In the current design if above happens we can still get back to correct state. If we use a more complex read and write lock with a file. We could get in a nastier bug of locking file forever for a potentially non-exist file corruption case.</Description>
    <Title_Description>Add local tool resolver cache It is used to speed up local tools command resolution. Currently is an isolated component. https://github.com/dotnet/cli/issues/9922

## Correctness
In this version the correctness is the first. And there are a lot of usage of linq and creating new objects. However from the profile of the prototype reading from the cache is trivial compared with other places. Also there is no end to end code so I hope to optimize this part after I have it. At the same time there are many strategies for different bottle necks if it shows up. Like I can order the cache during save or add an extra field to store the hash of fields. If we spend more time reading manifest file we should spend more development effort to cache manifest file info instead.

## When it will be used
After user issue tool restore we will run NuGet restore and we can get IReadOnlyList&lt;CommandSettings&gt; as the result. Cache Save will be run to store the mapping between Package Id–Version-TFM-RID-command name and tools command available. Load will be used during command resolution or picking out already restored commands.

## Concurrency
No lock on write if file is corrupted treat it as empty. And a new restore will be triggered and the cache will be rewrite if it is during tool restore.

The reason being there are only 2 ways a file could be corrupted. 1. two CLI running at the same time. Since there should not be duplication in package id in one manifest file (the code to validate is coming). And in this case it is user error. 2. Direct edit the cache it is still a user error.

In the current design if above happens we can still get back to correct state. If we use a more complex read and write lock with a file. We could get in a nastier bug of locking file forever for a potentially non-exist file corruption case.</Title_Description>
    <Label>tool</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>6/09/2018 1:25:31 AM +00:00</CreatedAt>
    <ClosedAt>11/09/2018 6:12:55 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9952</IssueLabelID>
    <Title>Minor change</Title>
    <Description>Format code add missing namespace file header</Description>
    <Title_Description>Minor change Format code add missing namespace file header</Title_Description>
    <Label>tool</Label>
    <CreatedAt>6/09/2018 1:15:09 AM +00:00</CreatedAt>
    <ClosedAt>6/09/2018 8:53:04 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9949</IssueLabelID>
    <Title>dotnet publish should expose --framework-dependent</Title>
    <Description>## Steps to reproduce

Publish using a RID without specifying 

&lt;details&gt;
 &lt;summary&gt;Environment data&lt;/summary&gt;
.NET Core SDK (reflecting any global.json):
 Version:   2.1.401
 Commit:    91b1c13032

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.401\

Host (useful for support):
  Version: 2.1.3-servicing-26724-03
  Commit:  124038c13e

.NET Core SDKs installed:
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download
&lt;/details&gt;
</Description>
    <Title_Description>dotnet publish should expose --framework-dependent ## Steps to reproduce

Publish using a RID without specifying 

&lt;details&gt;
 &lt;summary&gt;Environment data&lt;/summary&gt;
.NET Core SDK (reflecting any global.json):
 Version:   2.1.401
 Commit:    91b1c13032

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.401\

Host (useful for support):
  Version: 2.1.3-servicing-26724-03
  Commit:  124038c13e

.NET Core SDKs installed:
  2.1.400 [C:\Program Files\dotnet\sdk]
  2.1.401 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download
&lt;/details&gt;
</Title_Description>
    <Label>good first issue</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9944</IssueLabelID>
    <Title>&lt;contentFiles&gt;.buildAction from NuGet package is overriden with "Compile"</Title>
    <Description>## Steps to reproduce
### 1. Create NuGet package from the following nuspec:



.nuspec:
</Description>
    <Title_Description>&lt;contentFiles&gt;.buildAction from NuGet package is overriden with "Compile" ## Steps to reproduce
### 1. Create NuGet package from the following nuspec:



.nuspec:
</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9939</IssueLabelID>
    <Title>Better Mock file system</Title>
    <Description>This is a rewrite of the existing mock file system. The goal is to be as "real" as possible. I've been working on it a bit every week for 2 months. The existing mock file system has many behavior that is different than the real file system. Due to it is modeled by one big directory. And it will give different result when the set up is different. I've investigated several hours in total for it but I still cannot understand. This implementation uses a tree with different types of object for Directory and File which is more accurate.</Description>
    <Title_Description>Better Mock file system This is a rewrite of the existing mock file system. The goal is to be as "real" as possible. I've been working on it a bit every week for 2 months. The existing mock file system has many behavior that is different than the real file system. Due to it is modeled by one big directory. And it will give different result when the set up is different. I've investigated several hours in total for it but I still cannot understand. This implementation uses a tree with different types of object for Directory and File which is more accurate.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>4/09/2018 1:07:52 AM +00:00</CreatedAt>
    <ClosedAt>6/09/2018 11:20:00 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9935</IssueLabelID>
    <Title>Dotnet list package command</Title>
    <Description>This PR adds the code for dotnet list package command as described in this spec https://github.com/NuGet/Home/wiki/dotnet-list-package

The tests here will fail since this this will use a version of NuGet that does not support list. @rohit21agrawal can help with changes to make the tests run as expected and with changes.</Description>
    <Title_Description>Dotnet list package command This PR adds the code for dotnet list package command as described in this spec https://github.com/NuGet/Home/wiki/dotnet-list-package

The tests here will fail since this this will use a version of NuGet that does not support list. @rohit21agrawal can help with changes to make the tests run as expected and with changes.</Title_Description>
    <Label>Servicing-approved</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9924</IssueLabelID>
    <Title>local tool summary issue</Title>
    <Description>- [x] https://github.com/dotnet/cli/issues/9917 dotnet tool install/uninstall
- [x] https://github.com/dotnet/cli/issues/9918 Manifest serialization/deserialization 
- [x] https://github.com/dotnet/cli/issues/9919 dotnet tool restore
- [x] https://github.com/dotnet/cli/issues/9920 dotnet tool list &lt;--local&gt;
- [x] https://github.com/dotnet/cli/issues/9921 Store to nuget global package folder and find the dll
- [x] https://github.com/dotnet/cli/issues/9922 Local tool Command Resolver
- [x] https://github.com/dotnet/cli/issues/9923 dll missing handing
- [x] https://github.com/dotnet/cli/issues/10040 security review
- [x] https://github.com/dotnet/cli/issues/10259 new manifest file
</Description>
    <Title_Description>local tool summary issue - [x] https://github.com/dotnet/cli/issues/9917 dotnet tool install/uninstall
- [x] https://github.com/dotnet/cli/issues/9918 Manifest serialization/deserialization 
- [x] https://github.com/dotnet/cli/issues/9919 dotnet tool restore
- [x] https://github.com/dotnet/cli/issues/9920 dotnet tool list &lt;--local&gt;
- [x] https://github.com/dotnet/cli/issues/9921 Store to nuget global package folder and find the dll
- [x] https://github.com/dotnet/cli/issues/9922 Local tool Command Resolver
- [x] https://github.com/dotnet/cli/issues/9923 dll missing handing
- [x] https://github.com/dotnet/cli/issues/10040 security review
- [x] https://github.com/dotnet/cli/issues/10259 new manifest file
</Title_Description>
    <Label>Epic</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9923</IssueLabelID>
    <Title>dll missing handing</Title>
    <Description>like nuget cache get global pacakge folder get cleaned. We need to surface error or do a restore</Description>
    <Title_Description>dll missing handing like nuget cache get global pacakge folder get cleaned. We need to surface error or do a restore</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9922</IssueLabelID>
    <Title>Local tool Command Resolver</Title>
    <Description>- [x] resolve Command Class circular dependency
- [ ] actual lookup
- [ ] resolver cache
- [ ] performance optimization</Description>
    <Title_Description>Local tool Command Resolver - [x] resolve Command Class circular dependency
- [ ] actual lookup
- [ ] resolver cache
- [ ] performance optimization</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9921</IssueLabelID>
    <Title>Store to nuget global package folder and find the dll</Title>
    <Description>
    </Description>
    <Title_Description>Store to nuget global package folder and find the dll 





</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9920</IssueLabelID>
    <Title>dotnet tool list &lt;--local&gt;</Title>
    <Description>List all available local tools in this directory. May consider trigger prime cache.</Description>
    <Title_Description>dotnet tool list &lt;--local&gt; List all available local tools in this directory. May consider trigger prime cache.</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9919</IssueLabelID>
    <Title>dotnet tool restore</Title>
    <Description>prime cache/restore all available tools for all folders lead to working directory</Description>
    <Title_Description>dotnet tool restore prime cache/restore all available tools for all folders lead to working directory</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9918</IssueLabelID>
    <Title>Manifest serialization/deserialization </Title>
    <Description>- [x] Finalize manifest file format
- [x] serialization
- [x] deserialization



</Description>
    <Title_Description>Manifest serialization/deserialization  - [x] Finalize manifest file format
- [x] serialization
- [x] deserialization



</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9917</IssueLabelID>
    <Title>dotnet tool install/uninstall &lt;--local&gt; dotnetsay packageID</Title>
    <Description>Experience to create/edit manifest file for local tools



</Description>
    <Title_Description>dotnet tool install/uninstall &lt;--local&gt; dotnetsay packageID Experience to create/edit manifest file for local tools



</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9914</IssueLabelID>
    <Title>Fix debian package tests clean up and set up</Title>
    <Description>Detect if package installed first and then uninstall

Due to IgnoreStandardErrorWarningFormat + warning as error. Th error is "not caught".  But the goal is to ensure there is no existing installed package. So replace it with use detect if installed first and then remove. This should unblock prodcon</Description>
    <Title_Description>Fix debian package tests clean up and set up Detect if package installed first and then uninstall

Due to IgnoreStandardErrorWarningFormat + warning as error. Th error is "not caught".  But the goal is to ensure there is no existing installed package. So replace it with use detect if installed first and then remove. This should unblock prodcon</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>30/08/2018 12:00:01 AM +00:00</CreatedAt>
    <ClosedAt>30/08/2018 5:16:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9912</IssueLabelID>
    <Title>Consider adding retry logic to download() function in scripts/obtain/dotnet-install.sh</Title>
    <Description>@dotnet-mc-bot commented on [Wed Aug 29 2018](https://github.com/dotnet/core-eng/issues/4127)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1987783
  - **Agent:** DDVSOLINUXAGE008
  - **Error log:** ;[31mdotnet_install: Error: Could not download .NET Core SDK version 2.1.300;(B;[m...

@jcagme @markwilkie


---

@MattGal commented on [Wed Aug 29 2018](https://github.com/dotnet/core-eng/issues/4127#issuecomment-417036024)

This is indeed a transient network failure attempting to download https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.300/dotnet-sdk-2.1.300-rhel.6-x64.tar.gz from the CLI's "dotnet-install.sh" script which only makes one try.  The error message:  indicates a server-side disconnection.   

As this represents an Azure VM talking to an Azure storage account via an Azure CDN we don't have anywhere on the dnceng team we can help out.  I feel that these lines should be updated to retry the download at least once:
https://github.com/dotnet/cli/blob/release/2.1.4xx/scripts/obtain/dotnet-install.sh#L642-L664  so am moving the issue over to the CLI repo for consideration there.

</Description>
    <Title_Description>Consider adding retry logic to download() function in scripts/obtain/dotnet-install.sh @dotnet-mc-bot commented on [Wed Aug 29 2018](https://github.com/dotnet/core-eng/issues/4127)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1987783
  - **Agent:** DDVSOLINUXAGE008
  - **Error log:** ;[31mdotnet_install: Error: Could not download .NET Core SDK version 2.1.300;(B;[m...

@jcagme @markwilkie


---

@MattGal commented on [Wed Aug 29 2018](https://github.com/dotnet/core-eng/issues/4127#issuecomment-417036024)

This is indeed a transient network failure attempting to download https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.300/dotnet-sdk-2.1.300-rhel.6-x64.tar.gz from the CLI's "dotnet-install.sh" script which only makes one try.  The error message:  indicates a server-side disconnection.   

As this represents an Azure VM talking to an Azure storage account via an Azure CDN we don't have anywhere on the dnceng team we can help out.  I feel that these lines should be updated to retry the download at least once:
https://github.com/dotnet/cli/blob/release/2.1.4xx/scripts/obtain/dotnet-install.sh#L642-L664  so am moving the issue over to the CLI repo for consideration there.

</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9910</IssueLabelID>
    <Title>Remove LZMA from core-sdk</Title>
    <Description>For .NET Core 3.0 we are going to get rid of the LZMA file that expands into the NuGetFallbackFolder.  Instead we are going to have targeting packs which are bundled in the installer.

The LZMA doesn't currently add any value for the 3.0 builds because it's "incoherent" - ie it doesn't have the right preview packages.  So we should go ahead and remove it now.</Description>
    <Title_Description>Remove LZMA from core-sdk For .NET Core 3.0 we are going to get rid of the LZMA file that expands into the NuGetFallbackFolder.  Instead we are going to have targeting packs which are bundled in the installer.

The LZMA doesn't currently add any value for the 3.0 builds because it's "incoherent" - ie it doesn't have the right preview packages.  So we should go ahead and remove it now.</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9906</IssueLabelID>
    <Title>Fix rpmdb error</Title>
    <Description>
    </Description>
    <Title_Description>Fix rpmdb error </Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>28/08/2018 3:28:10 PM +00:00</CreatedAt>
    <ClosedAt>28/08/2018 6:04:52 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9902</IssueLabelID>
    <Title>Changing the property names for 2.2 templates to be named 22 instead of 20.</Title>
    <Description>
    </Description>
    <Title_Description>Changing the property names for 2.2 templates to be named 22 instead of 20. 
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>27/08/2018 10:54:35 PM +00:00</CreatedAt>
    <ClosedAt>28/08/2018 3:20:27 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9901</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>27/08/2018 9:44:34 PM +00:00</CreatedAt>
    <ClosedAt>16/10/2018 11:11:05 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9900</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>27/08/2018 9:44:32 PM +00:00</CreatedAt>
    <ClosedAt>31/08/2018 4:53:14 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9898</IssueLabelID>
    <Title>Both 2.1.100 and 2.1.100.7326. SDK installer are available</Title>
    <Description>It is causing installation duplication

https://github.com/dotnet/core/issues/1839#issuecomment-416292934





</Description>
    <Title_Description>Both 2.1.100 and 2.1.100.7326. SDK installer are available It is causing installation duplication

https://github.com/dotnet/core/issues/1839#issuecomment-416292934





</Title_Description>
    <Label>windows-installer</Label>
    <CreatedAt>27/08/2018 5:16:27 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9897</IssueLabelID>
    <Title>Dotnet SDK 2.1.401 has runtime version 2.1.3-servicing-26724-03</Title>
    <Description>## Steps to reproduce

Checkout this repo at tag v2.1.401
Run ./build.sh /t:Compile
Open shared/Microsoft.NETCore.App directory from build output

## Expected  behavior

We see a folder named 2.1.3 and can restore/publish/run applications against framework 2.1.3.

## Actual behavior

We see a folder named 2.1.3-servicing-26724-03. This doesn't seem to be the case when following the steps for installing (vs building from source): https://www.microsoft.com/net/download/linux-package-manager/ubuntu14-04/sdk-current

Supplying this value in the .csproj produces the following warning:



This seems to be similar to https://github.com/dotnet/cli/issues/9456.

</Description>
    <Title_Description>Dotnet SDK 2.1.401 has runtime version 2.1.3-servicing-26724-03 ## Steps to reproduce

Checkout this repo at tag v2.1.401
Run ./build.sh /t:Compile
Open shared/Microsoft.NETCore.App directory from build output

## Expected  behavior

We see a folder named 2.1.3 and can restore/publish/run applications against framework 2.1.3.

## Actual behavior

We see a folder named 2.1.3-servicing-26724-03. This doesn't seem to be the case when following the steps for installing (vs building from source): https://www.microsoft.com/net/download/linux-package-manager/ubuntu14-04/sdk-current

Supplying this value in the .csproj produces the following warning:



This seems to be similar to https://github.com/dotnet/cli/issues/9456.

</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9896</IssueLabelID>
    <Title>dotnet test/run have inconsistent CWD</Title>
    <Description>## Steps to reproduce
Create a .NET core app that simply prints out the current directory from the environment *and* a .NET core XUNIT test case that does the same:

    using System;
    namespace DotnetRun
    {
        class Program
        {
            static void Main(string[] args) =&gt; Console.WriteLine($"CWD: [{Environment.CurrentDirectory}]");
        }
    }

and

    using System;
    using Xunit;
    using Xunit.Abstractions;
    namespace DotnetTest
    {
        public class UnitTest1
        {
            private readonly ITestOutputHelper output;
            public UnitTest1(ITestOutputHelper output) =&gt; this.output = output;
            [Fact]
            public void Test1() =&gt; output.WriteLine($"CWD: [{Environment.CurrentDirectory}]");
        }
    }

1. Run the app: ")
</Description>
    <Title_Description>dotnet test/run have inconsistent CWD ## Steps to reproduce
Create a .NET core app that simply prints out the current directory from the environment *and* a .NET core XUNIT test case that does the same:

    using System;
    namespace DotnetRun
    {
        class Program
        {
            static void Main(string[] args) =&gt; Console.WriteLine($"CWD: [{Environment.CurrentDirectory}]");
        }
    }

and

    using System;
    using Xunit;
    using Xunit.Abstractions;
    namespace DotnetTest
    {
        public class UnitTest1
        {
            private readonly ITestOutputHelper output;
            public UnitTest1(ITestOutputHelper output) =&gt; this.output = output;
            [Fact]
            public void Test1() =&gt; output.WriteLine($"CWD: [{Environment.CurrentDirectory}]");
        }
    }

1. Run the app: ")
</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9892</IssueLabelID>
    <Title>Expand relative paths for CLI arguments</Title>
    <Description>Continuation of https://github.com/dotnet/cli/pull/7166 which was too late for 2.0

This changes the output directory for CLI commands to be expanded to a full path based on the current working directory.

This may be a breaking change for some users.

Fixes #6700 #4765</Description>
    <Title_Description>Expand relative paths for CLI arguments Continuation of https://github.com/dotnet/cli/pull/7166 which was too late for 2.0

This changes the output directory for CLI commands to be expanded to a full path based on the current working directory.

This may be a breaking change for some users.

Fixes #6700 #4765</Title_Description>
    <Label>breaking-change</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>25/08/2018 5:09:47 PM +00:00</CreatedAt>
    <ClosedAt>10/09/2018 6:01:37 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9890</IssueLabelID>
    <Title>Build failures:  Unable to find package Microsoft.DotNet.Test.ProjectTemplates.2.2 </Title>
    <Description>@dotnet-mc-bot commented on [Thu Aug 23 2018](https://github.com/dotnet/core-eng/issues/4101)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974073
  - **Agent:** DDVSOLINUXAGE009
  - **Error log:** ;[?1h;=         Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974068
  - **Agent:** DDVSOLINUXAGE005
  - **Error log:** ;[?1h;=         Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974067
  - **Agent:** DDVSOLINUXAGE004
  - **Error log:** Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974074
  - **Agent:** DDVSOWINAGE020
  - **Error log:** Unspecified error (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974069
  - **Agent:** DDVSOLINUXAGE006
  - **Error log:** ;[39;49m;[36m    11&gt;;[39;49m;[39;49m;[31m/opt/code/build/templates/templates.csproj : error NU1102: Unable to find package Microsoft.DotNet.Test.ProjectTemplates.2.2 with version (&gt;= 1.0.2-beta4-20180822-1972211) [/opt/code/build/...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974070
  - **Agent:** DDVSOLINUXAGE007
  - **Error log:** ;[?1h;=         Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974075
  - **Agent:** DDVSOWINAGE021
  - **Error log:** Unspecified error (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974071
  - **Agent:** DDVSOMACAGE011
  - **Error log:** Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974072
  - **Agent:** DDVSOLINUXAGE008
  - **Error log:** ;[?1h;=         Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

@jcagme @markwilkie


---

@MattGal commented on [Fri Aug 24 2018](https://github.com/dotnet/core-eng/issues/4101#issuecomment-415845245)

Moving this one to CLI @livarcocc please close if you're already tracking this.  All these failures are:



</Description>
    <Title_Description>Build failures:  Unable to find package Microsoft.DotNet.Test.ProjectTemplates.2.2  @dotnet-mc-bot commented on [Thu Aug 23 2018](https://github.com/dotnet/core-eng/issues/4101)

There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974073
  - **Agent:** DDVSOLINUXAGE009
  - **Error log:** ;[?1h;=         Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974068
  - **Agent:** DDVSOLINUXAGE005
  - **Error log:** ;[?1h;=         Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974067
  - **Agent:** DDVSOLINUXAGE004
  - **Error log:** Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974074
  - **Agent:** DDVSOWINAGE020
  - **Error log:** Unspecified error (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974069
  - **Agent:** DDVSOLINUXAGE006
  - **Error log:** ;[39;49m;[36m    11&gt;;[39;49m;[39;49m;[31m/opt/code/build/templates/templates.csproj : error NU1102: Unable to find package Microsoft.DotNet.Test.ProjectTemplates.2.2 with version (&gt;= 1.0.2-beta4-20180822-1972211) [/opt/code/build/...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974070
  - **Agent:** DDVSOLINUXAGE007
  - **Error log:** ;[?1h;=         Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974075
  - **Agent:** DDVSOWINAGE021
  - **Error log:** Unspecified error (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974071
  - **Agent:** DDVSOMACAGE011
  - **Error log:** Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1974072
  - **Agent:** DDVSOLINUXAGE008
  - **Error log:** ;[?1h;=         Error 2147500037 (Exception from HRESULT: 0x80004005 (E_FAIL)) while compiling method BuildServerConnection.CreateMonitorDisconnectTask...

@jcagme @markwilkie


---

@MattGal commented on [Fri Aug 24 2018](https://github.com/dotnet/core-eng/issues/4101#issuecomment-415845245)

Moving this one to CLI @livarcocc please close if you're already tracking this.  All these failures are:



</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>24/08/2018 9:39:42 PM +00:00</CreatedAt>
    <ClosedAt>29/08/2018 12:34:01 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9887</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>24/08/2018 5:28:02 PM +00:00</CreatedAt>
    <ClosedAt>24/08/2018 5:28:04 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9882</IssueLabelID>
    <Title>Updating the windows installer notice to reflect 2.2 and its requirem…</Title>
    <Description>Fixes https://github.com/dotnet/cli/issues/9776</Description>
    <Title_Description>Updating the windows installer notice to reflect 2.2 and its requirem… Fixes https://github.com/dotnet/cli/issues/9776</Title_Description>
    <Label>Servicing-approved</Label>
    <CreatedAt>22/08/2018 9:01:42 PM +00:00</CreatedAt>
    <ClosedAt>23/08/2018 6:51:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9880</IssueLabelID>
    <Title>Fix test break</Title>
    <Description>Porting back fix from https://github.com/dotnet/cli/pull/9854/files to 2.1.4xx

  - Back porting a change to allow package restore to succeed in some high-load test scenarios.
  - Build failure issue: https://github.com/dotnet/core-eng/issues/4088
   
</Description>
    <Title_Description>Fix test break Porting back fix from https://github.com/dotnet/cli/pull/9854/files to 2.1.4xx

  - Back porting a change to allow package restore to succeed in some high-load test scenarios.
  - Build failure issue: https://github.com/dotnet/core-eng/issues/4088
   
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>22/08/2018 4:18:00 PM +00:00</CreatedAt>
    <ClosedAt>22/08/2018 9:33:21 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9872</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>21/08/2018 6:03:42 PM +00:00</CreatedAt>
    <ClosedAt>11/09/2018 7:32:44 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9871</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/08/2018 5:59:45 PM +00:00</CreatedAt>
    <ClosedAt>21/08/2018 5:59:47 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9868</IssueLabelID>
    <Title>Adding NuGet project lock file options for dotnet restore command</Title>
    <Description>Since We (NuGet) is working on enabling NuGet project lock file for VS 15.9 this PR is to add lock file options to  command.

Feature Spec - https://github.com/NuGet/Home/wiki/Enable-repeatable-package-restore-using-lock-file#extensibility

Let me know if this isn't the right branch to target 15.9. Also the feature is already approved for 15.9.</Description>
    <Title_Description>Adding NuGet project lock file options for dotnet restore command Since We (NuGet) is working on enabling NuGet project lock file for VS 15.9 this PR is to add lock file options to  command.

Feature Spec - https://github.com/NuGet/Home/wiki/Enable-repeatable-package-restore-using-lock-file#extensibility

Let me know if this isn't the right branch to target 15.9. Also the feature is already approved for 15.9.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>20/08/2018 8:06:19 PM +00:00</CreatedAt>
    <ClosedAt>25/09/2018 4:59:57 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9866</IssueLabelID>
    <Title>dotnet run ignores `--runtime`</Title>
    <Description>It doesn't actually ignore it it passes it down as  output:


.NET Core SDK (reflecting any global.json):
 Version:   2.1.400
 Commit:    8642e60a0f

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.400\

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  1.0.3 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.0.3 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.301 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]




</Description>
    <Title_Description>dotnet run ignores  output:


.NET Core SDK (reflecting any global.json):
 Version:   2.1.400
 Commit:    8642e60a0f

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.400\

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  1.0.3 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.0.3 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.301 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]




</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9864</IssueLabelID>
    <Title>Slow initial and consecutive builds with large web solution (Core 2.1.400)</Title>
    <Description>## Steps to reproduce

We have a large web solution that contains 20 (mostly .NET Core 2.1.X) projects (some are .NET Standard 2.0 libraries). Initial builds (after clean) are really slow and consecutive builds are not as fast as I think they should be after recent performance improvements. 
The project started with Core 1.1 migrated to 2.0 for the most time and got updated to 2.1 days after release. In general we dont feel a big improvement in build times with the recent versions compared to prior versions. 

As advised in https://github.com/dotnet/cli/issues/7590#issuecomment-413214988 here are the results of the performance summaries.

~~Build solution after clean https://pastebin.com/P0Y0bu8v (4 minutes 32 seconds)
Consecutive Build solution after minor changes in one project https://pastebin.com/aPRXQVVu (48 seconds)
Consecutive build after changes in multiple projects https://pastebin.com/NzUASmMY (4 minutes 28 seconds)~~
1. Initial build (after clean) (~4 minutes)
https://gist.github.com/zuckerthoben/d1d2caa1f86f8c1ff15396803fc7c397
2.  Consecutive build without any changes (~ 10 seconds)
https://gist.github.com/zuckerthoben/9e4c21d3bc4d236f812b99426ca7db5e
3. Consecutive build with small changes in one big project (~45 seconds)
https://gist.github.com/zuckerthoben/a83deeb549d1a6c164737611788e10c2
4. Consecutive build with multiple small changes in multiple projects (~3 minutes 10 seconds)
https://gist.github.com/zuckerthoben/b975151f279d5584b261236876faa188



## Expected  behavior
- acceptable initial build times
- quick consecutive builds

## Actual behavior
- initial builds are really slow
- consecutive builds are relatively slow

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.400
 Commit:    8642e60a0f

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.400\

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.1.301 [C:\Program Files\dotnet\sdk]
  2.1.302 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]








</Description>
    <Title_Description>Slow initial and consecutive builds with large web solution (Core 2.1.400) ## Steps to reproduce

We have a large web solution that contains 20 (mostly .NET Core 2.1.X) projects (some are .NET Standard 2.0 libraries). Initial builds (after clean) are really slow and consecutive builds are not as fast as I think they should be after recent performance improvements. 
The project started with Core 1.1 migrated to 2.0 for the most time and got updated to 2.1 days after release. In general we dont feel a big improvement in build times with the recent versions compared to prior versions. 

As advised in https://github.com/dotnet/cli/issues/7590#issuecomment-413214988 here are the results of the performance summaries.

~~Build solution after clean https://pastebin.com/P0Y0bu8v (4 minutes 32 seconds)
Consecutive Build solution after minor changes in one project https://pastebin.com/aPRXQVVu (48 seconds)
Consecutive build after changes in multiple projects https://pastebin.com/NzUASmMY (4 minutes 28 seconds)~~
1. Initial build (after clean) (~4 minutes)
https://gist.github.com/zuckerthoben/d1d2caa1f86f8c1ff15396803fc7c397
2.  Consecutive build without any changes (~ 10 seconds)
https://gist.github.com/zuckerthoben/9e4c21d3bc4d236f812b99426ca7db5e
3. Consecutive build with small changes in one big project (~45 seconds)
https://gist.github.com/zuckerthoben/a83deeb549d1a6c164737611788e10c2
4. Consecutive build with multiple small changes in multiple projects (~3 minutes 10 seconds)
https://gist.github.com/zuckerthoben/b975151f279d5584b261236876faa188



## Expected  behavior
- acceptable initial build times
- quick consecutive builds

## Actual behavior
- initial builds are really slow
- consecutive builds are relatively slow

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.400
 Commit:    8642e60a0f

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.400\

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]
  2.1.301 [C:\Program Files\dotnet\sdk]
  2.1.302 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]








</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9854</IssueLabelID>
    <Title>[release/2.2.1xx] Add --disable-parallel to dotnet-new.Tests</Title>
    <Description>Added to a "restore" executed via string literal.  because the official build break happened here.

FYI @mmitche </Description>
    <Title_Description>[release/2.2.1xx] Add --disable-parallel to dotnet-new.Tests Added to a "restore" executed via string literal.  because the official build break happened here.

FYI @mmitche </Title_Description>
    <Label>
    </Label>
    <Assignee>dagood</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9852</IssueLabelID>
    <Title>Framework Dependent Publish doesn't work on  2.1.400</Title>
    <Description>## Steps to reproduce
Try to publish web api with  output:

SDK do .NET Core (refletindo qualquer global.json):
 Version:   2.1.400
 Commit:    8642e60a0f

Ambiente de tempo de execução:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.400\

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.302 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:

&gt; https://aka.ms/dotnet-download

## Description

After upgrading to Visual Studio v15.8 which comes with .net core SDK v2.1.4 I've been trying to publish my WebAPI in a Framework Dependent way but it only generates the Self Contained way with over 200 files.</Description>
    <Title_Description>Framework Dependent Publish doesn't work on  2.1.400 ## Steps to reproduce
Try to publish web api with  output:

SDK do .NET Core (refletindo qualquer global.json):
 Version:   2.1.400
 Commit:    8642e60a0f

Ambiente de tempo de execução:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.400\

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  2.1.202 [C:\Program Files\dotnet\sdk]
  2.1.302 [C:\Program Files\dotnet\sdk]
  2.1.400 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:

&gt; https://aka.ms/dotnet-download

## Description

After upgrading to Visual Studio v15.8 which comes with .net core SDK v2.1.4 I've been trying to publish my WebAPI in a Framework Dependent way but it only generates the Self Contained way with over 200 files.</Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9851</IssueLabelID>
    <Title>Get hostfxr for msbuild resolver from 2.1.x branch</Title>
    <Description>For 2.1.5xx / VS 15.9 preview we are going to use a one-off build of hostfxr with https://github.com/dotnet/core-setup/pull/4301

For RTM we should be getting the change to 2.1.x servicing.





</Description>
    <Title_Description>Get hostfxr for msbuild resolver from 2.1.x branch For 2.1.5xx / VS 15.9 preview we are going to use a one-off build of hostfxr with https://github.com/dotnet/core-setup/pull/4301

For RTM we should be getting the change to 2.1.x servicing.





</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9850</IssueLabelID>
    <Title>provide support for dotnet tool install -U / --upgrade</Title>
    <Description>## Steps to reproduce


</Description>
    <Title_Description>provide support for dotnet tool install -U / --upgrade ## Steps to reproduce


</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9849</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>16/08/2018 12:01:23 AM +00:00</CreatedAt>
    <ClosedAt>16/08/2018 6:55:30 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9848</IssueLabelID>
    <Title>Update error text; adding a link to some helpful documentation.</Title>
    <Description>Reference: https://github.com/dotnet/cli/issues/8474

Improving the "cannot-find-the-SDK" error experience; including this link from @leecow : https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md
</Description>
    <Title_Description>Update error text; adding a link to some helpful documentation. Reference: https://github.com/dotnet/cli/issues/8474

Improving the "cannot-find-the-SDK" error experience; including this link from @leecow : https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9847</IssueLabelID>
    <Title>Fix test with framework-dependent apphost.</Title>
    <Description>This commit fixes the  test to ensure
the apphost is present in the published files.

It also runs the application from the apphost to ensure it executes
successfully.

Fixes #9843.</Description>
    <Title_Description>Fix test with framework-dependent apphost. This commit fixes the  test to ensure
the apphost is present in the published files.

It also runs the application from the apphost to ensure it executes
successfully.

Fixes #9843.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>15/08/2018 10:09:03 PM +00:00</CreatedAt>
    <ClosedAt>16/08/2018 12:26:22 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9846</IssueLabelID>
    <Title>Fix warnings</Title>
    <Description>Using prebuild docker image eliminate warning during apt-get install build packages like python. There are warnings due to redundant remove dotnet-sdk when there is no dotnet-sdk before the test. And add delete fallback folder to prevent error on remove dotnet-sdk package from apt after the test</Description>
    <Title_Description>Fix warnings Using prebuild docker image eliminate warning during apt-get install build packages like python. There are warnings due to redundant remove dotnet-sdk when there is no dotnet-sdk before the test. And add delete fallback folder to prevent error on remove dotnet-sdk package from apt after the test</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>15/08/2018 10:01:21 PM +00:00</CreatedAt>
    <ClosedAt>15/08/2018 11:11:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9843</IssueLabelID>
    <Title>[release/2.2.1xx] Test failure during build: extra file "MSBuildTestApp.exe" found after publish</Title>
    <Description>These CLI builds failed building d7b9504c9fd5e4f261cc91a62a449daace623d69 across platforms build number 20180815.1:

* Linux x64: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1949917&amp;view=logs
* OSX x64: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1949920&amp;view=logs
* RHEL6 x64: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1949921&amp;view=logs
* Windows x86: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1949923&amp;view=logs

Example failure from the win x86 leg. They all have 

I broke this issue out from the automatically filed https://github.com/dotnet/core-eng/issues/4058 and put it here because it doesn't look like an infra issue. I don't have any context about what this build was for.

/cc @mmitche @livarcocc @wli3 </Description>
    <Title_Description>[release/2.2.1xx] Test failure during build: extra file "MSBuildTestApp.exe" found after publish These CLI builds failed building d7b9504c9fd5e4f261cc91a62a449daace623d69 across platforms build number 20180815.1:

* Linux x64: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1949917&amp;view=logs
* OSX x64: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1949920&amp;view=logs
* RHEL6 x64: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1949921&amp;view=logs
* Windows x86: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1949923&amp;view=logs

Example failure from the win x86 leg. They all have 

I broke this issue out from the automatically filed https://github.com/dotnet/core-eng/issues/4058 and put it here because it doesn't look like an infra issue. I don't have any context about what this build was for.

/cc @mmitche @livarcocc @wli3 </Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9837</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/08/2018 10:37:57 PM +00:00</CreatedAt>
    <ClosedAt>24/08/2018 9:30:48 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9836</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/08/2018 10:37:55 PM +00:00</CreatedAt>
    <ClosedAt>15/08/2018 5:03:57 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9834</IssueLabelID>
    <Title>Re-enable MSBuildTreatWarningsAsErrors</Title>
    <Description>We have enabled MSBuildTreatWarningsAsErrors in release/2.1.4xx but that is causing the AllLinuxDistros leg to fail because we have warnings inside PackageWithDocker.

I have disabled MSBuildTreatWarningsAsErrors to unblock the build but we should re-enable it after cleaning up the warnings.

@wli3 could you take a crack at cleaning these warnings?</Description>
    <Title_Description>Re-enable MSBuildTreatWarningsAsErrors We have enabled MSBuildTreatWarningsAsErrors in release/2.1.4xx but that is causing the AllLinuxDistros leg to fail because we have warnings inside PackageWithDocker.

I have disabled MSBuildTreatWarningsAsErrors to unblock the build but we should re-enable it after cleaning up the warnings.

@wli3 could you take a crack at cleaning these warnings?</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9832</IssueLabelID>
    <Title>Modify the CLI build to be less similar to the SDK build</Title>
    <Description>Modify the CLI build to be less similar to the SDK build

To include but not limited to:
1) change the variable name "SDKVersion" to CLIVersion"

2) Change the directory structure of the 'CliOutputDirectory' to appear less like the SDK structure; ie: "SDK" + the product version


3) other...






</Description>
    <Title_Description>Modify the CLI build to be less similar to the SDK build Modify the CLI build to be less similar to the SDK build

To include but not limited to:
1) change the variable name "SDKVersion" to CLIVersion"

2) Change the directory structure of the 'CliOutputDirectory' to appear less like the SDK structure; ie: "SDK" + the product version


3) other...






</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>14/08/2018 5:29:34 PM +00:00</CreatedAt>
    <ClosedAt>4/10/2019 7:14:52 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9831</IssueLabelID>
    <Title>Follow XDG spec</Title>
    <Description>This change allows the dotnet cli to follow the XDG spec on linux
and changes the OSX path to 

sources: 
https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
https://stackoverflow.com/questions/3373948/equivalents-of-xdg-config-home-and-xdg-data-home-on-mac-os-x</Description>
    <Title_Description>Follow XDG spec This change allows the dotnet cli to follow the XDG spec on linux
and changes the OSX path to 

sources: 
https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
https://stackoverflow.com/questions/3373948/equivalents-of-xdg-config-home-and-xdg-data-home-on-mac-os-x</Title_Description>
    <Label>Pending discussion</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>14/08/2018 9:21:47 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9829</IssueLabelID>
    <Title>Add back: PUBLISH_NUPKG_TO_BLOB_FEED</Title>
    <Description>Add back: "PUBLISH_NUPKG_TO_BLOB_FEED" to manage the no-suffix builds in 2.1

The newly created release.2.1 no-suffix builds need a switch to suppress the publishing of NuPkgs to the internal feed; "PUBLISH_NUPKG_TO_BLOB_FEED" was used for this purpose.

Follow-up: add "PUBLISH_NUPKG_TO_BLOB_FEED" to the release.2.1 build defs - https://devdiv.visualstudio.com/DevDiv/Default/_Build/index?_a=allDefinitions&amp;path=%5CDotNet%5CCLI%5Crelease.2.1
</Description>
    <Title_Description>Add back: PUBLISH_NUPKG_TO_BLOB_FEED Add back: "PUBLISH_NUPKG_TO_BLOB_FEED" to manage the no-suffix builds in 2.1

The newly created release.2.1 no-suffix builds need a switch to suppress the publishing of NuPkgs to the internal feed; "PUBLISH_NUPKG_TO_BLOB_FEED" was used for this purpose.

Follow-up: add "PUBLISH_NUPKG_TO_BLOB_FEED" to the release.2.1 build defs - https://devdiv.visualstudio.com/DevDiv/Default/_Build/index?_a=allDefinitions&amp;path=%5CDotNet%5CCLI%5Crelease.2.1
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9826</IssueLabelID>
    <Title>dotnet tool install -g fails with nuget v2 api on case sensitivity issues</Title>
    <Description>## Steps to reproduce
Upload a dotnet global tool with mixed case in its name into a v2 feed

Try 



</Description>
    <Title_Description>dotnet tool install -g fails with nuget v2 api on case sensitivity issues ## Steps to reproduce
Upload a dotnet global tool with mixed case in its name into a v2 feed

Try 



</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9823</IssueLabelID>
    <Title>error : The project was restored using Microsoft.NETCore.App version 2.1.0 but with current settings version 2.1.2 would be used instead.</Title>
    <Description>Generally I'd like to know if this "breaking" change was intended and bring up awareness if it wasn't.
If everything is fine I'm happy with the workaround but would like to understand why I can no longer call 




</Description>
    <Title_Description>error : The project was restored using Microsoft.NETCore.App version 2.1.0, but with current settings, version 2.1.2 would be used instead. Generally I'd like to know if this "breaking" change was intended and bring up awareness if it wasn't.
If everything is fine I'm happy with the workaround but would like to understand why I can no longer call 




</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9822</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.5xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.5xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>11/08/2018 7:01:26 AM +00:00</CreatedAt>
    <ClosedAt>14/08/2018 9:07:27 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9821</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>11/08/2018 7:01:24 AM +00:00</CreatedAt>
    <ClosedAt>14/08/2018 6:33:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9815</IssueLabelID>
    <Title>Merge release/2.1.2xx to release/2.1.3xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.2xx to release/2.1.3xx 
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>10/08/2018 7:01:23 PM +00:00</CreatedAt>
    <ClosedAt>11/08/2018 12:12:28 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9807</IssueLabelID>
    <Title>"dotnet" commands have permission issues</Title>
    <Description>## Steps to reproduce
run  output:

&gt; .NET Core SDK (reflecting any global.json):
&gt;  Version:   2.1.302
&gt;  Commit:    9048955601
&gt; 
&gt; Runtime Environment:
&gt;  OS Name:     Mac OS X
&gt;  OS Version:  10.13
&gt;  OS Platform: Darwin
&gt;  RID:         osx.10.13-x64
&gt;  Base Path:   /usr/local/share/dotnet/sdk/2.1.302/
&gt; 
&gt; Host (useful for support):
&gt;   Version: 2.1.2
&gt;   Commit:  811c3ce6c0
&gt; 
&gt; .NET Core SDKs installed:
&gt;   2.1.4 [/usr/local/share/dotnet/sdk]
&gt;   2.1.300-preview2-008533 [/usr/local/share/dotnet/sdk]
&gt;   2.1.300 [/usr/local/share/dotnet/sdk]
&gt;   2.1.301 [/usr/local/share/dotnet/sdk]
&gt;   2.1.302 [/usr/local/share/dotnet/sdk]
&gt; 
&gt; .NET Core runtimes installed:
&gt;   Microsoft.AspNetCore.All 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.All 2.1.0-preview2-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.App 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.AspNetCore.App 2.1.0-preview2-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.0-preview1-26216-03 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.0-preview2-26406-04 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]



</Description>
    <Title_Description>"dotnet" commands have permission issues ## Steps to reproduce
run  output:

&gt; .NET Core SDK (reflecting any global.json):
&gt;  Version:   2.1.302
&gt;  Commit:    9048955601
&gt; 
&gt; Runtime Environment:
&gt;  OS Name:     Mac OS X
&gt;  OS Version:  10.13
&gt;  OS Platform: Darwin
&gt;  RID:         osx.10.13-x64
&gt;  Base Path:   /usr/local/share/dotnet/sdk/2.1.302/
&gt; 
&gt; Host (useful for support):
&gt;   Version: 2.1.2
&gt;   Commit:  811c3ce6c0
&gt; 
&gt; .NET Core SDKs installed:
&gt;   2.1.4 [/usr/local/share/dotnet/sdk]
&gt;   2.1.300-preview2-008533 [/usr/local/share/dotnet/sdk]
&gt;   2.1.300 [/usr/local/share/dotnet/sdk]
&gt;   2.1.301 [/usr/local/share/dotnet/sdk]
&gt;   2.1.302 [/usr/local/share/dotnet/sdk]
&gt; 
&gt; .NET Core runtimes installed:
&gt;   Microsoft.AspNetCore.All 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.All 2.1.0-preview2-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]
&gt;   Microsoft.AspNetCore.App 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.AspNetCore.App 2.1.0-preview2-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]
&gt;   Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.0-preview1-26216-03 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.0-preview2-26406-04 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]
&gt;   Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]



</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9805</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>8/08/2018 12:18:11 AM +00:00</CreatedAt>
    <ClosedAt>21/08/2018 3:30:39 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9800</IssueLabelID>
    <Title>Retrive the SDK version from the '.version' file</Title>
    <Description>**src/Microsoft.DotNet.Cli.Utils/SdkProduct.cs** 
retrieve the SDK version from the '.version' file

**test/dotnet.Tests/dotnet.Tests.csproj** 
test the version from the LKG SDK not the version from the current CLI - [see: test/dotnet.Tests/VersionTest.cs]

**build/test/OverlaySdkOnLKG.targets 
build/Test.targets**
use the version from the LKG SDK not the version from the current CLI for the directory-name of the SDK

**build/DependencyVersions.props** 
update the LKG CLI to: 3.0.100-alpha1-009408 - this is the first published SDK version with the corrected '.version' and '.toolsetversion' files


Reference: https://github.com/dotnet/core-sdk/issues/41

Follow-up: https://github.com/dotnet/cli/issues/9832</Description>
    <Title_Description>Retrive the SDK version from the '.version' file **src/Microsoft.DotNet.Cli.Utils/SdkProduct.cs** 
retrieve the SDK version from the '.version' file

**test/dotnet.Tests/dotnet.Tests.csproj** 
test the version from the LKG SDK not the version from the current CLI - [see: test/dotnet.Tests/VersionTest.cs]

**build/test/OverlaySdkOnLKG.targets 
build/Test.targets**
use the version from the LKG SDK not the version from the current CLI for the directory-name of the SDK

**build/DependencyVersions.props** 
update the LKG CLI to: 3.0.100-alpha1-009408 - this is the first published SDK version with the corrected '.version' and '.toolsetversion' files


Reference: https://github.com/dotnet/core-sdk/issues/41

Follow-up: https://github.com/dotnet/cli/issues/9832</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9799</IssueLabelID>
    <Title>Merge release/2.1.5xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.5xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>6/08/2018 7:01:09 PM +00:00</CreatedAt>
    <ClosedAt>6/08/2018 8:24:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9797</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>4/08/2018 7:01:33 AM +00:00</CreatedAt>
    <ClosedAt>6/08/2018 8:24:50 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9795</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>3/08/2018 8:50:40 PM +00:00</CreatedAt>
    <ClosedAt>3/08/2018 9:18:17 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9786</IssueLabelID>
    <Title>Stale hard-coded runtime branding</Title>
    <Description>There are stale properties with "2.1.0 - Preview" in them in Branding.props. 

I don't think they are displayed anymore but I did not check the Mac installer.


</Description>
    <Title_Description>Stale hard-coded runtime branding There are stale properties with "2.1.0 - Preview" in them in Branding.props. 

I don't think they are displayed anymore but I did not check the Mac installer.


</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9784</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>2/08/2018 7:28:08 PM +00:00</CreatedAt>
    <ClosedAt>3/08/2018 4:46:12 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9783</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>2/08/2018 7:28:06 PM +00:00</CreatedAt>
    <ClosedAt>2/08/2018 8:55:26 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9778</IssueLabelID>
    <Title>Error installing SDK in Linux Mint 18.2</Title>
    <Description>## Steps to reproduce
Following installation instructions from: 
https://www.microsoft.com/net/download/linux-package-manager/ubuntu18-04/sdk-current

 because of the previous reported error



</Description>
    <Title_Description>Error installing SDK in Linux Mint 18.2 ## Steps to reproduce
Following installation instructions from: 
https://www.microsoft.com/net/download/linux-package-manager/ubuntu18-04/sdk-current

 because of the previous reported error



</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9775</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9768</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>30/07/2018 9:24:39 PM +00:00</CreatedAt>
    <ClosedAt>30/07/2018 11:26:31 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9767</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>30/07/2018 9:24:36 PM +00:00</CreatedAt>
    <ClosedAt>30/07/2018 11:26:12 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9766</IssueLabelID>
    <Title>Fix dotnet sln add for multitargeted C# and VB projects.</Title>
    <Description>This commit integrates a fix from the SDK repo that sets
.

Fixes #9477.
</Description>
    <Title_Description>Fix dotnet sln add for multitargeted C# and VB projects. This commit integrates a fix from the SDK repo that sets
.

Fixes #9477.
</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>30/07/2018 7:24:20 PM +00:00</CreatedAt>
    <ClosedAt>30/07/2018 9:29:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9764</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>30/07/2018 5:55:18 PM +00:00</CreatedAt>
    <ClosedAt>30/07/2018 7:32:34 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9763</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>30/07/2018 5:55:16 PM +00:00</CreatedAt>
    <ClosedAt>30/07/2018 7:32:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9762</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>30/07/2018 5:55:13 PM +00:00</CreatedAt>
    <ClosedAt>30/07/2018 7:31:45 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9761</IssueLabelID>
    <Title>NuGetSdkResolverPackageVersion should be MicrosoftBuildNuGetSdkResolverPackageVersion</Title>
    <Description>

Addresses: https://github.com/dotnet/cli/issues/9669
</Description>
    <Title_Description>NuGetSdkResolverPackageVersion should be MicrosoftBuildNuGetSdkResolverPackageVersion 

Addresses: https://github.com/dotnet/cli/issues/9669
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9757</IssueLabelID>
    <Title>Avoid GenerateAssemblyInfo for dotnet migrate tests</Title>
    <Description>This test is the only remaining test for cli-migrate to ensure cli-migrate is connected correctly. But it has the same test issue. Porting https://github.com/dotnet/cli-migrate/commit/21c69705d58b47fdfc834fd975f1d5ef4f44931c</Description>
    <Title_Description>Avoid GenerateAssemblyInfo for dotnet migrate tests This test is the only remaining test for cli-migrate to ensure cli-migrate is connected correctly. But it has the same test issue. Porting https://github.com/dotnet/cli-migrate/commit/21c69705d58b47fdfc834fd975f1d5ef4f44931c</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>27/07/2018 10:13:33 PM +00:00</CreatedAt>
    <ClosedAt>28/07/2018 3:32:12 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9755</IssueLabelID>
    <Title>Create binlogs by default.</Title>
    <Description>Create binlogs by default.

Addresses: https://github.com/dotnet/cli/issues/9671

Starting with release/2.1.3xx the change will flow into release/2.1.4xx; release/2.1.401; et al</Description>
    <Title_Description>Create binlogs by default. Create binlogs by default.

Addresses: https://github.com/dotnet/cli/issues/9671

Starting with release/2.1.3xx the change will flow into release/2.1.4xx; release/2.1.401; et al</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9754</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/07/2018 7:18:44 PM +00:00</CreatedAt>
    <ClosedAt>27/07/2018 11:21:06 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9753</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/07/2018 7:18:42 PM +00:00</CreatedAt>
    <ClosedAt>28/07/2018 3:58:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9752</IssueLabelID>
    <Title>Auto-update PR (Maestro) builds failing with incompatible framework version</Title>
    <Description>@crummel commented on [Fri Jul 27 2018](https://github.com/dotnet/core-eng/issues/3950)

This has been happening since Wednesday (https://devdiv.visualstudio.com/DevDiv/DevDiv%20Team/_build%2Fresults?buildId=1889485&amp;_a=summary).  Latest failure is https://devdiv.visualstudio.com/DevDiv/DevDiv%20Team/_build%2Fresults?buildId=1895972&amp;_a=summary:
 specifically by https://github.com/dotnet/cli/pull/9684 and other branches continue to fail. I suggest moving this issue to the CLI repo to let the team know in case they want to port that change and fix this.

</Description>
    <Title_Description>Auto-update PR (Maestro) builds failing with incompatible framework version @crummel commented on [Fri Jul 27 2018](https://github.com/dotnet/core-eng/issues/3950)

This has been happening since Wednesday (https://devdiv.visualstudio.com/DevDiv/DevDiv%20Team/_build%2Fresults?buildId=1889485&amp;_a=summary).  Latest failure is https://devdiv.visualstudio.com/DevDiv/DevDiv%20Team/_build%2Fresults?buildId=1895972&amp;_a=summary:
 specifically by https://github.com/dotnet/cli/pull/9684 and other branches continue to fail. I suggest moving this issue to the CLI repo to let the team know in case they want to port that change and fix this.

</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9751</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/07/2018 6:19:36 PM +00:00</CreatedAt>
    <ClosedAt>1/08/2018 12:18:59 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9750</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>27/07/2018 6:19:34 PM +00:00</CreatedAt>
    <ClosedAt>27/07/2018 6:19:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9749</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>27/07/2018 6:19:32 PM +00:00</CreatedAt>
    <ClosedAt>27/07/2018 6:19:34 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9746</IssueLabelID>
    <Title>.Net Core App on PlayStation 4</Title>
    <Description>How to run .Net Core App on PlayStation 4?</Description>
    <Title_Description>.Net Core App on PlayStation 4 How to run .Net Core App on PlayStation 4?</Title_Description>
    <Label>question</Label>
    <CreatedAt>27/07/2018 10:03:45 AM +00:00</CreatedAt>
    <ClosedAt>1/08/2018 8:57:02 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9743</IssueLabelID>
    <Title>Temporarily disable 3 tests; CLI:release/2.2.1xx</Title>
    <Description>Temporarily disable tests: 'GivenNewCommandItDisplaysCompletions' 'TestSdkRpm' and 'TestSdkDeb'

**build/package/Installer.DEB.proj 
build/package/Installer.DEB.targets 
build/package/Installer.RPM.targets** 
The internal package name formats of 'aspnetcore-runtime' 'dotnet-runtime' and 'dotnet-hostfxr' varies depending upon the version. 'TestSdkDeb' &amp; 'TestSdkRpm' should be re-enabled when the internal package name formats stabilize per a particular version. The test has been modified to reflect the currently agreed upon internal package name formats.
Reference: https://github.com/dotnet/cli/issues/9672

**test/dotnet.Tests/CommandTests/CompleteCommandTests.cs** 
The 'baseline' release/2.2.1xx uses a 1.0.2-beta3 TemplateEngine - ProdCon uses a non-public TemplateEngine version - the behaviors are different. The test should be re-enabled when the particular ProdCon TemplateEngine version is available. The test has been modified to reflect the forward TemplateEngine version's behavior.
Reference: https://github.com/dotnet/cli/issues/9737</Description>
    <Title_Description>Temporarily disable 3 tests; CLI:release/2.2.1xx Temporarily disable tests: 'GivenNewCommandItDisplaysCompletions' 'TestSdkRpm' and 'TestSdkDeb'

**build/package/Installer.DEB.proj 
build/package/Installer.DEB.targets 
build/package/Installer.RPM.targets** 
The internal package name formats of 'aspnetcore-runtime' 'dotnet-runtime' and 'dotnet-hostfxr' varies depending upon the version. 'TestSdkDeb' &amp; 'TestSdkRpm' should be re-enabled when the internal package name formats stabilize per a particular version. The test has been modified to reflect the currently agreed upon internal package name formats.
Reference: https://github.com/dotnet/cli/issues/9672

**test/dotnet.Tests/CommandTests/CompleteCommandTests.cs** 
The 'baseline' release/2.2.1xx uses a 1.0.2-beta3 TemplateEngine - ProdCon uses a non-public TemplateEngine version - the behaviors are different. The test should be re-enabled when the particular ProdCon TemplateEngine version is available. The test has been modified to reflect the forward TemplateEngine version's behavior.
Reference: https://github.com/dotnet/cli/issues/9737</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9741</IssueLabelID>
    <Title>Unable to load the service index (issues with additional feeds?)</Title>
    <Description>## Steps to reproduce
I am playing around with dotnet tool install and very stuck.  I get the "Unable to load the service index" error but the ROOT cause I believe is that it's attempting to look (for some reason) at my company's nuget feed..  

No idea why or how to change it?  Installing a tool should have nothing to do with this nuget feed but I guess I'm somehow pointing to the wrong feed?

If I remove our feed from the Nuget.config it works as expected but I would rather not have to do that of course.

## Expected  behavior
I can install dotnet tools

## Actual behavior
Unable to load the service index
error : Unable to load the service index for source ----[C:\Users\jbooth1\AppData\Local\Temp\mz02lxyw.emb\restore.csproj]
C:\Program Files\dotnet\sdk\2.1.302\NuGet.targets(1145): error :   Response status code does not indicate success: 401 (Unauthorized).

** I replaced the path to the nuget feed with ---- but it should be noted that it's pointing to my company nuget feed which has nothing to do with installing this tool...

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.302
 Commit:    9048955601

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.14393
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.302\

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  1.0.0-preview2-003131 [C:\Program Files\dotnet\sdk]
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.1.2 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.301 [C:\Program Files\dotnet\sdk]
  2.1.302 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>Unable to load the service index (issues with additional feeds?) ## Steps to reproduce
I am playing around with dotnet tool install and very stuck.  I get the "Unable to load the service index" error but the ROOT cause I believe is that it's attempting to look (for some reason) at my company's nuget feed..  

No idea why or how to change it?  Installing a tool should have nothing to do with this nuget feed but I guess I'm somehow pointing to the wrong feed?

If I remove our feed from the Nuget.config it works as expected but I would rather not have to do that of course.

## Expected  behavior
I can install dotnet tools

## Actual behavior
Unable to load the service index
error : Unable to load the service index for source ----[C:\Users\jbooth1\AppData\Local\Temp\mz02lxyw.emb\restore.csproj]
C:\Program Files\dotnet\sdk\2.1.302\NuGet.targets(1145): error :   Response status code does not indicate success: 401 (Unauthorized).

** I replaced the path to the nuget feed with ---- but it should be noted that it's pointing to my company nuget feed which has nothing to do with installing this tool...

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.302
 Commit:    9048955601

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.14393
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.302\

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  1.0.0-preview2-003131 [C:\Program Files\dotnet\sdk]
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.1.2 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200 [C:\Program Files\dotnet\sdk]
  2.1.301 [C:\Program Files\dotnet\sdk]
  2.1.302 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9738</IssueLabelID>
    <Title>dotnet tool install fails when there are multiple .csproj files in directory</Title>
    <Description>## Steps to reproduce

- Have multiple .csproj files in directory
- Run "dotnet tool install _package_ --version _version_ -g"

## Expected  behavior
Tool installs correctly.

## Actual behavior
Tool install fails with the following error: "Specify which project file to use because this '/sln' contains more than one project file."

## Environment data
.NET Core SDK (reflecting any global.json):
 Version:   2.1.302
 Commit:    9048955601

Runtime Environment:
 OS Name:     debian
 OS Version:  9
 OS Platform: Linux
 RID:         debian.9-x64
 Base Path:   /usr/share/dotnet/sdk/2.1.302/

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  2.1.302 [/usr/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]
</Description>
    <Title_Description>dotnet tool install fails when there are multiple .csproj files in directory ## Steps to reproduce

- Have multiple .csproj files in directory
- Run "dotnet tool install _package_ --version _version_ -g"

## Expected  behavior
Tool installs correctly.

## Actual behavior
Tool install fails with the following error: "Specify which project file to use because this '/sln' contains more than one project file."

## Environment data
.NET Core SDK (reflecting any global.json):
 Version:   2.1.302
 Commit:    9048955601

Runtime Environment:
 OS Name:     debian
 OS Version:  9
 OS Platform: Linux
 RID:         debian.9-x64
 Base Path:   /usr/share/dotnet/sdk/2.1.302/

Host (useful for support):
  Version: 2.1.2
  Commit:  811c3ce6c0

.NET Core SDKs installed:
  2.1.302 [/usr/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]
</Title_Description>
    <Label>Bug</Label>
    <CreatedAt>26/07/2018 4:31:48 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9737</IssueLabelID>
    <Title>Re-enable GivenNewCommandItDisplaysCompletions test</Title>
    <Description>The test is caught between versions of the TemplateEngine and its behaviors.
Current TemplateEngine version = 1.0.2-beta3

When the baseline of release/2.2.1xx is built - the test passes; however when release/2.2.1xx is built in ProdCon with TemplateEngine = 1.0.2-beta3-20180724-1889544 the test fails.

+++++++++++++++++++++++++

The test has been updated to the new behavior; however this new TemplateEngine is not yet publicly available - so the 'GivenNewCommandItDisplaysCompletions' test is disabled for now.

Reference: test/dotnet.Tests/CommandTests/CompleteCommandTests.cs 




</Description>
    <Title_Description>Re-enable GivenNewCommandItDisplaysCompletions test The test is caught between versions of the TemplateEngine and its behaviors.
Current TemplateEngine version = 1.0.2-beta3

When the baseline of release/2.2.1xx is built - the test passes; however when release/2.2.1xx is built in ProdCon with TemplateEngine = 1.0.2-beta3-20180724-1889544 the test fails.

+++++++++++++++++++++++++

The test has been updated to the new behavior; however this new TemplateEngine is not yet publicly available - so the 'GivenNewCommandItDisplaysCompletions' test is disabled for now.

Reference: test/dotnet.Tests/CommandTests/CompleteCommandTests.cs 




</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9732</IssueLabelID>
    <Title>[WIP] Fix tests in release/2.2.1xx</Title>
    <Description>Fix tests in release/2.2.1xx
</Description>
    <Title_Description>[WIP] Fix tests in release/2.2.1xx Fix tests in release/2.2.1xx
</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9728</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>24/07/2018 7:51:06 AM +00:00</CreatedAt>
    <ClosedAt>24/07/2018 4:27:22 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9727</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>24/07/2018 7:51:04 AM +00:00</CreatedAt>
    <ClosedAt>24/07/2018 4:26:58 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9725</IssueLabelID>
    <Title>Update SDK for stage0 to '1.1.10-servicing-005283'</Title>
    <Description>Reference: https://github.com/dotnet/cli/pull/9723

Part 2: Adding Debian 9 for rel/1.1.0

'Update SDK for stage0 to 1.1.10-servicing-005283'</Description>
    <Title_Description>Update SDK for stage0 to '1.1.10-servicing-005283' Reference: https://github.com/dotnet/cli/pull/9723

Part 2: Adding Debian 9 for rel/1.1.0

'Update SDK for stage0 to 1.1.10-servicing-005283'</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9724</IssueLabelID>
    <Title>Fixing build badges for release/2.1.4xx</Title>
    <Description>Fixing build badges for release/2.1.4xx

See: https://github.com/johnbeisner/cli/blob/Fix4xxBadges/README.md</Description>
    <Title_Description>Fixing build badges for release/2.1.4xx Fixing build badges for release/2.1.4xx

See: https://github.com/johnbeisner/cli/blob/Fix4xxBadges/README.md</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9723</IssueLabelID>
    <Title>First draft: adding Debian 9</Title>
    <Description>First draft: adding Debian 9

Follow-up will be to move the SDK build engine to a 1.1.10* version: see 'run-build.sh'



</Description>
    <Title_Description>First draft: adding Debian 9 First draft: adding Debian 9

Follow-up will be to move the SDK build engine to a 1.1.10* version: see 'run-build.sh'



</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9720</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>23/07/2018 12:00:54 AM +00:00</CreatedAt>
    <ClosedAt>23/07/2018 1:27:14 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9719</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>23/07/2018 12:00:53 AM +00:00</CreatedAt>
    <ClosedAt>23/07/2018 1:26:42 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9715</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>22/07/2018 12:00:54 AM +00:00</CreatedAt>
    <ClosedAt>22/07/2018 5:30:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9714</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>22/07/2018 12:00:52 AM +00:00</CreatedAt>
    <ClosedAt>22/07/2018 3:01:09 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9712</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>20/07/2018 10:56:58 PM +00:00</CreatedAt>
    <ClosedAt>21/07/2018 8:37:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9711</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>20/07/2018 10:56:57 PM +00:00</CreatedAt>
    <ClosedAt>21/07/2018 8:24:40 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9709</IssueLabelID>
    <Title>Update the .NET SDK version.</Title>
    <Description>Bump the .NET SDK version following the NuGet insertion.
</Description>
    <Title_Description>Update the .NET SDK version. Bump the .NET SDK version following the NuGet insertion.
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>20/07/2018 1:35:43 AM +00:00</CreatedAt>
    <ClosedAt>20/07/2018 2:50:20 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9708</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>20/07/2018 12:00:58 AM +00:00</CreatedAt>
    <ClosedAt>20/07/2018 4:58:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9707</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>19/07/2018 7:42:58 PM +00:00</CreatedAt>
    <ClosedAt>20/07/2018 6:33:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9704</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>19/07/2018 7:05:26 AM +00:00</CreatedAt>
    <ClosedAt>19/07/2018 5:21:13 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9701</IssueLabelID>
    <Title>UseBundledNETCoreAppPackageVersionAsDefaultNetCorePatchVersion not being set as expected for 2.2.0-preview1-*</Title>
    <Description>We have this:
https://github.com/dotnet/cli/blob/74cdff42c735d8e5b89dedc8d0f0c5ebcb86a902/build/MSBuildExtensions.targets#L135-L143

But we are generating this:


Even though patch is 0 and this is a preview build

cc @wli3 @dsplaisted 

</Description>
    <Title_Description>UseBundledNETCoreAppPackageVersionAsDefaultNetCorePatchVersion not being set as expected for 2.2.0-preview1-* We have this:
https://github.com/dotnet/cli/blob/74cdff42c735d8e5b89dedc8d0f0c5ebcb86a902/build/MSBuildExtensions.targets#L135-L143

But we are generating this:


Even though patch is 0 and this is a preview build

cc @wli3 @dsplaisted 

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9698</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>19/07/2018 12:01:10 AM +00:00</CreatedAt>
    <ClosedAt>27/07/2018 1:16:19 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9697</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>19/07/2018 12:01:08 AM +00:00</CreatedAt>
    <ClosedAt>19/07/2018 5:21:57 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9696</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>19/07/2018 12:01:06 AM +00:00</CreatedAt>
    <ClosedAt>19/07/2018 3:40:08 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9695</IssueLabelID>
    <Title>Fix RPM install errors; CLI:release/2.2.1xx</Title>
    <Description>**build/package/Installer.RPM.targets** 
Addresses the current RPM errors for release/2.2.1xx due to incorrect aspnetcore-runtime &amp; runtime internal package names: https://github.com/dotnet/cli/issues/9672
EXEC : error : Package: dotnet-sdk-2.2-2.2.100_preview1_009138-1.x86_64 (/dotnet-sdk-2.2.100-preview1-009138-x64)
    Requires: aspnetcore-runtime-2.2 &gt;= 2.2.0
EXEC : error : Package: dotnet-sdk-2.2-2.2.100_preview1_009138-1.x86_64 (/dotnet-sdk-2.2.100-preview1-009138-x64)
    Requires: dotnet-runtime-2.2 &gt;= 2.2.0

**build/package/Installer.DEB.proj 
build/package/Installer.DEB.targets** 
formatting and updated comments

</Description>
    <Title_Description>Fix RPM install errors; CLI:release/2.2.1xx **build/package/Installer.RPM.targets** 
Addresses the current RPM errors for release/2.2.1xx due to incorrect aspnetcore-runtime &amp; runtime internal package names: https://github.com/dotnet/cli/issues/9672
EXEC : error : Package: dotnet-sdk-2.2-2.2.100_preview1_009138-1.x86_64 (/dotnet-sdk-2.2.100-preview1-009138-x64)
    Requires: aspnetcore-runtime-2.2 &gt;= 2.2.0
EXEC : error : Package: dotnet-sdk-2.2-2.2.100_preview1_009138-1.x86_64 (/dotnet-sdk-2.2.100-preview1-009138-x64)
    Requires: dotnet-runtime-2.2 &gt;= 2.2.0

**build/package/Installer.DEB.proj 
build/package/Installer.DEB.targets** 
formatting and updated comments

</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9692</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>18/07/2018 9:22:58 PM +00:00</CreatedAt>
    <ClosedAt>18/07/2018 9:35:20 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9685</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>18/07/2018 5:25:28 PM +00:00</CreatedAt>
    <ClosedAt>18/07/2018 9:06:46 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9684</IssueLabelID>
    <Title>Pin stage0 used for update-dependencies to stable 2.1 build</Title>
    <Description>@dagood @eerhardt 

We're getting builds from master and then trying to run on 2.1 tooling on 3.0. The builds from master aren't in great shape right now and I don't like having 3.0 dependent projects in 2.1.x branches. It seems to me that we can just use a stable build and stable TFM for the update-dependencies but maybe I've misunderstood something about how this works.

This should fix the issue identified here: https://github.com/dotnet/versions/pull/331#issuecomment-405972675</Description>
    <Title_Description>Pin stage0 used for update-dependencies to stable 2.1 build @dagood @eerhardt 

We're getting builds from master and then trying to run on 2.1 tooling on 3.0. The builds from master aren't in great shape right now and I don't like having 3.0 dependent projects in 2.1.x branches. It seems to me that we can just use a stable build and stable TFM for the update-dependencies but maybe I've misunderstood something about how this works.

This should fix the issue identified here: https://github.com/dotnet/versions/pull/331#issuecomment-405972675</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>18/07/2018 5:19:04 PM +00:00</CreatedAt>
    <ClosedAt>18/07/2018 9:07:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9681</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>18/07/2018 12:01:38 AM +00:00</CreatedAt>
    <ClosedAt>18/07/2018 1:01:04 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9680</IssueLabelID>
    <Title>[source-build] DownloadPackageVersionsProps target is no longer run</Title>
    <Description>I think this must have gotten lost in the refactoring - the  which also no longer exists.  I tried to prep a PR for this but ended up not know where you would want all of it - let me know if I can help at all.

cc @nguerrera @dsplaisted</Description>
    <Title_Description>[source-build] DownloadPackageVersionsProps target is no longer run I think this must have gotten lost in the refactoring - the  which also no longer exists.  I tried to prep a PR for this but ended up not know where you would want all of it - let me know if I can help at all.

cc @nguerrera @dsplaisted</Title_Description>
    <Label>
    </Label>
    <Assignee>crummel</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9679</IssueLabelID>
    <Title>Updating the version of Newtonsoft.Json: 10.0.3</Title>
    <Description>Updating the version of Newtonsoft.Json: 10.0.3

Reference: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1866945
error NU1605: Detected package downgrade: Newtonsoft.Json from 10.0.3 to 9.0.1.
</Description>
    <Title_Description>Updating the version of Newtonsoft.Json: 10.0.3 Updating the version of Newtonsoft.Json: 10.0.3

Reference: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=1866945
error NU1605: Detected package downgrade: Newtonsoft.Json from 10.0.3 to 9.0.1.
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9678</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/07/2018 12:01:08 PM +00:00</CreatedAt>
    <ClosedAt>18/07/2018 10:05:45 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9677</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9676</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>Some commits were left out of the most recent merge-up for some reason (https://github.com/dotnet/cli/pull/9641).</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx Some commits were left out of the most recent merge-up for some reason (https://github.com/dotnet/cli/pull/9641).</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/07/2018 12:06:11 AM +00:00</CreatedAt>
    <ClosedAt>17/07/2018 12:07:33 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9675</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/07/2018 12:01:34 AM +00:00</CreatedAt>
    <ClosedAt>17/07/2018 6:16:02 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9674</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/07/2018 12:01:31 AM +00:00</CreatedAt>
    <ClosedAt>17/07/2018 7:17:19 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9672</IssueLabelID>
    <Title>Change dotnet-sdk debian package file dependency name back to packagename-major.minor</Title>
    <Description>2.2.1's current dependencies uses wrong scheme. To unblock the merge branch PR SDK is changed to depend on . We should revert it back when dependencies moves forward.

https://github.com/dotnet/cli/blob/release/2.2.1xx/packaging/deb/dotnet-debian_config.json#L32

 dpkg --info dotnet-runtime-2.2.0-preview1-26620-03-x64.deb
 new debian package version 2.0.
 size 20876842 bytes: control archive=6089 bytes.
     913 bytes    11 lines      control
   24087 bytes   182 lines      md5sums
 Package: **dotnet-runtime-2.2.0-preview1-26620-03** _should be dotnet-runtime-2.2_
 Version: 2.2.0-preview1-26620-03-1
 Architecture: amd64
 Maintainer: .NET Core Team &lt;dotnetpackages@dotnetfoundation.org&gt;
 Installed-Size: 71496
 Depends: dotnet-hostfxr-2.2.0-preview1-26620-03 (&gt;= 2.2.0-preview1-26620-03) dotnet-runtime-deps-2.2.0-preview1-26620-03 (&gt;= 2.2.0-preview1-26620-03)
 Section: libs
 Priority: standard
 Homepage: https://dot.net/core
 Description: Microsoft .NET Core Runtime - 2.2.0 Preview 1 Microsoft.NETCore.App 2.2.0-preview1-26620-03
  .NET Core is a development platform that you can use to build command-line applications microservices and modern websites. It is open source cross-platform and is supported by Microsoft. We hope you enjoy using it! If you do please consider joining the active community of developers that are contributing to the project on GitHub (https://github.com/dotnet/core). We happily accept issues and PRs.


 dpkg --info aspnetcore-runtime-2.2.0-preview1-34355-x64.deb
 new debian package version 2.0.
 size 22114126 bytes: control archive=7654 bytes.
     725 bytes    11 lines      control
   33851 bytes   235 lines      md5sums
 Package: **aspnetcore-runtime-2.2.0-preview1-34355**
 Version: 2.2.0-preview1-34355-1
 Architecture: amd64
 Maintainer: Microsoft &lt;nugetaspnet@microsoft.com&gt;
 Installed-Size: 72553
 Depends: libc6 (&gt;= 2.14) dotnet-runtime-2.2.0-preview1-26529-01
 Section: devel
 Priority: standard
 Homepage: https://www.asp.net/
 Description: Microsoft ASP.NET Core 2.2.0-preview1-34355 Shared Framework
</Description>
    <Title_Description>Change dotnet-sdk debian package file dependency name back to packagename-major.minor 2.2.1's current dependencies uses wrong scheme. To unblock the merge branch PR SDK is changed to depend on . We should revert it back when dependencies moves forward.

https://github.com/dotnet/cli/blob/release/2.2.1xx/packaging/deb/dotnet-debian_config.json#L32

 dpkg --info dotnet-runtime-2.2.0-preview1-26620-03-x64.deb
 new debian package version 2.0.
 size 20876842 bytes: control archive=6089 bytes.
     913 bytes    11 lines      control
   24087 bytes   182 lines      md5sums
 Package: **dotnet-runtime-2.2.0-preview1-26620-03** _should be dotnet-runtime-2.2_
 Version: 2.2.0-preview1-26620-03-1
 Architecture: amd64
 Maintainer: .NET Core Team &lt;dotnetpackages@dotnetfoundation.org&gt;
 Installed-Size: 71496
 Depends: dotnet-hostfxr-2.2.0-preview1-26620-03 (&gt;= 2.2.0-preview1-26620-03) dotnet-runtime-deps-2.2.0-preview1-26620-03 (&gt;= 2.2.0-preview1-26620-03)
 Section: libs
 Priority: standard
 Homepage: https://dot.net/core
 Description: Microsoft .NET Core Runtime - 2.2.0 Preview 1 Microsoft.NETCore.App 2.2.0-preview1-26620-03
  .NET Core is a development platform that you can use to build command-line applications microservices and modern websites. It is open source cross-platform and is supported by Microsoft. We hope you enjoy using it! If you do please consider joining the active community of developers that are contributing to the project on GitHub (https://github.com/dotnet/core). We happily accept issues and PRs.


 dpkg --info aspnetcore-runtime-2.2.0-preview1-34355-x64.deb
 new debian package version 2.0.
 size 22114126 bytes: control archive=7654 bytes.
     725 bytes    11 lines      control
   33851 bytes   235 lines      md5sums
 Package: **aspnetcore-runtime-2.2.0-preview1-34355**
 Version: 2.2.0-preview1-34355-1
 Architecture: amd64
 Maintainer: Microsoft &lt;nugetaspnet@microsoft.com&gt;
 Installed-Size: 72553
 Depends: libc6 (&gt;= 2.14) dotnet-runtime-2.2.0-preview1-26529-01
 Section: devel
 Priority: standard
 Homepage: https://www.asp.net/
 Description: Microsoft ASP.NET Core 2.2.0-preview1-34355 Shared Framework
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9671</IssueLabelID>
    <Title>Create binlog by default (release/2.1.4xx)</Title>
    <Description>Binlogs are very useful to diagnose failures. It's time-consuming to edit  somewhere would make sense and matches what RepoToolset/Arcade does.

I'm filing this because I'm putting a patch back in Source-Build and want to reference this issue. Adding a param that we can pass to always create the binlog would be fine too but it's fairly standard (especially for RepoToolset) to always produce binlogs.</Description>
    <Title_Description>Create binlog by default (release/2.1.4xx) Binlogs are very useful to diagnose failures. It's time-consuming to edit  somewhere would make sense and matches what RepoToolset/Arcade does.

I'm filing this because I'm putting a patch back in Source-Build and want to reference this issue. Adding a param that we can pass to always create the binlog would be fine too but it's fairly standard (especially for RepoToolset) to always produce binlogs.</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9669</IssueLabelID>
    <Title>Fix NuGetSdkResolverPackageVersion dependency property name</Title>
    <Description>This property has the wrong name and doesn't work in Source-Build and ProdCon dependency flow:

https://github.com/dotnet/cli/blob/75a5ed3ab21e06790107553ac5a592e7eef5d7e2/build/DependencyVersions.props#L55

https://github.com/dotnet/cli/blob/75a5ed3ab21e06790107553ac5a592e7eef5d7e2/src/redist/redist.csproj#L20

Instead of  to be included in ProdCon builds.

</Description>
    <Title_Description>Fix NuGetSdkResolverPackageVersion dependency property name This property has the wrong name and doesn't work in Source-Build and ProdCon dependency flow:

https://github.com/dotnet/cli/blob/75a5ed3ab21e06790107553ac5a592e7eef5d7e2/build/DependencyVersions.props#L55

https://github.com/dotnet/cli/blob/75a5ed3ab21e06790107553ac5a592e7eef5d7e2/src/redist/redist.csproj#L20

Instead of  to be included in ProdCon builds.

</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9666</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>14/07/2018 12:01:30 PM +00:00</CreatedAt>
    <ClosedAt>16/07/2018 3:15:40 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9665</IssueLabelID>
    <Title>Question: Where is the HTTP CLI for .NET Core WebApi Projects?</Title>
    <Description>I was looking forward to trying out that HTTP CLI demonstrated at Build 2018 but I can not find it anywhere. I have not found any documentation on it either. Does it exist?

You can see it here:
https://youtu.be/KAIJ3ezQb3c?t=19m27s





</Description>
    <Title_Description>Question: Where is the HTTP CLI for .NET Core WebApi Projects? I was looking forward to trying out that HTTP CLI demonstrated at Build 2018 but I can not find it anywhere. I have not found any documentation on it either. Does it exist?

You can see it here:
https://youtu.be/KAIJ3ezQb3c?t=19m27s





</Title_Description>
    <Label>question</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>14/07/2018 10:37:12 AM +00:00</CreatedAt>
    <ClosedAt>16/07/2018 9:05:50 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9662</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>14/07/2018 12:01:37 AM +00:00</CreatedAt>
    <ClosedAt>14/07/2018 1:46:17 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9656</IssueLabelID>
    <Title>[SDK 2.1.300] Command 'dotnet publish' fails for projects with GeneratePackageOnBuild=true</Title>
    <Description>@gitorrin commented on [Thu Jul 12 2018](https://github.com/dotnet/core/issues/1778)

Command 'dotnet publish' fails for projects publishing with GeneratePackageOnBuild=true. 
TargetFramework is netcoreapp2.0.

) before publishing.

---

@gitorrin commented on [Thu Jul 12 2018](https://github.com/dotnet/core/issues/1778#issuecomment-404514358)

Thanks for looking into this @dasMulli.

</Description>
    <Title_Description>[SDK 2.1.300] Command 'dotnet publish' fails for projects with GeneratePackageOnBuild=true @gitorrin commented on [Thu Jul 12 2018](https://github.com/dotnet/core/issues/1778)

Command 'dotnet publish' fails for projects publishing with GeneratePackageOnBuild=true. 
TargetFramework is netcoreapp2.0.

) before publishing.

---

@gitorrin commented on [Thu Jul 12 2018](https://github.com/dotnet/core/issues/1778#issuecomment-404514358)

Thanks for looking into this @dasMulli.

</Title_Description>
    <Label>Bug</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9653</IssueLabelID>
    <Title>LOC CHECKIN | dotnet/cli release/2.1.4xx | 20180712</Title>
    <Label>Approved to merge</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9652</IssueLabelID>
    <Title>Running publish can hang after printing the banner</Title>
    <Description>Today I have built an updated Yocto image which contains four SDK based projects. Each publishing step for these four projects hung during the build.

Yocto builds the projects in parallel and each runs through building the client-side packages with node and then runs the equivalent of </Description>
    <Title_Description>Running publish can hang after printing the banner Today I have built an updated Yocto image which contains four SDK based projects. Each publishing step for these four projects hung during the build.

Yocto builds the projects in parallel and each runs through building the client-side packages with node and then runs the equivalent of </Title_Description>
    <Label>Bug</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>12/07/2018 2:22:05 PM +00:00</CreatedAt>
    <ClosedAt>20/07/2018 9:12:02 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9650</IssueLabelID>
    <Title>Change warning message on `dotnet tool update` and `dotnet tool uninstall`</Title>
    <Description>## Steps to reproduce

 output:

.NET Core SDK (reflecting any global.json):
 Version:   2.1.301
 Commit:    59524873d6

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.13
 OS Platform: Darwin
 RID:         osx.10.13-x64
 Base Path:   /usr/local/share/dotnet/sdk/2.1.301/

Host (useful for support):
  Version: 2.1.1
  Commit:  6985b9f684





</Description>
    <Title_Description>Change warning message on  output:

.NET Core SDK (reflecting any global.json):
 Version:   2.1.301
 Commit:    59524873d6

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.13
 OS Platform: Darwin
 RID:         osx.10.13-x64
 Base Path:   /usr/local/share/dotnet/sdk/2.1.301/

Host (useful for support):
  Version: 2.1.1
  Commit:  6985b9f684





</Title_Description>
    <Label>good first issue</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9647</IssueLabelID>
    <Title>Revert version change for ASP.NET bundled templates.</Title>
    <Description>The bundled ASP.NET templates should match the ASP.NET version.

Confusion over versions and missing packages caused a previous commit
to keep the bundled template versions the same while reving the ASP.NET version
from the private branch.

This commit reverts those changes.
</Description>
    <Title_Description>Revert version change for ASP.NET bundled templates. The bundled ASP.NET templates should match the ASP.NET version.

Confusion over versions and missing packages caused a previous commit
to keep the bundled template versions the same while reving the ASP.NET version
from the private branch.

This commit reverts those changes.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>11/07/2018 6:19:54 PM +00:00</CreatedAt>
    <ClosedAt>11/07/2018 8:55:33 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9646</IssueLabelID>
    <Title>Installation success screen for Windows x86 SDK installer shows wrong installation path</Title>
    <Description>Success info for latest DotNet Core SDK v2.1.302 for x86 Windows installer points to wrong installation location:

![default netcore-v2 0 3-installer-screen](https://user-images.githubusercontent.com/801959/42588971-b5ebaa82-853f-11e8-8771-f0acecb4f564.jpg)

Information points to 




</Description>
    <Title_Description>Installation success screen for Windows x86 SDK installer shows wrong installation path Success info for latest DotNet Core SDK v2.1.302 for x86 Windows installer points to wrong installation location:

![default netcore-v2 0 3-installer-screen](https://user-images.githubusercontent.com/801959/42588971-b5ebaa82-853f-11e8-8771-f0acecb4f564.jpg)

Information points to 




</Title_Description>
    <Label>Bug</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>11/07/2018 5:24:30 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9641</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9639</IssueLabelID>
    <Title>Update version to: 3.1.100-alpha1 - CLI</Title>
    <Description>Update version to "3.1.100-alpha1"
</Description>
    <Title_Description>Update version to: 3.1.100-alpha1 - CLI Update version to "3.1.100-alpha1"
</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9634</IssueLabelID>
    <Title>Merge release/2.1.2xx to release/2.1.3xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.2xx to release/2.1.3xx 
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>10/07/2018 6:37:10 PM +00:00</CreatedAt>
    <ClosedAt>12/07/2018 11:00:44 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9633</IssueLabelID>
    <Title>Merge release/2.1.3xx-MSRC to release/2.1.3xx</Title>
    <Description>
    </Description>
    <Title_Description>Merge release/2.1.3xx-MSRC to release/2.1.3xx </Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>10/07/2018 5:45:54 PM +00:00</CreatedAt>
    <ClosedAt>11/07/2018 1:25:06 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9632</IssueLabelID>
    <Title>Merge release/2.1.2xx-MSRC to release/2.1.2xx</Title>
    <Description>
    </Description>
    <Title_Description>Merge release/2.1.2xx-MSRC to release/2.1.2xx </Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>10/07/2018 5:41:40 PM +00:00</CreatedAt>
    <ClosedAt>10/07/2018 6:26:34 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9631</IssueLabelID>
    <Title>Merge rel/1.1.0-MSRC to rel/1.1.0</Title>
    <Description>
    </Description>
    <Title_Description>Merge rel/1.1.0-MSRC to rel/1.1.0 
</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>10/07/2018 5:40:41 PM +00:00</CreatedAt>
    <ClosedAt>10/07/2018 6:42:52 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9630</IssueLabelID>
    <Title>Insert NuGet Build 4.8.0-preview5.5328 into cli</Title>
    <Description>Insert NuGet Build 4.8.0-preview5.5328 into cli release/2.1.4xx branch</Description>
    <Title_Description>Insert NuGet Build 4.8.0-preview5.5328 into cli Insert NuGet Build 4.8.0-preview5.5328 into cli release/2.1.4xx branch</Title_Description>
    <Label>Pending M2 Approval</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>10/07/2018 4:36:39 PM +00:00</CreatedAt>
    <ClosedAt>13/07/2018 8:33:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9629</IssueLabelID>
    <Title>"no-cache" option for dotnet tool update</Title>
    <Description>## Steps to reproduce
I created a tool which I uploaded to a private nuget server. I did an install and then created an update (0.0.2). 

## Expected  behavior
 it still gave me 0.0.1. I am sure 0.0.2 was visible as when I did check it through Visual Studio the nuget installer gave me 0.0.2. But through the dotnet tool update it sill gave me 0.0.1. An half hour later I was able to get 0.0.2.


So question is is there a caching mechanism into the dotnet tool verb?
And also why not use the nuget installed sources for resolving caching etc? Now we have to give --add-source for example ...








</Description>
    <Title_Description>"no-cache" option for dotnet tool update ## Steps to reproduce
I created a tool which I uploaded to a private nuget server. I did an install and then created an update (0.0.2). 

## Expected  behavior
 it still gave me 0.0.1. I am sure 0.0.2 was visible as when I did check it through Visual Studio the nuget installer gave me 0.0.2. But through the dotnet tool update it sill gave me 0.0.1. An half hour later I was able to get 0.0.2.


So question is is there a caching mechanism into the dotnet tool verb?
And also why not use the nuget installed sources for resolving caching etc? Now we have to give --add-source for example ...








</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9626</IssueLabelID>
    <Title>Produce/publish the VS.Redist.Common.Net.Core.SDK.MSBuildExtensions artifacts</Title>
    <Description>Produce/publish the "VS.Redist.Common.Net.Core.SDK.MSBuildExtensions" artifacts; drop to "CLI" not "SDK"

Put back the infrastructure to generate the 'VS.Redist.Common.Net.Core.SDK.MSBuildExtensions' artifacts

</Description>
    <Title_Description>Produce/publish the VS.Redist.Common.Net.Core.SDK.MSBuildExtensions artifacts Produce/publish the "VS.Redist.Common.Net.Core.SDK.MSBuildExtensions" artifacts; drop to "CLI" not "SDK"

Put back the infrastructure to generate the 'VS.Redist.Common.Net.Core.SDK.MSBuildExtensions' artifacts

</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9622</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>9/07/2018 5:01:16 PM +00:00</CreatedAt>
    <ClosedAt>12/07/2018 6:44:20 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9621</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>9/07/2018 5:01:13 PM +00:00</CreatedAt>
    <ClosedAt>10/07/2018 11:21:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9617</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>6/07/2018 9:49:13 PM +00:00</CreatedAt>
    <ClosedAt>9/07/2018 4:59:34 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9616</IssueLabelID>
    <Title>dotnet pack --no-build ignores --configuration switch</Title>
    <Description>Hi
I've noticed that dotnet pack with --no-build parameter always looks for the /bin/Release directory despite setting --configuration:Debug.

## Steps to reproduce
dotnet pack --configuration Debug --no-build --output nupkgs

## Expected  behavior
Creates a nupkg file from the debug output in the nupkgs directory

## Actual behavior
Tries to create a nupkg file from the Release output and fails if the project has never been built with Release (bin/release/netcoreapp2.0 directory is not found)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300
 Commit:    adab45bf0c

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300\

Host (useful for support):
  Version: 2.1.0
  Commit:  caa7b7e2ba

.NET Core SDKs installed:
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]





</Description>
    <Title_Description>dotnet pack --no-build ignores --configuration switch Hi
I've noticed that dotnet pack with --no-build parameter always looks for the /bin/Release directory despite setting --configuration:Debug.

## Steps to reproduce
dotnet pack --configuration Debug --no-build --output nupkgs

## Expected  behavior
Creates a nupkg file from the debug output in the nupkgs directory

## Actual behavior
Tries to create a nupkg file from the Release output and fails if the project has never been built with Release (bin/release/netcoreapp2.0 directory is not found)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300
 Commit:    adab45bf0c

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300\

Host (useful for support):
  Version: 2.1.0
  Commit:  caa7b7e2ba

.NET Core SDKs installed:
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]





</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9613</IssueLabelID>
    <Title>[Tools] The command name in installer message is confusingly</Title>
    <Description>From dotnet-outdated issue: https://github.com/jerriep/dotnet-outdated/issues/37

## Steps to reproduce

Execute 






</Description>
    <Title_Description>[Tools] The command name in installer message is confusingly From dotnet-outdated issue: https://github.com/jerriep/dotnet-outdated/issues/37

## Steps to reproduce

Execute 






</Title_Description>
    <Label>tool</Label>
    <CreatedAt>6/07/2018 6:11:30 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9612</IssueLabelID>
    <Title>Updating the WebSdk from aspnet/websdk/2.1.4xx</Title>
    <Description>Updating the websdk version

https://dotnet.myget.org/feed/dotnet-web/package/nuget/Microsoft.NET.Sdk.web/2.1.400-preview1-20180705-1834985 

</Description>
    <Title_Description>Updating the WebSdk from aspnet/websdk/2.1.4xx Updating the websdk version

https://dotnet.myget.org/feed/dotnet-web/package/nuget/Microsoft.NET.Sdk.web/2.1.400-preview1-20180705-1834985 

</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>6/07/2018 1:28:02 AM +00:00</CreatedAt>
    <ClosedAt>9/07/2018 11:20:26 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9609</IssueLabelID>
    <Title>Add XSLT Transform for apphost</Title>
    <Description>To avoid sign check whitelist apphost.exe name changes very build. Sign check uses File Id in MSI as whitelist name. Template apphost.exe get a new "File Id" in msi different every time (since File Id is generated according to file path and file path has version number). Use XSLT tranform to match the file path contains "AppHostTemplate\apphost.exe" and give it the same ID all the time.</Description>
    <Title_Description>Add XSLT Transform for apphost To avoid sign check whitelist apphost.exe name changes very build. Sign check uses File Id in MSI as whitelist name. Template apphost.exe get a new "File Id" in msi different every time (since File Id is generated according to file path and file path has version number). Use XSLT tranform to match the file path contains "AppHostTemplate\apphost.exe" and give it the same ID all the time.</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>3/07/2018 11:30:23 PM +00:00</CreatedAt>
    <ClosedAt>10/07/2018 11:24:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9608</IssueLabelID>
    <Title>Revert implementation of the --mode option for the publish command.</Title>
    <Description>This commit reverts the implementation of the  command.  A bug in the apphost prevents this feature from working
properly in some cases and there currently is not a mechanism to service it
with this feature.

The team has decided to move this feature to 2.2.1xx for the .NET Core SDK.

Fixes dotnet/sdk#2380.</Description>
    <Title_Description>Revert implementation of the --mode option for the publish command. This commit reverts the implementation of the  command.  A bug in the apphost prevents this feature from working
properly in some cases and there currently is not a mechanism to service it
with this feature.

The team has decided to move this feature to 2.2.1xx for the .NET Core SDK.

Fixes dotnet/sdk#2380.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>3/07/2018 11:16:07 PM +00:00</CreatedAt>
    <ClosedAt>9/07/2018 11:29:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9607</IssueLabelID>
    <Title>Feature request: self-contained global tools</Title>
    <Description>Based on the discussion in https://github.com/dotnet/cli/issues/9605 it would be great to have self-contained global tools to allow dependencies that are currently not possible to have in global tools. 



</Description>
    <Title_Description>Feature request: self-contained global tools Based on the discussion in https://github.com/dotnet/cli/issues/9605 it would be great to have self-contained global tools to allow dependencies that are currently not possible to have in global tools. 



</Title_Description>
    <Label>tool</Label>
    <CreatedAt>3/07/2018 6:07:52 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9606</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>3/07/2018 4:25:03 PM +00:00</CreatedAt>
    <ClosedAt>9/07/2018 4:59:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9605</IssueLabelID>
    <Title>clearer exception when calling dotnet pack on global tool that depends on packages with `dependency`</Title>
    <Description>## Steps to reproduce






</Description>
    <Title_Description>clearer exception when calling dotnet pack on global tool that depends on packages with 




</Title_Description>
    <Label>tool</Label>
    <CreatedAt>3/07/2018 12:54:50 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9604</IssueLabelID>
    <Title>Removing 'Locked-file' test; CLI:release/2.1.3xx</Title>
    <Description>Removing 'Locked-file' test: ItFailsInLessThanOneSecondWhenTheProjectAssetsJsonDoesNotExist

</Description>
    <Title_Description>Removing 'Locked-file' test; CLI:release/2.1.3xx Removing 'Locked-file' test: ItFailsInLessThanOneSecondWhenTheProjectAssetsJsonDoesNotExist

</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9601</IssueLabelID>
    <Title>`dotnet clean` cannot remove shims generated under /obj folder</Title>
    <Description>
    </Description>
    <Title_Description> cannot remove shims generated under /obj folder 






</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9600</IssueLabelID>
    <Title>Namespace support for Global Tools?</Title>
    <Description>Will there be namespace support for global tools just like NPM has added?
When this feature gets popular the command names will have duplicates soon so maybe a namespace will give it a more unique approach?
Like  ?
Any thoughts?



</Description>
    <Title_Description>Namespace support for Global Tools? Will there be namespace support for global tools just like NPM has added?
When this feature gets popular the command names will have duplicates soon so maybe a namespace will give it a more unique approach?
Like  ?
Any thoughts?



</Title_Description>
    <Label>enhancement</Label>
    <CreatedAt>30/06/2018 1:28:57 PM +00:00</CreatedAt>
    <ClosedAt>2/10/2018 9:08:06 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9598</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>29/06/2018 11:36:58 PM +00:00</CreatedAt>
    <ClosedAt>30/06/2018 12:19:24 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9597</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>29/06/2018 10:13:00 PM +00:00</CreatedAt>
    <ClosedAt>29/06/2018 10:20:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9593</IssueLabelID>
    <Title>Make 2 tests more dynamic: CLI</Title>
    <Description>Fix two tests:
test/dotnet-new.Tests/GivenThatIWantANewApp.cs
NewProjectRestoresCorrectPackageVersion

test/Microsoft.DotNet.Cli.Utils.Tests/GivenAProjectToolsCommandResolver.cs
ItAddsFxVersionAsAParamWhenTheToolHasThePrefercliruntimeFile

Remove the hard-coded "2.1.1" and use a dynamic harvesting of the FrameworkPackageVersion

Reference: https://github.com/dotnet/cli/pull/9592






</Description>
    <Title_Description>Make 2 tests more dynamic: CLI Fix two tests:
test/dotnet-new.Tests/GivenThatIWantANewApp.cs
NewProjectRestoresCorrectPackageVersion

test/Microsoft.DotNet.Cli.Utils.Tests/GivenAProjectToolsCommandResolver.cs
ItAddsFxVersionAsAParamWhenTheToolHasThePrefercliruntimeFile

Remove the hard-coded "2.1.1" and use a dynamic harvesting of the FrameworkPackageVersion

Reference: https://github.com/dotnet/cli/pull/9592






</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>29/06/2018 9:05:31 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9592</IssueLabelID>
    <Title>Fixing recent ProdCon test failures.</Title>
    <Description>Fixes to 3 of the 4 recent test failures:
Reference: https://mc.dot.net/#/product/netcore/prodcon21/source/prodcon~2Fcli~2Frelease~2F2.1.3xx~2F/type/build~2Fproduct~2F/build/20180627.01/workItem/Orchestration/analysis/external/Link
 

**TestAssets/TestProjects/TestWebAppSimple/TestWebAppSimple.csproj** 
generate a "DefaultPatchVersionForAspNetCoreApp2_1" to be used in the "PortablePublishWithLatestTFMUsesBundledAspNetCoreAppVersion" test

**test/EndToEnd/GivenAspNetAppsResolveImplicitVersions.cs** 
use the 'DefaultPatchVersionForAspNetCoreApp2_1' for the implicit version test
fixing spelling

**test/dotnet-new.Tests/GivenThatIWantANewApp.cs 
test/Microsoft.DotNet.Cli.Utils.Tests/GivenAProjectToolsCommandResolver.cs** 
temporary fix to include all "2.1*" versions.</Description>
    <Title_Description>Fixing recent ProdCon test failures. Fixes to 3 of the 4 recent test failures:
Reference: https://mc.dot.net/#/product/netcore/prodcon21/source/prodcon~2Fcli~2Frelease~2F2.1.3xx~2F/type/build~2Fproduct~2F/build/20180627.01/workItem/Orchestration/analysis/external/Link
 

**TestAssets/TestProjects/TestWebAppSimple/TestWebAppSimple.csproj** 
generate a "DefaultPatchVersionForAspNetCoreApp2_1" to be used in the "PortablePublishWithLatestTFMUsesBundledAspNetCoreAppVersion" test

**test/EndToEnd/GivenAspNetAppsResolveImplicitVersions.cs** 
use the 'DefaultPatchVersionForAspNetCoreApp2_1' for the implicit version test
fixing spelling

**test/dotnet-new.Tests/GivenThatIWantANewApp.cs 
test/Microsoft.DotNet.Cli.Utils.Tests/GivenAProjectToolsCommandResolver.cs** 
temporary fix to include all "2.1*" versions.</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9590</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>29/06/2018 6:49:02 PM +00:00</CreatedAt>
    <ClosedAt>29/06/2018 11:36:08 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9589</IssueLabelID>
    <Title>tool-nuget-package-format document</Title>
    <Description>
    </Description>
    <Title_Description>tool-nuget-package-format document 
</Title_Description>
    <Label>documentation</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>29/06/2018 5:16:19 PM +00:00</CreatedAt>
    <ClosedAt>31/07/2018 9:57:03 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9588</IssueLabelID>
    <Title>Update the 'Microsoft.DotNet.Archive' version.</Title>
    <Description>Use the latest version of 'Microsoft.DotNet.Archive.dll'
</Description>
    <Title_Description>Update the 'Microsoft.DotNet.Archive' version. Use the latest version of 'Microsoft.DotNet.Archive.dll'
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9586</IssueLabelID>
    <Title>dotnet tool install have trouble installing when an private feed is in nuget.config</Title>
    <Description>@DerAlbertCom commented on [Fri Jun 29 2018](https://github.com/dotnet/core/issues/1741)

# Issue Title

dotnet tool install  -g foobar  does not install any tool if private nuget feed is in the nuget.config which requires authentication.

# General

I tried 'dotnet tool install -g sourcelink' and have in the the global nuget.config the company nuget feed from vsts.



If i comment out the private feed out in then nuget.config then the tool get's installed.

nuget restore has not problem with the nuget feed. dotnet restore (which should not be used with VSTS because you have to store a Cleartext PAT in the nuget.config) clearly has the same problem like dotnet tool

</Description>
    <Title_Description>dotnet tool install have trouble installing when an private feed is in nuget.config @DerAlbertCom commented on [Fri Jun 29 2018](https://github.com/dotnet/core/issues/1741)

# Issue Title

dotnet tool install  -g foobar  does not install any tool if private nuget feed is in the nuget.config which requires authentication.

# General

I tried 'dotnet tool install -g sourcelink' and have in the the global nuget.config the company nuget feed from vsts.



If i comment out the private feed out in then nuget.config then the tool get's installed.

nuget restore has not problem with the nuget feed. dotnet restore (which should not be used with VSTS because you have to store a Cleartext PAT in the nuget.config) clearly has the same problem like dotnet tool

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9583</IssueLabelID>
    <Title>dotnet test should have a --runtime option for consistency with other commands.</Title>
    <Description>## Steps to reproduce
First 
Will get a error like this

&gt; The test source file "/bin/Release/netcoreapp2.1/xxx.dll" provided was not found.

how to solve it?



</Description>
    <Title_Description>dotnet test should have a --runtime option for consistency with other commands. ## Steps to reproduce
First 
Will get a error like this

&gt; The test source file "/bin/Release/netcoreapp2.1/xxx.dll" provided was not found.

how to solve it?



</Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9582</IssueLabelID>
    <Title>Add packaged shim doc</Title>
    <Description>
    </Description>
    <Title_Description>Add packaged shim doc 
</Title_Description>
    <Label>documentation</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>29/06/2018 2:06:58 AM +00:00</CreatedAt>
    <ClosedAt>31/07/2018 9:38:44 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9581</IssueLabelID>
    <Title>dotnet-publish --no-build produces assembly with versions different than build output</Title>
    <Description>During migration from netcoreapp2.0 to netcoreapp2.1 I found that the behavior of dotnet publish --no-build behaves differently.  

## Steps to reproduce

Create ASP.NET core web app.

**Website.csproj**
 output:

.NET Core SDK (reflecting any global.json):
 Version:   2.1.300
 Commit:    adab45bf0c

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.14393
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300\

Host (useful for support):
  Version: 2.1.0
  Commit:  caa7b7e2ba

.NET Core SDKs installed:
  1.0.4 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download




</Description>
    <Title_Description>dotnet-publish --no-build produces assembly with versions different than build output During migration from netcoreapp2.0 to netcoreapp2.1 I found that the behavior of dotnet publish --no-build behaves differently.  

## Steps to reproduce

Create ASP.NET core web app.

**Website.csproj**
 output:

.NET Core SDK (reflecting any global.json):
 Version:   2.1.300
 Commit:    adab45bf0c

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.14393
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300\

Host (useful for support):
  Version: 2.1.0
  Commit:  caa7b7e2ba

.NET Core SDKs installed:
  1.0.4 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download




</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9576</IssueLabelID>
    <Title>Merge release/2.2.1xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.2.1xx to master 
This is an automatically generated pull request from release/2.2.1xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>28/06/2018 6:17:59 PM +00:00</CreatedAt>
    <ClosedAt>29/06/2018 9:43:09 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9575</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.2.1xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.2.1xx 
This is an automatically generated pull request from release/2.1.4xx into release/2.2.1xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9574</IssueLabelID>
    <Title>Merge release/2.1.4xx to release/2.1.401</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to release/2.1.401 
This is an automatically generated pull request from release/2.1.4xx into release/2.1.401.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>28/06/2018 6:17:54 PM +00:00</CreatedAt>
    <ClosedAt>29/06/2018 9:45:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9568</IssueLabelID>
    <Title>Update SDK to 2.1.400-preview-63027-01</Title>
    <Description>
    </Description>
    <Title_Description>Update SDK to 2.1.400-preview-63027-01 </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/06/2018 12:50:56 AM +00:00</CreatedAt>
    <ClosedAt>27/06/2018 1:36:26 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9567</IssueLabelID>
    <Title>Updating branding to 401.</Title>
    <Description>
    </Description>
    <Title_Description>Updating branding to 401. </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/06/2018 12:11:46 AM +00:00</CreatedAt>
    <ClosedAt>27/06/2018 12:51:08 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9566</IssueLabelID>
    <Title>Log a verbose message when DOTNET_CLI_HOME is being used.</Title>
    <Description>This commit logs a diagnostic message when the  variable is
used.  This enables users to determine where first-run-experience and global
tool files are being written to.

Fixes #9510.
</Description>
    <Title_Description>Log a verbose message when DOTNET_CLI_HOME is being used. This commit logs a diagnostic message when the  variable is
used.  This enables users to determine where first-run-experience and global
tool files are being written to.

Fixes #9510.
</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>26/06/2018 11:37:18 PM +00:00</CreatedAt>
    <ClosedAt>6/07/2018 9:46:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9563</IssueLabelID>
    <Title>Add switch to disable implicit fallback folder for 1.x apps only</Title>
    <Description>Currently there is the switch  that can turn off the fallback folder for all apps. However due to the differences in how fallback folders are used by the CLI we would like to have a new switch so we can disable fallback for 1.x apps only but leave the fallback folder turned on for 2.x apps.





</Description>
    <Title_Description>Add switch to disable implicit fallback folder for 1.x apps only Currently there is the switch  that can turn off the fallback folder for all apps. However due to the differences in how fallback folders are used by the CLI we would like to have a new switch so we can disable fallback for 1.x apps only but leave the fallback folder turned on for 2.x apps.





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9555</IssueLabelID>
    <Title>Add nunit project and item templates to bundle</Title>
    <Description>Changes according to https://github.com/nunit/dotnet-new-nunit/issues/13#issuecomment-400116922</Description>
    <Title_Description>Add nunit project and item templates to bundle Changes according to https://github.com/nunit/dotnet-new-nunit/issues/13#issuecomment-400116922</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>26/06/2018 5:05:48 AM +00:00</CreatedAt>
    <ClosedAt>26/06/2018 8:50:13 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9554</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>26/06/2018 12:37:05 AM +00:00</CreatedAt>
    <ClosedAt>26/06/2018 5:14:29 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9553</IssueLabelID>
    <Title>MSBuild SDK resolver error messages are not localized</Title>
    <Description>
    </Description>
    <Title_Description>MSBuild SDK resolver error messages are not localized 





</Title_Description>
    <Label>Resolver</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>25/06/2018 11:25:55 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9552</IssueLabelID>
    <Title>MSBuild 15.8.138</Title>
    <Description>Up to https://github.com/Microsoft/msbuild/commit/e70a3159d64f9ed6ec3b60253ef863fa883a99b1
Targeted for Preview 4.</Description>
    <Title_Description>MSBuild 15.8.138 Up to https://github.com/Microsoft/msbuild/commit/e70a3159d64f9ed6ec3b60253ef863fa883a99b1
Targeted for Preview 4.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>25/06/2018 10:45:15 PM +00:00</CreatedAt>
    <ClosedAt>26/06/2018 9:24:14 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9550</IssueLabelID>
    <Title>build/DependencyVersions.props still not updated for v2.1.301</Title>
    <Description>The build/DependencyVersions.props still isn't updated for the v2.1.301 release of the SDK.
The one dependency I'm sure is wrong is MicrosoftAspNetCoreAllPackageVersion is set to version 2.1.1-rtm-30818
I'm not sure which other ones need to be updated.
It's important that we know the correct versions that MSFT released in 2.1.301.

See related issues https://github.com/dotnet/cli/issues/9456 and https://github.com/dotnet/cli/issues/9388.






</Description>
    <Title_Description>build/DependencyVersions.props still not updated for v2.1.301 The build/DependencyVersions.props still isn't updated for the v2.1.301 release of the SDK.
The one dependency I'm sure is wrong is MicrosoftAspNetCoreAllPackageVersion is set to version 2.1.1-rtm-30818
I'm not sure which other ones need to be updated.
It's important that we know the correct versions that MSFT released in 2.1.301.

See related issues https://github.com/dotnet/cli/issues/9456 and https://github.com/dotnet/cli/issues/9388.






</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9549</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>25/06/2018 4:25:09 PM +00:00</CreatedAt>
    <ClosedAt>26/06/2018 12:33:54 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9548</IssueLabelID>
    <Title>'dotnet ef database update' errors when sub-minor version is not 0</Title>
    <Description>## Steps to reproduce


## Extra Details
This is not an issue on Windows as the dotnet installer does not clean up old versions of the runtime. apt-get will cleanup all old files contained in the older versions.




</Description>
    <Title_Description>'dotnet ef database update' errors when sub-minor version is not 0 ## Steps to reproduce


## Extra Details
This is not an issue on Windows as the dotnet installer does not clean up old versions of the runtime. apt-get will cleanup all old files contained in the older versions.




</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9547</IssueLabelID>
    <Title>MSBuild SDK Resolver Improvements</Title>
    <Description>1. When there's no global.json use latest SDK that is compatible with msbuild not latest SDK overall
2. Respect VS setting to allow / disallow resolving to preview SDKs.

Depends on https://github.com/dotnet/core-setup/pull/4301
Related to https://github.com/dotnet/project-system/pull/3602</Description>
    <Title_Description>MSBuild SDK Resolver Improvements 1. When there's no global.json use latest SDK that is compatible with msbuild not latest SDK overall
2. Respect VS setting to allow / disallow resolving to preview SDKs.

Depends on https://github.com/dotnet/core-setup/pull/4301
Related to https://github.com/dotnet/project-system/pull/3602</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>25/06/2018 12:59:40 AM +00:00</CreatedAt>
    <ClosedAt>17/08/2018 2:21:49 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9546</IssueLabelID>
    <Title>Use blob feed instead of myget</Title>
    <Description>
    </Description>
    <Title_Description>Use blob feed instead of myget </Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>24/06/2018 6:42:00 PM +00:00</CreatedAt>
    <ClosedAt>25/06/2018 5:37:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9545</IssueLabelID>
    <Title>Verbosity level is ignored for launchSettings.json</Title>
    <Description>## Steps to reproduce
 output:

.NET Core SDK (reflecting any global.json):
 Version:   2.1.300
 Commit:    adab45bf0c

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300\

Host (useful for support):
  Version: 2.1.0
  Commit:  caa7b7e2ba

.NET Core SDKs installed:
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>Verbosity level is ignored for launchSettings.json ## Steps to reproduce
 output:

.NET Core SDK (reflecting any global.json):
 Version:   2.1.300
 Commit:    adab45bf0c

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300\

Host (useful for support):
  Version: 2.1.0
  Commit:  caa7b7e2ba

.NET Core SDKs installed:
  2.1.201 [C:\Program Files\dotnet\sdk]
  2.1.300 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9543</IssueLabelID>
    <Title>MSBuild 15.8.125</Title>
    <Description>Replaces #9517</Description>
    <Title_Description>MSBuild 15.8.125 Replaces #9517</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>22/06/2018 5:46:28 PM +00:00</CreatedAt>
    <ClosedAt>25/06/2018 7:00:30 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9540</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>22/06/2018 6:25:09 AM +00:00</CreatedAt>
    <ClosedAt>25/06/2018 4:23:52 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9536</IssueLabelID>
    <Title>[WIP] Splitting the 'ItPublishesARunnableSelfContainedApp' test</Title>
    <Description>Splitting the 'ItPublishesARunnableSelfContainedApp' test into: an 'implicit' and 'explict' version; updating to supported runtime versions.

Addresses: https://github.com/dotnet/sdk/issues/2263

Related: https://github.com/dotnet/cli/pull/9339
</Description>
    <Title_Description>[WIP] Splitting the 'ItPublishesARunnableSelfContainedApp' test Splitting the 'ItPublishesARunnableSelfContainedApp' test into: an 'implicit' and 'explict' version; updating to supported runtime versions.

Addresses: https://github.com/dotnet/sdk/issues/2263

Related: https://github.com/dotnet/cli/pull/9339
</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9535</IssueLabelID>
    <Title>Fix the CI legs; CLI:release/2.1.3xx</Title>
    <Description>The Linux-musl command-line should be derived from "baseShellBuildCommand" not "buildCommand"

Follow-up to PR: https://github.com/dotnet/cli/pull/9502
</Description>
    <Title_Description>Fix the CI legs; CLI:release/2.1.3xx The Linux-musl command-line should be derived from "baseShellBuildCommand" not "buildCommand"

Follow-up to PR: https://github.com/dotnet/cli/pull/9502
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9532</IssueLabelID>
    <Title>[WIP] Testing CI legs; CLI:release/2.1.3xx</Title>
    <Description>Testing CI legs; CLI:release/2.1.3xx</Description>
    <Title_Description>[WIP] Testing CI legs; CLI:release/2.1.3xx Testing CI legs; CLI:release/2.1.3xx</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9529</IssueLabelID>
    <Title>Align f# with dev15.8</Title>
    <Description>
/cc @livarcocc  @brettfo @Pilchie </Description>
    <Title_Description>Align f# with dev15.8 
/cc @livarcocc  @brettfo @Pilchie </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>21/06/2018 7:49:36 AM +00:00</CreatedAt>
    <ClosedAt>21/06/2018 5:42:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9525</IssueLabelID>
    <Title>Use correct nuget version normalized format</Title>
    <Description>Fix https://github.com/dotnet/cli/issues/9409

according to discussion https://github.com/NuGet/Home/issues/6994 format "N" is the right one</Description>
    <Title_Description>Use correct nuget version normalized format Fix https://github.com/dotnet/cli/issues/9409

according to discussion https://github.com/NuGet/Home/issues/6994 format "N" is the right one</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>21/06/2018 1:05:55 AM +00:00</CreatedAt>
    <ClosedAt>21/06/2018 8:00:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9524</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>21/06/2018 12:25:09 AM +00:00</CreatedAt>
    <ClosedAt>21/06/2018 5:53:39 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9517</IssueLabelID>
    <Title>MSBuild 15.8.108</Title>
    <Description>This is the version currently in  for Preview 4.</Description>
    <Title_Description>MSBuild 15.8.108 This is the version currently in  for Preview 4.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>19/06/2018 8:47:31 PM +00:00</CreatedAt>
    <ClosedAt>22/06/2018 5:51:30 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9515</IssueLabelID>
    <Title>dotnet-install from 2.1.3xx channel tries to download nonexistent 2.1.301-preview-008906 rather than 2.1.301</Title>
    <Description>## Steps to reproduce
 files.</Description>
    <Title_Description>dotnet-install from 2.1.3xx channel tries to download nonexistent 2.1.301-preview-008906 rather than 2.1.301 ## Steps to reproduce
 files.</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9511</IssueLabelID>
    <Title>NuGetFallbackFolder created by Installer (.exe) contains more package versions than folder created by Binaries (.zip)</Title>
    <Description>The customer impact may be minimal but I was surprised to find the NuGetFallbackFolder created by the installer (.exe) contains more package versions than the NuGetFallbackFolder created by the binaries (.zip).  I assumed the folders would be identical.

## Steps to reproduce
1. Install SDK 2.1.300 both the "x64 Installer" (.exe) and "x64 Binaries" (.zip)
2. Run 

CC: @JunTaoLuo @joeloff </Description>
    <Title_Description>NuGetFallbackFolder created by Installer (.exe) contains more package versions than folder created by Binaries (.zip) The customer impact may be minimal but I was surprised to find the NuGetFallbackFolder created by the installer (.exe) contains more package versions than the NuGetFallbackFolder created by the binaries (.zip).  I assumed the folders would be identical.

## Steps to reproduce
1. Install SDK 2.1.300 both the "x64 Installer" (.exe) and "x64 Binaries" (.zip)
2. Run 

CC: @JunTaoLuo @joeloff </Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9510</IssueLabelID>
    <Title>dotnet should warn users if preferring DOTNET_CLI_HOME over HOME or USERPROFILE.</Title>
    <Description>## Steps to reproduce

Using 2.1.4xx:

1. 






</Description>
    <Title_Description>dotnet should warn users if preferring DOTNET_CLI_HOME over HOME or USERPROFILE. ## Steps to reproduce

Using 2.1.4xx:

1. 






</Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9509</IssueLabelID>
    <Title>Pass BaseIntermediateOutputPath via xml</Title>
    <Description>Fix https://github.com/dotnet/cli/issues/9413

Instead of command line to avoid escaping problem.

It can support most of the character including surrogate char. It cannot
support semicolon. However semicolon is not allow to be part of the
user name.

Port 2.1.4xx fix 0251f677ede571b61a47ca24f38df8e09038277d while keep
BaseIntermediateOutputPath instead of MsBuildProjectExtensionsPath to
minimize the change.

</Description>
    <Title_Description>Pass BaseIntermediateOutputPath via xml Fix https://github.com/dotnet/cli/issues/9413

Instead of command line to avoid escaping problem.

It can support most of the character including surrogate char. It cannot
support semicolon. However semicolon is not allow to be part of the
user name.

Port 2.1.4xx fix 0251f677ede571b61a47ca24f38df8e09038277d while keep
BaseIntermediateOutputPath instead of MsBuildProjectExtensionsPath to
minimize the change.

</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>18/06/2018 8:43:48 PM +00:00</CreatedAt>
    <ClosedAt>24/06/2018 6:32:45 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9507</IssueLabelID>
    <Title>Test and automatic Update default package version</Title>
    <Description>partial https://github.com/dotnet/sdk/issues/2275

-  Add test to CLI that will catch portable not move forward that is similar to dotnet/cli#8919
-   CLI sets UseBundledVersionAsDefaultVersion based on patch version == 0 and is preview == true
</Description>
    <Title_Description>Test and automatic Update default package version partial https://github.com/dotnet/sdk/issues/2275

-  Add test to CLI that will catch portable not move forward that is similar to dotnet/cli#8919
-   CLI sets UseBundledVersionAsDefaultVersion based on patch version == 0 and is preview == true
</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>17/06/2018 6:51:56 PM +00:00</CreatedAt>
    <ClosedAt>21/06/2018 5:40:45 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9505</IssueLabelID>
    <Title>Merge release/2.1.2xx to release/2.1.3xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.2xx to release/2.1.3xx 
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>15/06/2018 8:25:12 PM +00:00</CreatedAt>
    <ClosedAt>20/06/2018 11:42:05 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9504</IssueLabelID>
    <Title>Port to 2.1.3xx Fix relative path tool path</Title>
    <Description>Port #9330 to release/2.1.3xx

Pass full path to Path.GetRelativePath
</Description>
    <Title_Description>Port to 2.1.3xx Fix relative path tool path Port #9330 to release/2.1.3xx

Pass full path to Path.GetRelativePath
</Title_Description>
    <Label>Pending Shiproom Approval</Label>
    <CreatedAt>15/06/2018 5:20:03 PM +00:00</CreatedAt>
    <ClosedAt>20/06/2018 10:41:13 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9503</IssueLabelID>
    <Title>Follow up - Implement `mode` option for `dotnet publish`</Title>
    <Description>add this issue to remind us to follow up https://github.com/dotnet/cli/pull/9460 

9460 is merge to unblock the info bar (insertion to VS) change. However there is still some discussion have not finished. Please close this issue if there is  no more concern on https://github.com/dotnet/cli/pull/9460 </Description>
    <Title_Description>Follow up - Implement  add this issue to remind us to follow up https://github.com/dotnet/cli/pull/9460 

9460 is merge to unblock the info bar (insertion to VS) change. However there is still some discussion have not finished. Please close this issue if there is  no more concern on https://github.com/dotnet/cli/pull/9460 </Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9502</IssueLabelID>
    <Title>Adding 'NoSuffix' legs to the CI</Title>
    <Description>**Adding:**
'Windows_NT_NoSuffix:x64:Release' 
'Linux_NoSuffix:arm:Release' 
'Linux_NoSuffix:x64:Release' </Description>
    <Title_Description>Adding 'NoSuffix' legs to the CI **Adding:**
'Windows_NT_NoSuffix:x64:Release' 
'Linux_NoSuffix:arm:Release' 
'Linux_NoSuffix:x64:Release' </Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9371</IssueLabelID>
    <Title>Simplified combining dictionaries in Telemetry</Title>
    <Description>[According to the documentation](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.item?view=netcore-2.1#remarks) when a key does not exist in the dictionary using the indexer setter will add a new element to the dictionary. This means the indexer can be used here for both cases making the code simpler.</Description>
    <Title_Description>Simplified combining dictionaries in Telemetry [According to the documentation](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.item?view=netcore-2.1#remarks) when a key does not exist in the dictionary using the indexer setter will add a new element to the dictionary. This means the indexer can be used here for both cases making the code simpler.</Title_Description>
    <Label>community</Label>
    <CreatedAt>30/05/2018 11:06:25 PM +00:00</CreatedAt>
    <ClosedAt>4/06/2018 8:43:14 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9369</IssueLabelID>
    <Title>Breaking change to passing multiple properties as /p:P1=V1;P2=V2</Title>
    <Description>I believe this was changed by https://github.com/dotnet/cli/pull/9153

## Steps to reproduce

1. Create test.proj with the following content







</Description>
    <Title_Description>Breaking change to passing multiple properties as /p:P1=V1;P2=V2 I believe this was changed by https://github.com/dotnet/cli/pull/9153

## Steps to reproduce

1. Create test.proj with the following content







</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9363</IssueLabelID>
    <Title>Always store absolute full path in directory and file path</Title>
    <Description>There is no need to store relative path today. But some part of the system does not accept relative path and there is no indication if it is storing full path or not. This is the root cause of https://github.com/dotnet/cli/issues/9319

“someplace” means different full path for Path class on unix and Windows. And the mock file system uses real Path class. Change tests' setup to use essentially “TEMPATH/someplace” instead of  “someplace”

</Description>
    <Title_Description>Always store absolute full path in directory and file path There is no need to store relative path today. But some part of the system does not accept relative path and there is no indication if it is storing full path or not. This is the root cause of https://github.com/dotnet/cli/issues/9319

“someplace” means different full path for Path class on unix and Windows. And the mock file system uses real Path class. Change tests' setup to use essentially “TEMPATH/someplace” instead of  “someplace”

</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>30/05/2018 12:09:33 AM +00:00</CreatedAt>
    <ClosedAt>6/06/2018 6:22:20 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9362</IssueLabelID>
    <Title>Fixing 'Channel' and 'BranchName': "release/2.1.4xx" to "master"</Title>
    <Description>Fixing 'Channel' and 'BranchName': "release/2.1.4xx" to "master" - also the readme</Description>
    <Title_Description>Fixing 'Channel' and 'BranchName': "release/2.1.4xx" to "master" Fixing 'Channel' and 'BranchName': "release/2.1.4xx" to "master" - also the readme</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9361</IssueLabelID>
    <Title>Running 'dotnet new' with  2.1.400-preview-008942 on Ubuntu 16.04 Arm64 causes illegal instruction</Title>
    <Description>## Steps to Reproduce
run dotnet new 


## Expected Behaviour

Creates console project


## Actual Behaviour

illegal instruction error message printed to the screen

## Environment data
ufs@dmx-yic1:~/vsts-agent-users-tihuang-linuxarm64/_dotnetsdk/2.1$ ./dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.1.400-preview-008942
 Commit:    de407deff0

Runtime Environment:
 OS Name:     ubuntu
 OS Version:  16.04
 OS Platform: Linux
 RID:         ubuntu.16.04-arm64
 Base Path:   /home/ufs/vsts-agent-users-tihuang-linuxarm64/_dotnetsdk/2.1/sdk/2.1.400-preview-008942/

Host (useful for support):
  Version: 2.1.0-rtm-26515-03
  Commit:  caa7b7e2ba

.NET Core SDKs installed:
  2.1.400-preview-008942 [/home/ufs/vsts-agent-users-tihuang-linuxarm64/_dotnetsdk/2.1/sdk]

.NET Core runtimes installed:
  Microsoft.NETCore.App 2.1.0-rtm-26515-03 [/home/ufs/vsts-agent-users-tihuang-linuxarm64/_dotnetsdk/2.1/shared/Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Description>
    <Title_Description>Running 'dotnet new' with  2.1.400-preview-008942 on Ubuntu 16.04 Arm64 causes illegal instruction ## Steps to Reproduce
run dotnet new 


## Expected Behaviour

Creates console project


## Actual Behaviour

illegal instruction error message printed to the screen

## Environment data
ufs@dmx-yic1:~/vsts-agent-users-tihuang-linuxarm64/_dotnetsdk/2.1$ ./dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.1.400-preview-008942
 Commit:    de407deff0

Runtime Environment:
 OS Name:     ubuntu
 OS Version:  16.04
 OS Platform: Linux
 RID:         ubuntu.16.04-arm64
 Base Path:   /home/ufs/vsts-agent-users-tihuang-linuxarm64/_dotnetsdk/2.1/sdk/2.1.400-preview-008942/

Host (useful for support):
  Version: 2.1.0-rtm-26515-03
  Commit:  caa7b7e2ba

.NET Core SDKs installed:
  2.1.400-preview-008942 [/home/ufs/vsts-agent-users-tihuang-linuxarm64/_dotnetsdk/2.1/sdk]

.NET Core runtimes installed:
  Microsoft.NETCore.App 2.1.0-rtm-26515-03 [/home/ufs/vsts-agent-users-tihuang-linuxarm64/_dotnetsdk/2.1/shared/Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Title_Description>
    <Label>Arm64</Label>
    <CreatedAt>29/05/2018 6:23:31 PM +00:00</CreatedAt>
    <ClosedAt>8/06/2018 12:08:36 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9360</IssueLabelID>
    <Title>Update Sha256Hasher.cs</Title>
    <Description>- If this PR should not run tests please add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Please add description for changes you are making.
- If there is an issue related to this PR please add the reference.
</Description>
    <Title_Description>Update Sha256Hasher.cs - If this PR should not run tests please add text "skip[REMOVE_THIS]ci[REMOVE_THIS]please" (remove the marked text no quotes).
- Please add description for changes you are making.
- If there is an issue related to this PR please add the reference.
</Title_Description>
    <Label>community</Label>
    <CreatedAt>29/05/2018 1:00:36 PM +00:00</CreatedAt>
    <ClosedAt>6/06/2018 5:46:19 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9355</IssueLabelID>
    <Title>Add tests for Code coverage with dotnet test</Title>
    <Description>- Add tests for  scenario
- https://github.com/Microsoft/vstest/issues/981
</Description>
    <Title_Description>Add tests for Code coverage with dotnet test - Add tests for  scenario
- https://github.com/Microsoft/vstest/issues/981
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>28/05/2018 6:02:38 AM +00:00</CreatedAt>
    <ClosedAt>17/07/2018 4:54:11 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9354</IssueLabelID>
    <Title>Change configuration completion suggestion to standard capitalization</Title>
    <Description>Changes completion suggestions for  to standard capitalisation to prevent against issues with case sensitivity.

Tentatively against 2.1.4xx but should be a clean merge into master as well.</Description>
    <Title_Description>Change configuration completion suggestion to standard capitalization Changes completion suggestions for  to standard capitalisation to prevent against issues with case sensitivity.

Tentatively against 2.1.4xx but should be a clean merge into master as well.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/05/2018 12:51:08 PM +00:00</CreatedAt>
    <ClosedAt>31/05/2018 11:11:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9350</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>25/05/2018 10:01:04 PM +00:00</CreatedAt>
    <ClosedAt>1/06/2018 3:09:07 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9348</IssueLabelID>
    <Title>Update dependencies and branding</Title>
    <Description>
    </Description>
    <Title_Description>Update dependencies and branding </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>25/05/2018 7:13:16 PM +00:00</CreatedAt>
    <ClosedAt>25/05/2018 9:51:19 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9347</IssueLabelID>
    <Title>Insert updated SDK from 2.1.4xx branch</Title>
    <Description>Includes changes from https://github.com/dotnet/sdk/pull/2250</Description>
    <Title_Description>Insert updated SDK from 2.1.4xx branch Includes changes from https://github.com/dotnet/sdk/pull/2250</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>24/05/2018 11:30:19 PM +00:00</CreatedAt>
    <ClosedAt>25/05/2018 4:21:42 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9345</IssueLabelID>
    <Title>Stabilizing on a 1.1.9-servicing-005253 SDK 'build-engine'</Title>
    <Description>Stabilizing on a 1.1.9-servicing-005253 SDK 'build-engine'

Moving the SDK ‘build-engine’ to a published 1.1.9* SDK instead of a 1.0.4 + 1.0.4-Bootstrapped for the 4 new distros.

</Description>
    <Title_Description>Stabilizing on a 1.1.9-servicing-005253 SDK 'build-engine' Stabilizing on a 1.1.9-servicing-005253 SDK 'build-engine'

Moving the SDK ‘build-engine’ to a published 1.1.9* SDK instead of a 1.0.4 + 1.0.4-Bootstrapped for the 4 new distros.

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9344</IssueLabelID>
    <Title>MSBuild 15.8.60</Title>
    <Description>Picks up a fix for an unhandled exception when calling .</Description>
    <Title_Description>MSBuild 15.8.60 Picks up a fix for an unhandled exception when calling .</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>24/05/2018 5:01:16 PM +00:00</CreatedAt>
    <ClosedAt>24/05/2018 6:02:24 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9339</IssueLabelID>
    <Title>Splitting the 'ItPublishesARunnableSelfContainedApp' test into 2 tests.</Title>
    <Description>Splitting the 'ItPublishesARunnableSelfContainedApp' test into: an 'implicit' and an 'explicit' version.

Addresses: https://github.com/dotnet/sdk/issues/2263

</Description>
    <Title_Description>Splitting the 'ItPublishesARunnableSelfContainedApp' test into 2 tests. Splitting the 'ItPublishesARunnableSelfContainedApp' test into: an 'implicit' and an 'explicit' version.

Addresses: https://github.com/dotnet/sdk/issues/2263

</Title_Description>
    <Label>dotnet-test</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9338</IssueLabelID>
    <Title>Fixing the netci.groovy CLI:rel/1.1.0</Title>
    <Description>Fixing a typo...
</Description>
    <Title_Description>Fixing the netci.groovy, CLI:rel/1.1.0 Fixing a typo...
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9335</IssueLabelID>
    <Title>Fix extraction of folders</Title>
    <Description>## Steps to reproduce
- Create an Azure Container Instance Container with [this docker image](https://hub.docker.com/r/arodus/docker-jenkins-slave-mono/). (May also be reproducible with every other linux host but didn't happen on local windows machine.) 
Set the environment variable  to ensure the parent directory is always copied before its sub directories.








</Description>
    <Title_Description>Fix extraction of folders ## Steps to reproduce
- Create an Azure Container Instance Container with [this docker image](https://hub.docker.com/r/arodus/docker-jenkins-slave-mono/). (May also be reproducible with every other linux host but didn't happen on local windows machine.) 
Set the environment variable  to ensure the parent directory is always copied before its sub directories.








</Title_Description>
    <Label>community</Label>
    <CreatedAt>23/05/2018 11:27:14 AM +00:00</CreatedAt>
    <ClosedAt>29/05/2018 6:02:27 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9333</IssueLabelID>
    <Title>Fixing the 'signing' step.</Title>
    <Description>Adding 'MicroBuild' props and targets so that the VSO build's signing steps can interact with the Signing PlugIn.

**Test:**
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1715666&amp;_a=summary
Note: inspect the "Sign assemblies" step

</Description>
    <Title_Description>Fixing the 'signing' step. Adding 'MicroBuild' props and targets so that the VSO build's signing steps can interact with the Signing PlugIn.

**Test:**
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1715666&amp;_a=summary
Note: inspect the "Sign assemblies" step

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9332</IssueLabelID>
    <Title>Merge release/2.1.4xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to master 
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>22/05/2018 9:01:06 PM +00:00</CreatedAt>
    <ClosedAt>31/05/2018 5:22:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9331</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>22/05/2018 9:01:04 PM +00:00</CreatedAt>
    <ClosedAt>24/05/2018 4:30:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9330</IssueLabelID>
    <Title>Fix relative path tool path</Title>
    <Description>fix https://github.com/dotnet/cli/issues/9319

Replace PathUtility with new Path.GetRelativePath corefx api

Pass pull path to such api

--------------------

It would like to have a next step later that enforces DirectoryPath and FilePath always store full path. The problem I have is Path behaves differently in windows and mac. For example /home means different thing in windows and unix. So if I store full path currently a lot of test will fail. But I think it worth to do the proper fix to eliminate the whole class of bugs</Description>
    <Title_Description>Fix relative path tool path fix https://github.com/dotnet/cli/issues/9319

Replace PathUtility with new Path.GetRelativePath corefx api

Pass pull path to such api

--------------------

It would like to have a next step later that enforces DirectoryPath and FilePath always store full path. The problem I have is Path behaves differently in windows and mac. For example /home means different thing in windows and unix. So if I store full path currently a lot of test will fail. But I think it worth to do the proper fix to eliminate the whole class of bugs</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>22/05/2018 6:12:29 PM +00:00</CreatedAt>
    <ClosedAt>25/05/2018 1:15:24 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9329</IssueLabelID>
    <Title>Don't add the ReleaseSuffix to the branding on the CLI</Title>
    <Description>Don't add the ReleaseSuffix to the branding on the CLI when DropSuffix is set to true.

Fixes https://github.com/dotnet/cli/issues/9328
</Description>
    <Title_Description>Don't add the ReleaseSuffix to the branding on the CLI Don't add the ReleaseSuffix to the branding on the CLI when DropSuffix is set to true.

Fixes https://github.com/dotnet/cli/issues/9328
</Title_Description>
    <Label>Pending Shiproom Approval</Label>
    <CreatedAt>22/05/2018 5:33:02 PM +00:00</CreatedAt>
    <ClosedAt>22/05/2018 8:15:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9328</IssueLabelID>
    <Title>Branding for CLI without a suffix still shows ReleaseSuffix in the branding</Title>
    <Description>The final Windows and macOS SDK installers say “rtm” in their branding. 

This was discovered by @natemcmaster 





</Description>
    <Title_Description>Branding for CLI without a suffix still shows ReleaseSuffix in the branding The final Windows and macOS SDK installers say “rtm” in their branding. 

This was discovered by @natemcmaster 





</Title_Description>
    <Label>Blocking-RTM</Label>
    <CreatedAt>22/05/2018 5:06:58 PM +00:00</CreatedAt>
    <ClosedAt>22/05/2018 8:15:59 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9327</IssueLabelID>
    <Title>Fix crash when user home directory cannot be determined. </Title>
    <Description>Currently dotnet will crash with an  entirely.

Closes #8053.</Description>
    <Title_Description>Fix crash when user home directory cannot be determined.  Currently dotnet will crash with an  entirely.

Closes #8053.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>21/05/2018 10:29:34 PM +00:00</CreatedAt>
    <ClosedAt>23/05/2018 9:45:33 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9326</IssueLabelID>
    <Title>No Dotnet CLI release with SDK 2.1.300-RC1</Title>
    <Description>Will a release of the dotnet CLI repo with SDK 2.1.300-RC1 and runtime 2.1.0-RC1 be released? They appear to be released on microsoft.com but not on github:
- https://www.microsoft.com/net/download/dotnet-core/runtime-2.1.0-rc1
- https://www.microsoft.com/net/download/dotnet-core/sdk-2.1.300-rc1

We are trying to compile the SDK from source and can't find the source for version 2.1.300-RC1.

Thanks!</Description>
    <Title_Description>No Dotnet CLI release with SDK 2.1.300-RC1 Will a release of the dotnet CLI repo with SDK 2.1.300-RC1 and runtime 2.1.0-RC1 be released? They appear to be released on microsoft.com but not on github:
- https://www.microsoft.com/net/download/dotnet-core/runtime-2.1.0-rc1
- https://www.microsoft.com/net/download/dotnet-core/sdk-2.1.300-rc1

We are trying to compile the SDK from source and can't find the source for version 2.1.300-RC1.

Thanks!</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9324</IssueLabelID>
    <Title>Validate the SDK installation</Title>
    <Description>Use the same technique to validate the SDK installation as used to notice the SDK version is already installed.

Related: https://github.com/dotnet/cli/issues/9056</Description>
    <Title_Description>Validate the SDK installation Use the same technique to validate the SDK installation as used to notice the SDK version is already installed.

Related: https://github.com/dotnet/cli/issues/9056</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9323</IssueLabelID>
    <Title>Merge release/2.1.4xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to master 
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/05/2018 5:01:01 PM +00:00</CreatedAt>
    <ClosedAt>22/05/2018 8:28:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9322</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>21/05/2018 5:00:58 PM +00:00</CreatedAt>
    <ClosedAt>22/05/2018 2:16:34 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9321</IssueLabelID>
    <Title>Global tools are not found on zsh</Title>
    <Description>The blow example is for [FAKE](https://github.com/fsharp/FAKE) but I can repro with other global tools as well such as 





</Description>
    <Title_Description>Global tools are not found on zsh The blow example is for [FAKE](https://github.com/fsharp/FAKE) but I can repro with other global tools as well such as 





</Title_Description>
    <Label>tool</Label>
    <CreatedAt>21/05/2018 2:11:14 PM +00:00</CreatedAt>
    <ClosedAt>17/07/2019 10:10:55 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9319</IssueLabelID>
    <Title>relative/absolute path issues in shim after installing donet tool</Title>
    <Description>After installing 
</Description>
    <Title_Description>relative/absolute path issues in shim after installing donet tool After installing 
</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9318</IssueLabelID>
    <Title>Merge release/2.1.2xx to release/2.1.3xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.2xx to release/2.1.3xx 
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/05/2018 5:00:51 PM +00:00</CreatedAt>
    <ClosedAt>21/05/2018 4:24:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9317</IssueLabelID>
    <Title>Merge release/2.1.4xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to master 
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>19/05/2018 4:00:56 PM +00:00</CreatedAt>
    <ClosedAt>21/05/2018 4:24:21 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9313</IssueLabelID>
    <Title>Add retry when Directory.Move</Title>
    <Description>&gt; Link to GitHub issue for open source changes  

https://github.com/dotnet/cli/issues/9289

&gt; Link to GitHub dotnet:release/[version] pull request (see Git Prepping a PR from the Release Branch) 

https://github.com/dotnet/cli/pull/9313

&gt; ProjectK TFS bug and changeset for closed source changes (security fix package authoring etc) 

N/A 

&gt; Describe the issue and how it manifests to the customer. 

When running uninstall and then install on Windows. Due to global tools use Directory.Move underneath there is a chance the indexer or the antivirus collided (had a handle still open on the prior name). And the installation/uninstalling will fail with access denied error.

&gt; What is the impact on the customer?
 
This impact the producers most. During producer’s test it is likely they will uninstall and install their tools several times. And the frequency of seeing this error varies machine by machine.

&gt; Are there changes that cannot be made in GitHub? (security fixes etc) 

No

&gt; Characterize potential risks introduced by the fix. 

Low risk. Try action on failure. And Directory.Move File.Move is atomic. Once it fails it can be retired.

&gt; Does the change alter existing behaviors? (return values or types error messages or exceptions etc. In 
other words is this a build-to-build breaking change?) 

No

 &gt;&gt; What changed?
&gt;&gt; What will teams need to do to respond?
&gt;&gt; Once check-in is approved send breaking change mail to netcorebreak

&gt; Code reviewers:

&gt; What testing has been completed? 

manual test

&gt; Which platforms are impacted? (Linux | Mac | Windows) 

Windows

&gt; Effected binaries and packages (exact name)

dotnet.dll Microsoft.DotNet.Cli.Utils.dll


------------

Why check 0x80070005 on IOException
This error is the exact error thrown. It is just an IOException. The only way to detect that is by HResult.

Why don’t use the function above -- RetryOnFileAccessFailure?
RetryOnFileAccessFailure is async. And also in this case it is awaiting a void. There is some gotcha around it. Since it is so close to release I choose the safer way. And RetryOnFileAccessFailure ‘s exception is not specific. UnauthorizedAccessException is likely a real error for user to handle for –-tool-path.
 
Tested with 100 times tight loop. No error
</Description>
    <Title_Description>Add retry when Directory.Move &gt; Link to GitHub issue for open source changes  

https://github.com/dotnet/cli/issues/9289

&gt; Link to GitHub dotnet:release/[version] pull request (see Git Prepping a PR from the Release Branch) 

https://github.com/dotnet/cli/pull/9313

&gt; ProjectK TFS bug and changeset for closed source changes (security fix package authoring etc) 

N/A 

&gt; Describe the issue and how it manifests to the customer. 

When running uninstall and then install on Windows. Due to global tools use Directory.Move underneath there is a chance the indexer or the antivirus collided (had a handle still open on the prior name). And the installation/uninstalling will fail with access denied error.

&gt; What is the impact on the customer?
 
This impact the producers most. During producer’s test it is likely they will uninstall and install their tools several times. And the frequency of seeing this error varies machine by machine.

&gt; Are there changes that cannot be made in GitHub? (security fixes etc) 

No

&gt; Characterize potential risks introduced by the fix. 

Low risk. Try action on failure. And Directory.Move File.Move is atomic. Once it fails it can be retired.

&gt; Does the change alter existing behaviors? (return values or types error messages or exceptions etc. In 
other words is this a build-to-build breaking change?) 

No

 &gt;&gt; What changed?
&gt;&gt; What will teams need to do to respond?
&gt;&gt; Once check-in is approved send breaking change mail to netcorebreak

&gt; Code reviewers:

&gt; What testing has been completed? 

manual test

&gt; Which platforms are impacted? (Linux | Mac | Windows) 

Windows

&gt; Effected binaries and packages (exact name)

dotnet.dll Microsoft.DotNet.Cli.Utils.dll


------------

Why check 0x80070005 on IOException
This error is the exact error thrown. It is just an IOException. The only way to detect that is by HResult.

Why don’t use the function above -- RetryOnFileAccessFailure?
RetryOnFileAccessFailure is async. And also in this case it is awaiting a void. There is some gotcha around it. Since it is so close to release I choose the safer way. And RetryOnFileAccessFailure ‘s exception is not specific. UnauthorizedAccessException is likely a real error for user to handle for –-tool-path.
 
Tested with 100 times tight loop. No error
</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>18/05/2018 1:27:58 AM +00:00</CreatedAt>
    <ClosedAt>22/05/2018 4:55:11 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9312</IssueLabelID>
    <Title>Merge release/2.1.4xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to master 
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/05/2018 11:00:52 PM +00:00</CreatedAt>
    <ClosedAt>18/05/2018 3:25:27 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9311</IssueLabelID>
    <Title>Final draft: adding Fedora 27 Fedora 28 openSUSE 42.3 and Ubuntu 18.04</Title>
    <Description>Please feel free to add people to the code review...

**Private drop:**
http://dotnetcli.blob.core.windows.net/jbeisner/Sdk/1.1.9-servicing-005294/

**.cliversion**
No longer needed as the 'bootstrap' step is removed from 'run-build'

**run-build.ps1 
run-build.sh**
Removing the unnecessary 'bootstrap' step
Using a temp 1.0.4-btstrp SDK for the new Linux distros

**README.md** 
Add info on the new distros

**build/Microsoft.DotNet.Cli.DependencyVersions.props** 
Update to the newer version of the runtime el al

**build/Microsoft.DotNet.Cli.Monikers.props 
test/Microsoft.DotNet.Cli.Utils.Tests/GivenAProjectToolsCommandResolver.cs** 
1.1.8 -&gt; 1.1.9

**build/Microsoft.DotNet.Cli.Publish.targets 
build/compile/Microsoft.DotNet.Cli.LzmaArchive.targets** 
Using clearer conditionals; fixing logic

**build_projects/dotnet-cli-build/dotnet-cli-build.csproj**
Variable was incorrect

**test/dotnet-migrate.Tests/GivenThatIWantToMigrateDeprecatedProjects.cs 
test/dotnet-migrate.Tests/GivenThatIWantToMigrateTestApps.cs 
test/dotnet-publish.Tests/GivenDotnetPublishPublishesProjects.cs** 
Disabling tests for the new Linux distros where appropriate 
Related: https://github.com/dotnet/cli/issues/9310

**scripts/obtain/dotnet-install.ps1 
scripts/obtain/dotnet-install.sh**
Using the most updated versions from CLI:master

**scripts/dockerrun.sh** 
Adding the new Linux distros
Removing access tokens and passwords so they do not appear as clear-text in logs.

</Description>
    <Title_Description>Final draft: adding Fedora 27, Fedora 28, openSUSE 42.3, and Ubuntu 18.04 Please feel free to add people to the code review...

**Private drop:**
http://dotnetcli.blob.core.windows.net/jbeisner/Sdk/1.1.9-servicing-005294/

**.cliversion**
No longer needed as the 'bootstrap' step is removed from 'run-build'

**run-build.ps1 
run-build.sh**
Removing the unnecessary 'bootstrap' step
Using a temp 1.0.4-btstrp SDK for the new Linux distros

**README.md** 
Add info on the new distros

**build/Microsoft.DotNet.Cli.DependencyVersions.props** 
Update to the newer version of the runtime el al

**build/Microsoft.DotNet.Cli.Monikers.props 
test/Microsoft.DotNet.Cli.Utils.Tests/GivenAProjectToolsCommandResolver.cs** 
1.1.8 -&gt; 1.1.9

**build/Microsoft.DotNet.Cli.Publish.targets 
build/compile/Microsoft.DotNet.Cli.LzmaArchive.targets** 
Using clearer conditionals; fixing logic

**build_projects/dotnet-cli-build/dotnet-cli-build.csproj**
Variable was incorrect

**test/dotnet-migrate.Tests/GivenThatIWantToMigrateDeprecatedProjects.cs 
test/dotnet-migrate.Tests/GivenThatIWantToMigrateTestApps.cs 
test/dotnet-publish.Tests/GivenDotnetPublishPublishesProjects.cs** 
Disabling tests for the new Linux distros where appropriate 
Related: https://github.com/dotnet/cli/issues/9310

**scripts/obtain/dotnet-install.ps1 
scripts/obtain/dotnet-install.sh**
Using the most updated versions from CLI:master

**scripts/dockerrun.sh** 
Adding the new Linux distros
Removing access tokens and passwords so they do not appear as clear-text in logs.

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9310</IssueLabelID>
    <Title>Fedora 27 Fedora 28 openSUSE 42.3 and Ubuntu 18.04 do not publish a self-contained app</Title>
    <Description>## Steps to reproduce
Build and test dotnet/CLI:rel/1.1.0

One of these RIDS:
fedora.27-x64
fedora.28-x64
opensuse.42.3-x64
ubuntu.18.04-x64

## Expected  behavior
The test: Microsoft.DotNet.Cli.Publish.Tests.GivenDotnetPublishPublishesProjects.ItPublishesARunnableSelfContainedApp should pass and a self-contained executable is produced

## Actual behavior
The self-contained executable is missing.


Note : the test is disabled for the above RIDs









</Description>
    <Title_Description>Fedora 27, Fedora 28, openSUSE 42.3, and Ubuntu 18.04 do not publish a self-contained app ## Steps to reproduce
Build and test dotnet/CLI:rel/1.1.0

One of these RIDS:
fedora.27-x64
fedora.28-x64
opensuse.42.3-x64
ubuntu.18.04-x64

## Expected  behavior
The test: Microsoft.DotNet.Cli.Publish.Tests.GivenDotnetPublishPublishesProjects.ItPublishesARunnableSelfContainedApp should pass and a self-contained executable is produced

## Actual behavior
The self-contained executable is missing.


Note : the test is disabled for the above RIDs









</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9309</IssueLabelID>
    <Title>Merge release/2.1.4xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to master 
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/05/2018 9:01:01 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 10:17:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9308</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>17/05/2018 9:00:59 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 10:17:09 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9307</IssueLabelID>
    <Title>Updating netci.groovy to archive test results on failure.</Title>
    <Description>
    </Description>
    <Title_Description>Updating netci.groovy to archive test results on failure. </Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/05/2018 8:31:08 PM +00:00</CreatedAt>
    <ClosedAt>19/05/2018 4:14:56 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9306</IssueLabelID>
    <Title>Merge release/2.1.4xx to master</Title>
    <Description>
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.4xx to master 
This is an automatically generated pull request from release/2.1.4xx into master.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Area-Infrastructure</Label>
    <CreatedAt>17/05/2018 6:01:00 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 8:41:24 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9305</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>17/05/2018 6:00:57 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 6:53:22 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9302</IssueLabelID>
    <Title>Multiple Logger/TestAdapter inputs from dotnet CLI</Title>
    <Description>- Allow dotnet CLI to take multiple inputs for logger &amp; TAP
- Complete PR: https://github.com/Microsoft/vstest/pull/1574  then update dotnet sdk here

Fixes: https://github.com/Microsoft/vstest/issues/1319</Description>
    <Title_Description>Multiple Logger/TestAdapter inputs from dotnet CLI - Allow dotnet CLI to take multiple inputs for logger &amp; TAP
- Complete PR: https://github.com/Microsoft/vstest/pull/1574  then update dotnet sdk here

Fixes: https://github.com/Microsoft/vstest/issues/1319</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>17/05/2018 7:25:32 AM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 5:41:02 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9301</IssueLabelID>
    <Title>ToolInstall command should support no cache</Title>
    <Description>## Steps to reproduce
1. Push tool package to nuget.org
2. Wait for "Package is still indexing" banner to disappear
3. Immediately run  for the new package

## Expected  behavior
Package should be available as soon as indexing is complete

## Actual behavior
Package isn't available for 30 minutes probably due to 30min HTTP caching

## Environment data
see screenshot

![dotnetclitoolinstall](https://user-images.githubusercontent.com/15364949/40149388-1dbf5e72-5928-11e8-86a1-4337df3c9865.png)

/cc @richlander </Description>
    <Title_Description>ToolInstall command should support no cache ## Steps to reproduce
1. Push tool package to nuget.org
2. Wait for "Package is still indexing" banner to disappear
3. Immediately run  for the new package

## Expected  behavior
Package should be available as soon as indexing is complete

## Actual behavior
Package isn't available for 30 minutes probably due to 30min HTTP caching

## Environment data
see screenshot

![dotnetclitoolinstall](https://user-images.githubusercontent.com/15364949/40149388-1dbf5e72-5928-11e8-86a1-4337df3c9865.png)

/cc @richlander </Title_Description>
    <Label>Bug</Label>
    <CreatedAt>16/05/2018 11:46:23 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9300</IssueLabelID>
    <Title>Add the NoWarn option when producing Cli.Utils for full framework as well</Title>
    <Description>Add the NoWarn option when producing Cli.Utils for full framework as well.
</Description>
    <Title_Description>Add the NoWarn option when producing Cli.Utils for full framework as well Add the NoWarn option when producing Cli.Utils for full framework as well.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/05/2018 10:34:22 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 4:35:17 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9299</IssueLabelID>
    <Title>Merge release/2.1.3xx to release/2.1.4xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.3xx to release/2.1.4xx 
This is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/05/2018 10:02:55 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 5:35:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9298</IssueLabelID>
    <Title>Merge release/2.1.2xx to release/2.1.3xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.2xx to release/2.1.3xx 
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/05/2018 8:15:58 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 5:34:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9297</IssueLabelID>
    <Title>Add NoWarn=NU5104 when packaging Cli.Utils for tests.</Title>
    <Description>Add NoWarn for the stable package depending on non-stable package when packaging Cli.Utils for tests.

This should unblock prodcon to produce stable builds with tests turned on.
</Description>
    <Title_Description>Add NoWarn=NU5104 when packaging Cli.Utils for tests. Add NoWarn for the stable package depending on non-stable package when packaging Cli.Utils for tests.

This should unblock prodcon to produce stable builds with tests turned on.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/05/2018 7:47:12 PM +00:00</CreatedAt>
    <ClosedAt>16/05/2018 9:07:54 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9294</IssueLabelID>
    <Title>Improve command completion.</Title>
    <Description>This PR improves command completion by updating the  does not suggest it.

Fixes #9286.
Fixes #9111.</Description>
    <Title_Description>Improve command completion. This PR improves command completion by updating the  does not suggest it.

Fixes #9286.
Fixes #9111.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/05/2018 6:46:52 AM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 6:02:58 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9292</IssueLabelID>
    <Title>Fix header output by `dotnet sln list`.</Title>
    <Description>The .

Additionally the command now filters out solution folders and only shows
projects.

Fixes #9246.
</Description>
    <Title_Description>Fix header output by .

Additionally the command now filters out solution folders and only shows
projects.

Fixes #9246.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/05/2018 6:08:20 AM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 5:59:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9290</IssueLabelID>
    <Title>Improve command line help user experience.</Title>
    <Description>This PR attempts to make the command line help user experience for  that is no longer used.
* Change the option descriptions to be more consistent in their grammatical
  structure.
* Removed extra blank line from end of help output.

Fixes #7431.
Fixes #9230.
Fixes #9165.
</Description>
    <Title_Description>Improve command line help user experience. This PR attempts to make the command line help user experience for  that is no longer used.
* Change the option descriptions to be more consistent in their grammatical
  structure.
* Removed extra blank line from end of help output.

Fixes #7431.
Fixes #9230.
Fixes #9165.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/05/2018 12:30:19 AM +00:00</CreatedAt>
    <ClosedAt>20/05/2018 7:16:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9289</IssueLabelID>
    <Title>global tools install transient failure</Title>
    <Description>This is a flaky error need to investigate.</Description>
    <Title_Description>global tools install transient failure This is a flaky error need to investigate.</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9288</IssueLabelID>
    <Title>PackAsTool generate shim in Build instead of Pack</Title>
    <Description>PackagedShimOutputDirectory currently set to temporary folder under IntermediateOutputPath. The producer (code gen in this case) need to unpack sign and repack.

This ask is to generate shim during publish instead of pack so there is no repack required
</Description>
    <Title_Description>PackAsTool generate shim in Build instead of Pack PackagedShimOutputDirectory currently set to temporary folder under IntermediateOutputPath. The producer (code gen in this case) need to unpack sign and repack.

This ask is to generate shim during publish instead of pack so there is no repack required
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9287</IssueLabelID>
    <Title>Update clicommandlineparser climigrate coresetup coresetup coresetup fsharp msbuild roslyn sdk templating templating templating websdk to rtm-62915-03 rtm-62915-03 rtm-26515-03 rtm-26515-03 rtm-26515-03 rtm-180515-0 15.7.177 beta6-62915-07 rtm-62915-10 beta3-20180515-1688254 beta3-20180515-1688254 beta3-20180515-1688254 rtm-20180515-1688249 respectively (release/2.1.3xx)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update clicommandlineparser, climigrate, coresetup, coresetup, coresetup, fsharp, msbuild, roslyn, sdk, templating, templating, templating, websdk to rtm-62915-03, rtm-62915-03, rtm-26515-03, rtm-26515-03, rtm-26515-03, rtm-180515-0, 15.7.177, beta6-62915-07, rtm-62915-10, beta3-20180515-1688254, beta3-20180515-1688254, beta3-20180515-1688254, rtm-20180515-1688249, respectively (release/2.1.3xx) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>15/05/2018 11:49:45 PM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 8:41:54 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9286</IssueLabelID>
    <Title>`vstest` and `msbuild` commands are missing from `dotnet complete` output.</Title>
    <Description>## Steps to reproduce

1. </Description>
    <Title_Description>
    </Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9283</IssueLabelID>
    <Title>Consume 15.7.2 compiler</Title>
    <Description>
    </Description>
    <Title_Description>Consume 15.7.2 compiler </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>15/05/2018 7:51:50 PM +00:00</CreatedAt>
    <ClosedAt>16/05/2018 6:58:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9279</IssueLabelID>
    <Title>MSBuild 15.8.61</Title>
    <Description>This change removes our NuGet resolver in favor of an xml file manifest (in ) which is included with NuGet now. Removes the only direct compile-time dependency MSBuild had on NuGet.</Description>
    <Title_Description>MSBuild 15.8.61 This change removes our NuGet resolver in favor of an xml file manifest (in ) which is included with NuGet now. Removes the only direct compile-time dependency MSBuild had on NuGet.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>15/05/2018 3:30:08 AM +00:00</CreatedAt>
    <ClosedAt>22/05/2018 12:44:19 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9278</IssueLabelID>
    <Title>Accept DropSuffix as a boolean</Title>
    <Description>Rather than simply treating DropSuffix as empty vs. nonempty accept != true.  This allows it to work in prodcon where false is normally passed.</Description>
    <Title_Description>Accept DropSuffix as a boolean Rather than simply treating DropSuffix as empty vs. nonempty accept != true.  This allows it to work in prodcon where false is normally passed.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>14/05/2018 8:47:14 PM +00:00</CreatedAt>
    <ClosedAt>14/05/2018 10:47:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9276</IssueLabelID>
    <Title>Update clicommandlineparser climigrate coresetup coresetup coresetup fsharp roslyn sdk templating templating templating websdk to rtm-62914-01 rtm-62914-02 rtm-26514-02 rtm-26514-02 rtm-26514-02 rtm-180513-0 beta6-62911-06 rtm-62914-01 beta3-20180513-1683966 beta3-20180513-1683966 beta3-20180513-1683966 rtm-20180513-1683962 respectively (release/2.1.3xx)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update clicommandlineparser, climigrate, coresetup, coresetup, coresetup, fsharp, roslyn, sdk, templating, templating, templating, websdk to rtm-62914-01, rtm-62914-02, rtm-26514-02, rtm-26514-02, rtm-26514-02, rtm-180513-0, beta6-62911-06, rtm-62914-01, beta3-20180513-1683966, beta3-20180513-1683966, beta3-20180513-1683966, rtm-20180513-1683962, respectively (release/2.1.3xx) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>14/05/2018 3:46:07 PM +00:00</CreatedAt>
    <ClosedAt>15/05/2018 4:25:47 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9271</IssueLabelID>
    <Title>Compiler build failures in 'prodcon/cli/release/2.1.3xx/' - '20180512.02'</Title>
    <Description>There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1682246
  - **Agent:** DDVSOLINUXAGE031
  - **Error log:** dotnet_install: Error: Could not download .NET Core SDK version 2.2.0-preview1-007799...

@mmitche @livarcocc
</Description>
    <Title_Description>Compiler build failures in 'prodcon/cli/release/2.1.3xx/' - '20180512.02' There were a set of failures during this build. Here is a summary of these:
* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&amp;buildId=1682246
  - **Agent:** DDVSOLINUXAGE031
  - **Error log:** dotnet_install: Error: Could not download .NET Core SDK version 2.2.0-preview1-007799...

@mmitche @livarcocc
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9269</IssueLabelID>
    <Title>dotnet pack for global tools support for Full framework </Title>
    <Description>My idea is to have both global tool and regular application so non developers could be targeted with app running full framework

## Steps to reproduce
1. Create global tool and add support for multiple target frameworks
 output:

Пакет SDK для .NET Core (отражающий любой global.json):
 Version:   2.1.300-rc1-008673
 Commit:    f5e3ddbe73

Host (useful for support):
  Version: 2.1.0-rc1
  Commit:  eb9bc92051





</Description>
    <Title_Description>dotnet pack for global tools support for Full framework  My idea is to have both global tool and regular application so non developers could be targeted with app running full framework

## Steps to reproduce
1. Create global tool and add support for multiple target frameworks
 output:

Пакет SDK для .NET Core (отражающий любой global.json):
 Version:   2.1.300-rc1-008673
 Commit:    f5e3ddbe73

Host (useful for support):
  Version: 2.1.0-rc1
  Commit:  eb9bc92051





</Title_Description>
    <Label>tool</Label>
    <CreatedAt>12/05/2018 10:32:32 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9267</IssueLabelID>
    <Title>Fix incorrect default VSTest verbosity level.</Title>
    <Description>Commit 10289504a8aeb5fab7c1c9f8e0e7602e9c14250a changed the default verbosity
option used for MSBuild from  suppressing error output
that users expect to see.

The fix is to change the check to only match against user-supplied options.
The default level the command uses for MSBuild is not forwarded to VSTest.

Fixes #9229.
</Description>
    <Title_Description>Fix incorrect default VSTest verbosity level. Commit 10289504a8aeb5fab7c1c9f8e0e7602e9c14250a changed the default verbosity
option used for MSBuild from  suppressing error output
that users expect to see.

The fix is to change the check to only match against user-supplied options.
The default level the command uses for MSBuild is not forwarded to VSTest.

Fixes #9229.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>12/05/2018 12:38:34 AM +00:00</CreatedAt>
    <ClosedAt>12/05/2018 6:17:06 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9265</IssueLabelID>
    <Title>Always execute cache expansion on native installers.</Title>
    <Description>Introduced a DotnetFirstRunConfiguration that holds the values that were usually passed around as environment variables. This concentrates the place where we need access to the Environment Provider and allows us to set our own controls values when necessary.

The Configuration is then used and set whenever the report-installsuccess verb is invoked (meaning this is a native installer) and we set the skip first run value to false guaranteeing cache expansion will happen if necessary.

Minor fix also took the opportunity to remove the direct dependency of TestFramework to Netstandard.Library fixing one of the warnings we have been getting in our builds. Can't let these proliferate.
</Description>
    <Title_Description>Always execute cache expansion on native installers. Introduced a DotnetFirstRunConfiguration that holds the values that were usually passed around as environment variables. This concentrates the place where we need access to the Environment Provider and allows us to set our own controls values when necessary.

The Configuration is then used and set whenever the report-installsuccess verb is invoked (meaning this is a native installer) and we set the skip first run value to false guaranteeing cache expansion will happen if necessary.

Minor fix also took the opportunity to remove the direct dependency of TestFramework to Netstandard.Library fixing one of the warnings we have been getting in our builds. Can't let these proliferate.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>11/05/2018 8:31:52 PM +00:00</CreatedAt>
    <ClosedAt>22/05/2018 8:17:56 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9264</IssueLabelID>
    <Title>Updating the CLI branding to 201.</Title>
    <Description>
    </Description>
    <Title_Description>Updating the CLI branding to 201. </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>11/05/2018 7:34:14 PM +00:00</CreatedAt>
    <ClosedAt>11/05/2018 9:50:30 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9262</IssueLabelID>
    <Title>MSBuild 15.7.179</Title>
    <Description>Shiproom approved; should have no .NET Core impact.</Description>
    <Title_Description>MSBuild 15.7.179 Shiproom approved; should have no .NET Core impact.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>11/05/2018 6:19:38 PM +00:00</CreatedAt>
    <ClosedAt>14/05/2018 4:47:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9261</IssueLabelID>
    <Title>MSBuild 15.7.179 (2xx)</Title>
    <Description>Carries a shiproom-approved fix for NuGet scenarios on full framework. No .NET Core impact (but syncs version).</Description>
    <Title_Description>MSBuild 15.7.179 (2xx) Carries a shiproom-approved fix for NuGet scenarios on full framework. No .NET Core impact (but syncs version).</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>11/05/2018 6:17:22 PM +00:00</CreatedAt>
    <ClosedAt>11/05/2018 7:30:12 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9259</IssueLabelID>
    <Title>Insert NuGet Build 4.8.0-preview1.5196 into cli</Title>
    <Description>Insert NuGet Build 4.8.0-preview1.5196 into cli release/2.1.4xx branch</Description>
    <Title_Description>Insert NuGet Build 4.8.0-preview1.5196 into cli Insert NuGet Build 4.8.0-preview1.5196 into cli release/2.1.4xx branch</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>11/05/2018 5:36:29 PM +00:00</CreatedAt>
    <ClosedAt>19/05/2018 4:00:00 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9255</IssueLabelID>
    <Title>The "https://dot.net/v1/dotnet-install.sh" script doesn't work on Fedora or OpenSuse</Title>
    <Description>Download the above script and run it on Fedora or OpenSuse to install a version of .NET Core. It fails with "find" or "tput" not found. It seems that not all of the Linux distros have these common utilities.





</Description>
    <Title_Description>The "https://dot.net/v1/dotnet-install.sh" script doesn't work on Fedora or OpenSuse Download the above script and run it on Fedora or OpenSuse to install a version of .NET Core. It fails with "find" or "tput" not found. It seems that not all of the Linux distros have these common utilities.





</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9254</IssueLabelID>
    <Title>Use the latest nuget.exe in generatenupkg script</Title>
    <Description>Instead of v3.5.0-rc1 use the </Description>
    <Title_Description>Use the latest nuget.exe in generatenupkg script Instead of v3.5.0-rc1 use the </Title_Description>
    <Label>Infrastructure</Label>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9251</IssueLabelID>
    <Title>Merge release/2.1.2xx to release/2.1.3xx</Title>
    <Description>
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Description>
    <Title_Description>Merge release/2.1.2xx to release/2.1.3xx 
This is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.



Once all conflicts are resolved and all the tests pass you are free to merge the pull request.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>10/05/2018 7:00:58 AM +00:00</CreatedAt>
    <ClosedAt>15/05/2018 4:26:04 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9246</IssueLabelID>
    <Title>The `dotnet sln list` command uses the wrong header in the output.</Title>
    <Description>## Steps to reproduce

1. 






</Description>
    <Title_Description>The 






</Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9245</IssueLabelID>
    <Title>Can't install global tool</Title>
    <Description>## Steps to reproduce





</Description>
    <Title_Description>Can't install global tool ## Steps to reproduce





</Title_Description>
    <Label>tool</Label>
    <CreatedAt>9/05/2018 9:31:22 PM +00:00</CreatedAt>
    <ClosedAt>9/05/2018 11:09:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9244</IssueLabelID>
    <Title>`dotnet nuget` and subcommand help is not localized.</Title>
    <Description>## Steps to reproduce

1. 






</Description>
    <Title_Description>






</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9242</IssueLabelID>
    <Title>CLI:release/2.1.2xx-MSRC to CLI:release/2.1.2xx</Title>
    <Description>Pushing release/2.1.2xx-MSRC back into release/2.1.2xx</Description>
    <Title_Description>CLI:release/2.1.2xx-MSRC to CLI:release/2.1.2xx Pushing release/2.1.2xx-MSRC back into release/2.1.2xx</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9240</IssueLabelID>
    <Title>netcoreapp2.0 test project can't load referenced System.Memory when running on 2.1-rc1</Title>
    <Description>## Steps to reproduce

Running  output:






</Description>
    <Title_Description>netcoreapp2.0 test project can't load referenced System.Memory when running on 2.1-rc1 ## Steps to reproduce

Running  output:






</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9232</IssueLabelID>
    <Title>Update clicommandlineparser climigrate coresetup coresetup coresetup fsharp sdk templating templating templating websdk to rtm-62908-03 alpha-62908-03 rtm-26508-02 rtm-26508-02 rtm-26508-02 rtm-180508-0 rtm-62908-02 beta3-20180508-1667431 beta3-20180508-1667431 beta3-20180508-1667431 rtm-20180508-1667423 respectively (release/2.1.3xx)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update clicommandlineparser, climigrate, coresetup, coresetup, coresetup, fsharp, sdk, templating, templating, templating, websdk to rtm-62908-03, alpha-62908-03, rtm-26508-02, rtm-26508-02, rtm-26508-02, rtm-180508-0, rtm-62908-02, beta3-20180508-1667431, beta3-20180508-1667431, beta3-20180508-1667431, rtm-20180508-1667423, respectively (release/2.1.3xx) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>9/05/2018 12:31:51 AM +00:00</CreatedAt>
    <ClosedAt>11/05/2018 9:34:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9230</IssueLabelID>
    <Title>Unlocalized string in `dotnet build --help` output.</Title>
    <Description>## Steps to reproduce

1. 



</Description>
    <Title_Description>Unlocalized string in 



</Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9229</IssueLabelID>
    <Title>dotnet test output missing in .NET Core 2.1.300 RC1</Title>
    <Description>In .NET Core 2.1 RC1 SDK (</Description>
    <Title_Description>dotnet test output missing in .NET Core 2.1.300 RC1 In .NET Core 2.1 RC1 SDK (</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9226</IssueLabelID>
    <Title>Install script updates</Title>
    <Description>**We should discuss this update:**
Adding the unsupported/unadvertised parameter: "RIDOSName"

**Other updates:**
Standardizing quotes in a conditional.
Removing superfluous method parameters.
Use lowercase with asset substrings as assets are lowercase. 
</Description>
    <Title_Description>Install script updates **We should discuss this update:**
Adding the unsupported/unadvertised parameter: "RIDOSName"

**Other updates:**
Standardizing quotes in a conditional.
Removing superfluous method parameters.
Use lowercase with asset substrings as assets are lowercase. 
</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9224</IssueLabelID>
    <Title>Generate packaged shim with PackAsTool experience</Title>
    <Description>So shim executable can be generated. And they can also be signed</Description>
    <Title_Description>Generate packaged shim with PackAsTool experience So shim executable can be generated. And they can also be signed</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9222</IssueLabelID>
    <Title>Uninstalling RC1 leave sdk directory causing Dotnet to be in non-working state</Title>
    <Description>## Steps to reproduce
- install dotnet sdk RC1 on Windows.
- run some dotnet commands like dotnet build so that it starts the dotnet hosts.
- run the uninstaller (you will need to select the installer to require a reboot because it fails to close the dotnet hosts.)
- once done you can try dotnet commands but will fail with:

## Expected  behavior
Should just work.

## Actual behavior
Found dotnet SDK but did not find dotnet.dll at [C:\Program Files\dotnet\sdk\2.1.300-rc1-008673\dotnet.dll]

it can then be fixed by deleting the directory.

## Environment data
 output:

n/a


The uninstaller needs to be able to shutdown the hosts before running.




</Description>
    <Title_Description>Uninstalling RC1 leave sdk directory causing Dotnet to be in non-working state ## Steps to reproduce
- install dotnet sdk RC1 on Windows.
- run some dotnet commands like dotnet build so that it starts the dotnet hosts.
- run the uninstaller (you will need to select the installer to require a reboot because it fails to close the dotnet hosts.)
- once done you can try dotnet commands but will fail with:

## Expected  behavior
Should just work.

## Actual behavior
Found dotnet SDK but did not find dotnet.dll at [C:\Program Files\dotnet\sdk\2.1.300-rc1-008673\dotnet.dll]

it can then be fixed by deleting the directory.

## Environment data
 output:

n/a


The uninstaller needs to be able to shutdown the hosts before running.




</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9219</IssueLabelID>
    <Title>Fails to invoke custom global tool when it claims to have multiple project files</Title>
    <Description>## Steps to reproduce


</Description>
    <Title_Description>Fails to invoke custom global tool when it claims to have multiple project files ## Steps to reproduce


</Title_Description>
    <Label>tool</Label>
    <CreatedAt>8/05/2018 6:43:38 AM +00:00</CreatedAt>
    <ClosedAt>3/10/2018 9:21:47 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9218</IssueLabelID>
    <Title>ARM32 tar.gz's for SDK and ASP.NET Runtime</Title>
    <Description>Filing this here to track getting ASP.NET Core runtime tar.gz's as well as ASP.NET runtime included in the ARM32 SDK.</Description>
    <Title_Description>ARM32 tar.gz's for SDK and ASP.NET Runtime Filing this here to track getting ASP.NET Core runtime tar.gz's as well as ASP.NET runtime included in the ARM32 SDK.</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9214</IssueLabelID>
    <Title>Fix adding tools directory to PATH for native installers.</Title>
    <Description>This commit fixes adding the tools directory to the user's PATH for the native
installers.

The issue was a regression caused by #8886.  The change used a "no-op" sentinel
file that reported it existed.  This "no-op" sentinel was used for the native
installers.  Unlike the other "no-op" sentinels used by the native installer
we do want PATH to be modified by the native installer.

The fix is to change the "no-op" sentinel to report the file doesn't exist but
also to not to attempt to create the file.

This fixes #9208.
</Description>
    <Title_Description>Fix adding tools directory to PATH for native installers. This commit fixes adding the tools directory to the user's PATH for the native
installers.

The issue was a regression caused by #8886.  The change used a "no-op" sentinel
file that reported it existed.  This "no-op" sentinel was used for the native
installers.  Unlike the other "no-op" sentinels used by the native installer
we do want PATH to be modified by the native installer.

The fix is to change the "no-op" sentinel to report the file doesn't exist but
also to not to attempt to create the file.

This fixes #9208.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>7/05/2018 11:39:26 PM +00:00</CreatedAt>
    <ClosedAt>9/05/2018 5:29:26 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9213</IssueLabelID>
    <Title>Making the CLI package name be only major.minor version and updating the version of the runtime packages that we depend on.</Title>
    <Description>@MattGertz marked it for shiproom approval already because this change is a reaction to an upstream change in the runtime and asp.net. We need to take it.

**Issues fixed**

Fixes https://github.com/dotnet/cli/issues/9189

**Description of Issue**

Change the CLI's linux native installers to depend on version of the runtime and asp.net that are versioned and major.minor. Also update the CLI package names to be major.minor.

**Customer Impact**

Better package management by the native linux package managers.

**Risk**

Medium - this is changing the linux native installers of the CLI.

**Testing**

CLI CI.
Manually verified the dependencies of the new packages.

</Description>
    <Title_Description>Making the CLI package name be only major.minor version and updating the version of the runtime packages that we depend on. @MattGertz marked it for shiproom approval already because this change is a reaction to an upstream change in the runtime and asp.net. We need to take it.

**Issues fixed**

Fixes https://github.com/dotnet/cli/issues/9189

**Description of Issue**

Change the CLI's linux native installers to depend on version of the runtime and asp.net that are versioned and major.minor. Also update the CLI package names to be major.minor.

**Customer Impact**

Better package management by the native linux package managers.

**Risk**

Medium - this is changing the linux native installers of the CLI.

**Testing**

CLI CI.
Manually verified the dependencies of the new packages.

</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>7/05/2018 9:23:19 PM +00:00</CreatedAt>
    <ClosedAt>9/05/2018 10:38:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9211</IssueLabelID>
    <Title>Vstest args for dotnet cli</Title>
    <Description>- Allow dotnet CLI to take multiple inputs for logger &amp; TAP
- Complete PR: https://github.com/Microsoft/vstest/pull/1574  then update dotnet sdk here

Fixes: https://github.com/Microsoft/vstest/issues/1319</Description>
    <Title_Description>Vstest args for dotnet cli - Allow dotnet CLI to take multiple inputs for logger &amp; TAP
- Complete PR: https://github.com/Microsoft/vstest/pull/1574  then update dotnet sdk here

Fixes: https://github.com/Microsoft/vstest/issues/1319</Title_Description>
    <Label>community</Label>
    <CreatedAt>7/05/2018 6:15:03 AM +00:00</CreatedAt>
    <ClosedAt>17/05/2018 7:25:50 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9209</IssueLabelID>
    <Title>dotnet tool install --source-feed doesn't support relative local paths</Title>
    <Description>As described in the headline. On Windows this would work. On UNIX an absolute path is required.

</Description>
    <Title_Description>dotnet tool install --source-feed doesn't support relative local paths As described in the headline. On Windows this would work. On UNIX an absolute path is required.

</Title_Description>
    <Label>tool</Label>
    <CreatedAt>5/05/2018 9:18:27 PM +00:00</CreatedAt>
    <ClosedAt>6/05/2018 3:49:21 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9208</IssueLabelID>
    <Title>Can't invoke global tool in bash</Title>
    <Description>## Steps to reproduce
Install a global tool.

## Expected  behavior

Global tool should exist.

## Actual behavior








</Description>
    <Title_Description>Can't invoke global tool in bash ## Steps to reproduce
Install a global tool.

## Expected  behavior

Global tool should exist.

## Actual behavior








</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9202</IssueLabelID>
    <Title>Fixing CI build breaks for new CI legs; CLI:release/2.1.3xx</Title>
    <Description>The three newly supported Linux distros: Fedora 27 openSUSE 43.2 and Ubuntu 18.04 should not build native installer packages nor "IncludeSharedFrameworksForBackwardsCompatibilityTests"


</Description>
    <Title_Description>Fixing CI build breaks for new CI legs; CLI:release/2.1.3xx The three newly supported Linux distros: Fedora 27 openSUSE 43.2 and Ubuntu 18.04 should not build native installer packages nor "IncludeSharedFrameworksForBackwardsCompatibilityTests"


</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9201</IssueLabelID>
    <Title>Insert NuGet Build 4.8.0-preview1.5158 into cli</Title>
    <Description>Insert NuGet Build 4.8.0-preview1.5158 into cli release/2.1.4xx branch</Description>
    <Title_Description>Insert NuGet Build 4.8.0-preview1.5158 into cli Insert NuGet Build 4.8.0-preview1.5158 into cli release/2.1.4xx branch</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>4/05/2018 5:58:08 PM +00:00</CreatedAt>
    <ClosedAt>4/05/2018 8:24:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9199</IssueLabelID>
    <Title>Removing the word please from the ASP.NET first run message.</Title>
    <Description>@MattGertz for approval to take to ship room for RTM

**Issues fixed**

https://github.com/dotnet/cli/issues/9195

**Description of Issue**

We have the word please in one of our messages in a situation where MS guidance asks us not to use it. We are just removing that message.

**Customer Impact**

We are violating MS guidance.

**Risk**

Low - Just a small text change.

**Testing**

CLI CI.</Description>
    <Title_Description>Removing the word please from the ASP.NET first run message. @MattGertz for approval to take to ship room for RTM

**Issues fixed**

https://github.com/dotnet/cli/issues/9195

**Description of Issue**

We have the word please in one of our messages in a situation where MS guidance asks us not to use it. We are just removing that message.

**Customer Impact**

We are violating MS guidance.

**Risk**

Low - Just a small text change.

**Testing**

CLI CI.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>4/05/2018 5:25:02 PM +00:00</CreatedAt>
    <ClosedAt>4/05/2018 8:25:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9198</IssueLabelID>
    <Title>[WIP]Vstest args</Title>
    <Description>- Allow dotnet CLI to take multiple inputs for logger &amp; TAP
- Complete PR: https://github.com/Microsoft/vstest/pull/1574  then update dotnet sdk here</Description>
    <Title_Description>[WIP]Vstest args - Allow dotnet CLI to take multiple inputs for logger &amp; TAP
- Complete PR: https://github.com/Microsoft/vstest/pull/1574  then update dotnet sdk here</Title_Description>
    <Label>community</Label>
    <CreatedAt>4/05/2018 12:55:46 PM +00:00</CreatedAt>
    <ClosedAt>7/05/2018 6:15:21 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9197</IssueLabelID>
    <Title>Duplicate Targetframework attribute</Title>
    <Description>Not sure if this is an issue of the used template (since it's not an official template) or of dotnet.
I'm trying to run the application under Ubuntu 16.04 and am getting the following error when building the application the second time. I tried deleting the 





</Description>
    <Title_Description>Duplicate Targetframework attribute Not sure if this is an issue of the used template (since it's not an official template) or of dotnet.
I'm trying to run the application under Ubuntu 16.04 and am getting the following error when building the application the second time. I tried deleting the 





</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9195</IssueLabelID>
    <Title>dotnet SDK message: please remove please</Title>
    <Description>The first time you run  after installing the SDK you get a message similar to:


Welcome to .NET Core!
---------------------
Learn more about .NET Core: https://aka.ms/dotnet-docs
Use 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs

Telemetry
---------
The .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous and doesn't include command-line arguments. The data is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.

Read more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry

ASP.NET Core
------------
Successfully installed the ASP.NET Core HTTPS Development Certificate.
To trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms **please** refer to the platform specific documentation.
For more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.

------------------ End of output ---------------------------------

Per the MS style guide
Avoid please except in situations where the customer is asked to do something inconvenient or the application or site is to blame for the situation.



</Description>
    <Title_Description>dotnet SDK message: please remove please The first time you run  after installing the SDK you get a message similar to:


Welcome to .NET Core!
---------------------
Learn more about .NET Core: https://aka.ms/dotnet-docs
Use 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs

Telemetry
---------
The .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous and doesn't include command-line arguments. The data is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.

Read more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry

ASP.NET Core
------------
Successfully installed the ASP.NET Core HTTPS Development Certificate.
To trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms **please** refer to the platform specific documentation.
For more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.

------------------ End of output ---------------------------------

Per the MS style guide
Avoid please except in situations where the customer is asked to do something inconvenient or the application or site is to blame for the situation.



</Title_Description>
    <Label>In PR</Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9193</IssueLabelID>
    <Title>Update clicommandlineparser climigrate coresetup coresetup coresetup fsharp roslyn sdk templating templating templating websdk to rtm-62905-02 alpha-62905-02 rtm-26505-04 rtm-26505-04 rtm-26505-04 rtm-180505-0 beta6-62904-04 rtm-62905-02 beta3-20180505-1661716 beta3-20180505-1661716 beta3-20180505-1661716 rtm-20180505-1661707 respectively (release/2.1.3xx)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update clicommandlineparser, climigrate, coresetup, coresetup, coresetup, fsharp, roslyn, sdk, templating, templating, templating, websdk to rtm-62905-02, alpha-62905-02, rtm-26505-04, rtm-26505-04, rtm-26505-04, rtm-180505-0, beta6-62904-04, rtm-62905-02, beta3-20180505-1661716, beta3-20180505-1661716, beta3-20180505-1661716, rtm-20180505-1661707, respectively (release/2.1.3xx) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>3/05/2018 6:27:14 PM +00:00</CreatedAt>
    <ClosedAt>8/05/2018 7:41:29 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9191</IssueLabelID>
    <Title>Push TpRTM in 2.1.3xx</Title>
    <Description>Inserting Testplatform RTM package in dotnet cli

TestPlatform [Release Notes](https://github.com/Microsoft/vstest-docs/blob/master/docs/releases.md#1570)</Description>
    <Title_Description>Push TpRTM in 2.1.3xx Inserting Testplatform RTM package in dotnet cli

TestPlatform [Release Notes](https://github.com/Microsoft/vstest-docs/blob/master/docs/releases.md#1570)</Title_Description>
    <Label>community</Label>
    <CreatedAt>3/05/2018 6:27:51 AM +00:00</CreatedAt>
    <ClosedAt>4/05/2018 8:24:03 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9189</IssueLabelID>
    <Title>Update linux installers to use upgradable Linux packages</Title>
    <Description>CLI side of https://github.com/dotnet/core-setup/issues/4097</Description>
    <Title_Description>Update linux installers to use upgradable Linux packages CLI side of https://github.com/dotnet/core-setup/issues/4097</Title_Description>
    <Label>Blocking-RTM</Label>
    <CreatedAt>2/05/2018 8:10:54 PM +00:00</CreatedAt>
    <ClosedAt>9/05/2018 10:39:10 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9188</IssueLabelID>
    <Title>Removing some patches for source build.</Title>
    <Description>Addresses patches 04 07 08 09 and 12 from https://github.com/dotnet/cli/issues/9176.

01 02 06 and 11 are not needed or have already been addressed.

Which leaves 03 05 and 10 that are being investigated.</Description>
    <Title_Description>Removing some patches for source build. Addresses patches 04 07 08 09 and 12 from https://github.com/dotnet/cli/issues/9176.

01 02 06 and 11 are not needed or have already been addressed.

Which leaves 03 05 and 10 that are being investigated.</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>2/05/2018 7:02:02 PM +00:00</CreatedAt>
    <ClosedAt>3/05/2018 5:51:23 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9187</IssueLabelID>
    <Title>Allow ExternalRestoreSources in offline build (remove source-build patch 0003)</Title>
    <Description>Allow the caller to provide ExternalRestoreSources while DotnetBuildOffline = true. Any logic to block passing ExternalRestoreSources belongs in the caller.

Fixes source-build offline build: it passes in filesystem NuGet sources for prebuilt and source-built packages.

---

Lets us remove  from source-build (https://github.com/dotnet/source-build/issues/496). Most of the changes aren't needed if we use existing properties from ProdCon instead of the source-build repo API.

To test this out I produced a tarball and built the tarball offline: works and smoke-test is good.

/cc @dleeapho</Description>
    <Title_Description>Allow ExternalRestoreSources in offline build (remove source-build patch 0003) Allow the caller to provide ExternalRestoreSources while DotnetBuildOffline = true. Any logic to block passing ExternalRestoreSources belongs in the caller.

Fixes source-build offline build: it passes in filesystem NuGet sources for prebuilt and source-built packages.

---

Lets us remove  from source-build (https://github.com/dotnet/source-build/issues/496). Most of the changes aren't needed if we use existing properties from ProdCon instead of the source-build repo API.

To test this out I produced a tarball and built the tarball offline: works and smoke-test is good.

/cc @dleeapho</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>2/05/2018 6:52:59 PM +00:00</CreatedAt>
    <ClosedAt>3/05/2018 5:51:43 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9182</IssueLabelID>
    <Title>Add additional tools to help text</Title>
    <Description>fix https://github.com/dotnet/cli/issues/8633 </Description>
    <Title_Description>Add additional tools to help text fix https://github.com/dotnet/cli/issues/8633 </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>1/05/2018 8:49:37 PM +00:00</CreatedAt>
    <ClosedAt>3/05/2018 5:55:38 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9180</IssueLabelID>
    <Title>Simplify completions scripts</Title>
    <Description>Simplified completions scripts for bash and zsh by:

* removing unused variables
* removing shebang since the script is meant to be copied not executed on its own</Description>
    <Title_Description>Simplify completions scripts Simplified completions scripts for bash and zsh by:

* removing unused variables
* removing shebang since the script is meant to be copied not executed on its own</Title_Description>
    <Label>community</Label>
    <CreatedAt>1/05/2018 9:45:12 AM +00:00</CreatedAt>
    <ClosedAt>1/05/2018 5:13:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9178</IssueLabelID>
    <Title>Add a property to disable bundling ASP.NET Core tools and runtimes</Title>
    <Description>Part of https://github.com/dotnet/source-build/issues/456

Changes:
 - add a property  to disable bundling ASP.NET Core tools ~~templates~~ and runtimes
 - set properties that align with https://github.com/aspnet/Universe/pull/1130 to prevent shared runtime trimming against aspnet in a source-built CLI
 - includes some changes currently applied in source-build via https://github.com/dotnet/source-build/tree/dev/release/2.1/patches/cli (cc @dseefeld)

~~Marking as WIP because I need to clarify if aspnet templates should be excluded or not.~~
Update: keep templates</Description>
    <Title_Description>Add a property to disable bundling ASP.NET Core tools and runtimes Part of https://github.com/dotnet/source-build/issues/456

Changes:
 - add a property  to disable bundling ASP.NET Core tools ~~templates~~ and runtimes
 - set properties that align with https://github.com/aspnet/Universe/pull/1130 to prevent shared runtime trimming against aspnet in a source-built CLI
 - includes some changes currently applied in source-build via https://github.com/dotnet/source-build/tree/dev/release/2.1/patches/cli (cc @dseefeld)

~~Marking as WIP because I need to clarify if aspnet templates should be excluded or not.~~
Update: keep templates</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>1/05/2018 12:54:03 AM +00:00</CreatedAt>
    <ClosedAt>1/05/2018 10:56:33 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9177</IssueLabelID>
    <Title>Remove mac mark all 755</Title>
    <Description>fix https://github.com/dotnet/cli/issues/7618

This temporary fix is added in https://github.com/dotnet/cli/pull/517 There was no core-setup at that time. And mark  as executable should be enough. It is changing the whole folder as executable.

Today it is covered by core-setup https://github.com/dotnet/core-setup/blob/master/src/pkg/packaging/osx/hostfxr/scripts/postinstall#L11
</Description>
    <Title_Description>Remove mac mark all 755 fix https://github.com/dotnet/cli/issues/7618

This temporary fix is added in https://github.com/dotnet/cli/pull/517 There was no core-setup at that time. And mark  as executable should be enough. It is changing the whole folder as executable.

Today it is covered by core-setup https://github.com/dotnet/core-setup/blob/master/src/pkg/packaging/osx/hostfxr/scripts/postinstall#L11
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>1/05/2018 12:49:47 AM +00:00</CreatedAt>
    <ClosedAt>1/05/2018 7:33:14 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9176</IssueLabelID>
    <Title>Remove source-build patches in cli</Title>
    <Description>In preview2 11 patches were added to source-build to enable cli to build in source-build.  These patches should be incorporated into the cli code and removed from the source-build repo.  The patches are here: https://github.com/dotnet/source-build/tree/dev/release/2.1/patches/cli






</Description>
    <Title_Description>Remove source-build patches in cli In preview2 11 patches were added to source-build to enable cli to build in source-build.  These patches should be incorporated into the cli code and removed from the source-build repo.  The patches are here: https://github.com/dotnet/source-build/tree/dev/release/2.1/patches/cli






</Title_Description>
    <Label>Blocking-RTM</Label>
    <CreatedAt>30/04/2018 7:38:03 PM +00:00</CreatedAt>
    <ClosedAt>4/05/2018 8:01:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9175</IssueLabelID>
    <Title>Update version to rtm</Title>
    <Description>
    </Description>
    <Title_Description>Update version to rtm </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>30/04/2018 7:01:09 PM +00:00</CreatedAt>
    <ClosedAt>30/04/2018 9:43:37 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9174</IssueLabelID>
    <Title>Correct dotnet list description</Title>
    <Description>After dotnet tool list moved out of dotnet list the description has not been updated.

fix https://github.com/dotnet/cli/issues/9169
</Description>
    <Title_Description>Correct dotnet list description After dotnet tool list moved out of dotnet list the description has not been updated.

fix https://github.com/dotnet/cli/issues/9169
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>30/04/2018 6:14:37 PM +00:00</CreatedAt>
    <ClosedAt>1/05/2018 5:24:41 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9173</IssueLabelID>
    <Title>help should show command description</Title>
    <Description>It should show what dotnet list does aka "List references of a .NET project.". Currently you need to see text from upper level commands description. 

dotnet list --help
Usage: dotnet list [options] &lt;PROJECT&gt; [command]
###NEED THE FOLLOWING:
###Description: List references of a .NET project.

Arguments:
  &lt;PROJECT&gt;   The project file to operate on. If a file is not specified the command will search the current directory for one.

Options:
  -h --help   Show help information.

Commands:
  reference   .NET Core Project-to-Project dependency viewer
</Description>
    <Title_Description>help should show command description It should show what dotnet list does aka "List references of a .NET project.". Currently you need to see text from upper level commands description. 

dotnet list --help
Usage: dotnet list [options] &lt;PROJECT&gt; [command]
###NEED THE FOLLOWING:
###Description: List references of a .NET project.

Arguments:
  &lt;PROJECT&gt;   The project file to operate on. If a file is not specified the command will search the current directory for one.

Options:
  -h --help   Show help information.

Commands:
  reference   .NET Core Project-to-Project dependency viewer
</Title_Description>
    <Label>Parser</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9171</IssueLabelID>
    <Title>Use NuGet autocomplete API for add-package suggestions</Title>
    <Description>Fixes https://github.com/dotnet/cli/issues/9128.

Since  now doesn't output anything I have opened an issue for that: https://github.com/NuGet/NuGetGallery/issues/5858.</Description>
    <Title_Description>Use NuGet autocomplete API for add-package suggestions Fixes https://github.com/dotnet/cli/issues/9128.

Since  now doesn't output anything I have opened an issue for that: https://github.com/NuGet/NuGetGallery/issues/5858.</Title_Description>
    <Label>community</Label>
    <CreatedAt>29/04/2018 8:46:54 PM +00:00</CreatedAt>
    <ClosedAt>1/05/2018 10:39:13 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9169</IssueLabelID>
    <Title>List command line help description is out of date.</Title>
    <Description>## Steps to reproduce

1. Run 






</Description>
    <Title_Description>List command line help description is out of date. ## Steps to reproduce

1. Run 






</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9167</IssueLabelID>
    <Title>Empty commit for new build.</Title>
    <Description>Commit to increase the build number of the CLI and avoid builds stomping on each other.
</Description>
    <Title_Description>Empty commit for new build. Commit to increase the build number of the CLI and avoid builds stomping on each other.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/04/2018 9:17:46 PM +00:00</CreatedAt>
    <ClosedAt>27/04/2018 9:22:10 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9165</IssueLabelID>
    <Title>Verbosity is used inconsistently in the CLI</Title>
    <Description>
-v is used inconsistently between CLI and bundled tools and is not consistent across CLI commands. 

This makes an inconstant user experience and confusing help. Since we anticipate global tool authors following these patterns it sets us up for an unnecessary fractured ecosystem.

## Current use

### CLI 

The CLI usage is:



Please weigh in if you see any more breaking change scenarios. </Description>
    <Title_Description>Verbosity is used inconsistently in the CLI 
-v is used inconsistently between CLI and bundled tools and is not consistent across CLI commands. 

This makes an inconstant user experience and confusing help. Since we anticipate global tool authors following these patterns it sets us up for an unnecessary fractured ecosystem.

## Current use

### CLI 

The CLI usage is:



Please weigh in if you see any more breaking change scenarios. </Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9164</IssueLabelID>
    <Title>Rename --source-feed to --add-source</Title>
    <Description>https://github.com/dotnet/cli/issues/9062</Description>
    <Title_Description>Rename --source-feed to --add-source https://github.com/dotnet/cli/issues/9062</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/04/2018 5:58:20 PM +00:00</CreatedAt>
    <ClosedAt>1/05/2018 5:21:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9163</IssueLabelID>
    <Title>Include aspnetcore in the linux-arm build</Title>
    <Description>Resolves #9162 

Include aspnetcore in linux-arm but not linux-arm64 or windows ARM builds.</Description>
    <Title_Description>Include aspnetcore in the linux-arm build, Resolves #9162 

Include aspnetcore in linux-arm but not linux-arm64 or windows ARM builds.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/04/2018 5:34:27 PM +00:00</CreatedAt>
    <ClosedAt>30/04/2018 9:47:08 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9162</IssueLabelID>
    <Title>dotnet-sdk for linux-arm is missing ASP.NET Core</Title>
    <Description>In RC1 we introduced a linux-arm build of ASP.NET Core but I failed to update the CLI to bundle this. The latest RC1 builds of the CLI are missing the aspnetcore shared framework altogether. If possible we should get this runtime bundled for RTM.




</Description>
    <Title_Description>dotnet-sdk for linux-arm is missing ASP.NET Core In RC1 we introduced a linux-arm build of ASP.NET Core but I failed to update the CLI to bundle this. The latest RC1 builds of the CLI are missing the aspnetcore shared framework altogether. If possible we should get this runtime bundled for RTM.




</Title_Description>
    <Label>Blocking-RTM</Label>
    <CreatedAt>27/04/2018 5:25:05 PM +00:00</CreatedAt>
    <ClosedAt>30/04/2018 10:26:48 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9161</IssueLabelID>
    <Title>LOC CHECKIN | dotnet/cli release/2.1.3xx | 20180427</Title>
    <Label>Approved to merge</Label>
    <CreatedAt>27/04/2018 8:32:53 AM +00:00</CreatedAt>
    <ClosedAt>1/05/2018 6:25:46 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9160</IssueLabelID>
    <Title>Fix Razor server shutdown on Windows.</Title>
    <Description>On Windows the Razor server correctly creates the pid file with
 was being thrown and was not
handled.

This change first opens the file with the appropriate share access and also
properly handles a failure to access or read the contents of the pid file.

Additionally an integration test was added to test that Razor server shutdown
works as expected.

Fixes #9158.
</Description>
    <Title_Description>Fix Razor server shutdown on Windows. On Windows the Razor server correctly creates the pid file with
 was being thrown and was not
handled.

This change first opens the file with the appropriate share access and also
properly handles a failure to access or read the contents of the pid file.

Additionally an integration test was added to test that Razor server shutdown
works as expected.

Fixes #9158.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/04/2018 7:00:06 AM +00:00</CreatedAt>
    <ClosedAt>30/04/2018 9:47:32 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9158</IssueLabelID>
    <Title>Build-server shutdown doesn't get credentials to delete Razor PID file</Title>
    <Description>## Steps to reproduce
Install latest RC CLI build
In powershell or cmd prompt run the following:
dotnet new razor
dotnet build
dotnet build-server shutdown

## Expected  behavior
The Razor build server is shutdown and the PID file is deleted

## Actual behavior
Exception is thrown:

PS C:\Users\v-masche\servertests\test3&gt; dotnet build-server shutdown
Shutting down MSBuild server...
Shutting down VB/C# compiler server...
System.IO.IOException: The process cannot access the file 'C:\Users\v-masche\.dotnet\pids\build\rzc-8784' because it is being used by another process.
   at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)
   at System.IO.FileStream.CreateFileOpenHandle(FileMode mode FileShare share FileOptions options)
   at System.IO.FileStream..ctor(String path FileMode mode FileAccess access FileShare share Int32 bufferSize FileOptions options)
   at System.IO.FileStream..ctor(String path FileMode mode FileAccess access FileShare share)
   at System.IO.File.OpenRead(String path)
   at Microsoft.Extensions.EnvironmentAbstractions.FileWrapper.OpenRead(String path)
   at Microsoft.DotNet.BuildServer.RazorPidFile.Read(FilePath path IFileSystem fileSystem)
   at Microsoft.DotNet.BuildServer.BuildServerProvider.EnumerateBuildServers(ServerEnumerationFlags flags)+MoveNext()
   at Microsoft.DotNet.Tools.BuildServer.Shutdown.BuildServerShutdownCommand.StartShutdown()
   at Microsoft.DotNet.Tools.BuildServer.Shutdown.BuildServerShutdownCommand.Execute()
   at Microsoft.DotNet.Cli.DotNetTopLevelCommandBase.RunCommand(String[] args)
   at Microsoft.DotNet.Tools.BuildServer.BuildServerCommand.Run(String[] args)
   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args ITelemetry telemetryClient)
   at Microsoft.DotNet.Cli.Program.Main(String[] args)

## Environment data
 output:
PS C:\Users\v-masche&gt; dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-rc1-008669
 Commit:    4db4d9b568

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-rc1-008669\

Host (useful for support):
  Version: 2.1.0-rc1-26425-06
  Commit:  b50a96ee38

.NET Core SDKs installed:
  2.1.300-rc1-008669 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-rc1-30676 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-rc1-30676 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-rc1-26425-06 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]






</Description>
    <Title_Description>Build-server shutdown doesn't get credentials to delete Razor PID file ## Steps to reproduce
Install latest RC CLI build
In powershell or cmd prompt run the following:
dotnet new razor
dotnet build
dotnet build-server shutdown

## Expected  behavior
The Razor build server is shutdown and the PID file is deleted

## Actual behavior
Exception is thrown:

PS C:\Users\v-masche\servertests\test3&gt; dotnet build-server shutdown
Shutting down MSBuild server...
Shutting down VB/C# compiler server...
System.IO.IOException: The process cannot access the file 'C:\Users\v-masche\.dotnet\pids\build\rzc-8784' because it is being used by another process.
   at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)
   at System.IO.FileStream.CreateFileOpenHandle(FileMode mode FileShare share FileOptions options)
   at System.IO.FileStream..ctor(String path FileMode mode FileAccess access FileShare share Int32 bufferSize FileOptions options)
   at System.IO.FileStream..ctor(String path FileMode mode FileAccess access FileShare share)
   at System.IO.File.OpenRead(String path)
   at Microsoft.Extensions.EnvironmentAbstractions.FileWrapper.OpenRead(String path)
   at Microsoft.DotNet.BuildServer.RazorPidFile.Read(FilePath path IFileSystem fileSystem)
   at Microsoft.DotNet.BuildServer.BuildServerProvider.EnumerateBuildServers(ServerEnumerationFlags flags)+MoveNext()
   at Microsoft.DotNet.Tools.BuildServer.Shutdown.BuildServerShutdownCommand.StartShutdown()
   at Microsoft.DotNet.Tools.BuildServer.Shutdown.BuildServerShutdownCommand.Execute()
   at Microsoft.DotNet.Cli.DotNetTopLevelCommandBase.RunCommand(String[] args)
   at Microsoft.DotNet.Tools.BuildServer.BuildServerCommand.Run(String[] args)
   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args ITelemetry telemetryClient)
   at Microsoft.DotNet.Cli.Program.Main(String[] args)

## Environment data
 output:
PS C:\Users\v-masche&gt; dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-rc1-008669
 Commit:    4db4d9b568

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-rc1-008669\

Host (useful for support):
  Version: 2.1.0-rc1-26425-06
  Commit:  b50a96ee38

.NET Core SDKs installed:
  2.1.300-rc1-008669 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-rc1-30676 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-rc1-30676 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-rc1-26425-06 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]






</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9155</IssueLabelID>
    <Title>Update SDK to 2.1.200-preview-62826-08</Title>
    <Description>
    </Description>
    <Title_Description>Update SDK to 2.1.200-preview-62826-08 </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>26/04/2018 9:13:03 PM +00:00</CreatedAt>
    <ClosedAt>26/04/2018 10:38:56 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9153</IssueLabelID>
    <Title>Fix MSBuild invocation to quote property option values.</Title>
    <Description>This PR ensures that any  being passed to MSBuild which will not parse a "Value"
containing a semicolon correctly.

Since it is safe to always quote the property value for this option this fix
simply ensures that the value is surrounded by quotes.

This fixes the issue for all commands that forward arguments to MSBuild.

Fixes #7791.</Description>
    <Title_Description>Fix MSBuild invocation to quote property option values. This PR ensures that any  being passed to MSBuild which will not parse a "Value"
containing a semicolon correctly.

Since it is safe to always quote the property value for this option this fix
simply ensures that the value is surrounded by quotes.

This fixes the issue for all commands that forward arguments to MSBuild.

Fixes #7791.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>26/04/2018 6:02:22 PM +00:00</CreatedAt>
    <ClosedAt>27/04/2018 11:52:03 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9150</IssueLabelID>
    <Title>Use cp -u on linux-musl</Title>
    <Description>This actually applies to all busybox based OS. Fixes https://github.com/dotnet/cli/issues/8738.
Also updated readme: alpine-&lt;ver&gt;-targz to musl-targz. Discussion: https://github.com/dotnet/cli/commit/65d5730631ef3cae8435be66b37b6c03b49d5dbf#r28750312

@weshaggard @johnbeisner 

Follow-up to: https://github.com/dotnet/cli/pull/9104</Description>
    <Title_Description>Use cp -u on linux-musl This actually applies to all busybox based OS. Fixes https://github.com/dotnet/cli/issues/8738.
Also updated readme: alpine-&lt;ver&gt;-targz to musl-targz. Discussion: https://github.com/dotnet/cli/commit/65d5730631ef3cae8435be66b37b6c03b49d5dbf#r28750312

@weshaggard @johnbeisner 

Follow-up to: https://github.com/dotnet/cli/pull/9104</Title_Description>
    <Label>Approved to merge</Label>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9147</IssueLabelID>
    <Title>MSBuild 15.7.177 (2xx)</Title>
    <Description>This is based on top of #9133 because that's the version of NuGet we have a compile-time reference to and which will ship with Preview 6. I think it caused an issue last time the assembly version changed.

Internal PR: https://devdiv.visualstudio.com/DevDiv/MSBuild/_git/VS/pullrequest/119072</Description>
    <Title_Description>MSBuild 15.7.177 (2xx) This is based on top of #9133 because that's the version of NuGet we have a compile-time reference to and which will ship with Preview 6. I think it caused an issue last time the assembly version changed.

Internal PR: https://devdiv.visualstudio.com/DevDiv/MSBuild/_git/VS/pullrequest/119072</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>26/04/2018 3:24:00 AM +00:00</CreatedAt>
    <ClosedAt>26/04/2018 8:21:31 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9146</IssueLabelID>
    <Title>Explicitly note whether the package version props is being overridden</Title>
    <Description>
    </Description>
    <Title_Description>Explicitly note whether the package version props is being overridden </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>26/04/2018 12:14:19 AM +00:00</CreatedAt>
    <ClosedAt>26/04/2018 3:33:06 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9142</IssueLabelID>
    <Title>2.1.300-preview2-008530: dotnet ef migrations remove causes NULL exception while Remove-Migration in PMC Works</Title>
    <Description>## Steps to reproduce
PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt; dotnet --version
2.1.300-preview2-008530

PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt; dotnet ef migrations add InsertSeedEddieLeaLookup
Migration -c ApplicationDbContext -o Data/Migrations/ApplicationDb  --startup-project ../Dpi.SchoolFinance.Idp
info: Microsoft.EntityFrameworkCore.Model[10607]
      Relationship from 'UserProfile' to 'ApplicationUser' not configured because there are multiple properties on one e
ntity type {'ApprovedBy' 'User'} that could be matched with the properties on the other entity type {'UserProfile'}.
info: Microsoft.EntityFrameworkCore.Model[10607]
      Relationship from 'ApplicationUser' to 'UserProfile' not configured because there are multiple properties on one e
ntity type {'UserProfile'} that could be matched with the properties on the other entity type {'ApprovedBy' 'User'}.
info: Microsoft.EntityFrameworkCore.Model[10601]
      The index {'UserId'} was not created as the properties are already covered by the index {'UserId' 'LoginProvider'
 'Name'}.
info: Microsoft.EntityFrameworkCore.Model[10601]
      The index {'UserId'} was not created as the properties are already covered by the index {'UserId' 'RoleId'}.
info: Microsoft.EntityFrameworkCore.Model[10607]
      Relationship from 'ApplicationUser' to 'UserProfile' not configured because there are multiple properties on one e
ntity type {'UserProfile'} that could be matched with the properties on the other entity type {'ApprovedBy' 'User'}.
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.0-preview1-28290 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFram
eworkCore.SqlServer' with options: None
Done. To undo this action use 'ef migrations remove'

PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt; dotnet ef migrations remove -c ApplicationDbConte
xt --startup-project ../Dpi.SchoolFinance.Idp
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.NullR
eferenceException: Object reference not set to an instance of an object.
   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.RemoveMigration..ctor(OperationExecutor executor Object re
sultHandler IDictionary args)
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target Object[] arguments Signature sig Boolean constructor Boo
lean wrapExceptions)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr Binder binder Object[] parameters Cultu
reInfo culture)
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr Binder binder Object[] args CultureInfo culture
 Object[] activationAttributes)
   at Microsoft.EntityFrameworkCore.Tools.ReflectionOperationExecutor.Execute(String operationName Object resultHandler
 IDictionary arguments)
   at System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid4[T0T1T2T3](CallSite site T0 arg0 T1 arg1 T2 arg2 T3 arg
3)
   at Microsoft.EntityFrameworkCore.Tools.OperationExecutorBase.InvokeOperationImpl(String operationName IDictionary ar
guments)
   at Microsoft.EntityFrameworkCore.Tools.OperationExecutorBase.RemoveMigration(String contextType Boolean force)
   at Microsoft.EntityFrameworkCore.Tools.Commands.MigrationsRemoveCommand.Execute()
   at Microsoft.DotNet.Cli.CommandLine.CommandLineApplication.Execute(String[] args)
   at Microsoft.EntityFrameworkCore.Tools.Program.Main(String[] args)
Exception has been thrown by the target of an invocation.
PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt;

## Expected  behavior
Not to throw an NULL exception when executing 
dotnet ef migrations remove -c ApplicationDbContext --startup-project ../Dpi.SchoolFinance.Idp


## Actual behavior
the following CLI  command; dotnet ef migrations remove -c ApplicationDbContext --startup-project ../Dpi.SchoolFinance.Idp throws an exception.  

The PMC command works
Update-Database -Context ApplicationDbContext


## Environment data
 output:
PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt; dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview2-008530
 Commit:    822ae6d43a

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview2-008530\

Host (useful for support):
  Version: 2.1.0-preview2-26406-04
  Commit:  6833f3026b

.NET Core SDKs installed:
  1.0.3 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  1.1.0-preview1-005051 [C:\Program Files\dotnet\sdk]
  1.1.0-preview1-005077 [C:\Program Files\dotnet\sdk]
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.0.3 [C:\Program Files\dotnet\sdk]
  2.1.2 [C:\Program Files\dotnet\sdk]
  2.1.3 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007474 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007517 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007576 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300-preview2-008530 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Description>
    <Title_Description>2.1.300-preview2-008530: dotnet ef migrations remove causes NULL exception while Remove-Migration in PMC Works ## Steps to reproduce
PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt; dotnet --version
2.1.300-preview2-008530

PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt; dotnet ef migrations add InsertSeedEddieLeaLookup
Migration -c ApplicationDbContext -o Data/Migrations/ApplicationDb  --startup-project ../Dpi.SchoolFinance.Idp
info: Microsoft.EntityFrameworkCore.Model[10607]
      Relationship from 'UserProfile' to 'ApplicationUser' not configured because there are multiple properties on one e
ntity type {'ApprovedBy' 'User'} that could be matched with the properties on the other entity type {'UserProfile'}.
info: Microsoft.EntityFrameworkCore.Model[10607]
      Relationship from 'ApplicationUser' to 'UserProfile' not configured because there are multiple properties on one e
ntity type {'UserProfile'} that could be matched with the properties on the other entity type {'ApprovedBy' 'User'}.
info: Microsoft.EntityFrameworkCore.Model[10601]
      The index {'UserId'} was not created as the properties are already covered by the index {'UserId' 'LoginProvider'
 'Name'}.
info: Microsoft.EntityFrameworkCore.Model[10601]
      The index {'UserId'} was not created as the properties are already covered by the index {'UserId' 'RoleId'}.
info: Microsoft.EntityFrameworkCore.Model[10607]
      Relationship from 'ApplicationUser' to 'UserProfile' not configured because there are multiple properties on one e
ntity type {'UserProfile'} that could be matched with the properties on the other entity type {'ApprovedBy' 'User'}.
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.0-preview1-28290 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFram
eworkCore.SqlServer' with options: None
Done. To undo this action use 'ef migrations remove'

PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt; dotnet ef migrations remove -c ApplicationDbConte
xt --startup-project ../Dpi.SchoolFinance.Idp
System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.NullR
eferenceException: Object reference not set to an instance of an object.
   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.RemoveMigration..ctor(OperationExecutor executor Object re
sultHandler IDictionary args)
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target Object[] arguments Signature sig Boolean constructor Boo
lean wrapExceptions)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr Binder binder Object[] parameters Cultu
reInfo culture)
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr Binder binder Object[] args CultureInfo culture
 Object[] activationAttributes)
   at Microsoft.EntityFrameworkCore.Tools.ReflectionOperationExecutor.Execute(String operationName Object resultHandler
 IDictionary arguments)
   at System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid4[T0T1T2T3](CallSite site T0 arg0 T1 arg1 T2 arg2 T3 arg
3)
   at Microsoft.EntityFrameworkCore.Tools.OperationExecutorBase.InvokeOperationImpl(String operationName IDictionary ar
guments)
   at Microsoft.EntityFrameworkCore.Tools.OperationExecutorBase.RemoveMigration(String contextType Boolean force)
   at Microsoft.EntityFrameworkCore.Tools.Commands.MigrationsRemoveCommand.Execute()
   at Microsoft.DotNet.Cli.CommandLine.CommandLineApplication.Execute(String[] args)
   at Microsoft.EntityFrameworkCore.Tools.Program.Main(String[] args)
Exception has been thrown by the target of an invocation.
PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt;

## Expected  behavior
Not to throw an NULL exception when executing 
dotnet ef migrations remove -c ApplicationDbContext --startup-project ../Dpi.SchoolFinance.Idp


## Actual behavior
the following CLI  command; dotnet ef migrations remove -c ApplicationDbContext --startup-project ../Dpi.SchoolFinance.Idp throws an exception.  

The PMC command works
Update-Database -Context ApplicationDbContext


## Environment data
 output:
PS C:\Users\mgebhard\Source\Repos\SchoolFinance\Dpi.SchoolFinance.Dal&gt; dotnet --info
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview2-008530
 Commit:    822ae6d43a

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview2-008530\

Host (useful for support):
  Version: 2.1.0-preview2-26406-04
  Commit:  6833f3026b

.NET Core SDKs installed:
  1.0.3 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  1.1.0-preview1-005051 [C:\Program Files\dotnet\sdk]
  1.1.0-preview1-005077 [C:\Program Files\dotnet\sdk]
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.0.3 [C:\Program Files\dotnet\sdk]
  2.1.2 [C:\Program Files\dotnet\sdk]
  2.1.3 [C:\Program Files\dotnet\sdk]
  2.1.4 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.101 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.104 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007474 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007517 [C:\Program Files\dotnet\sdk]
  2.1.200-preview-007576 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300-preview2-008530 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Title_Description>
    <Label>external</Label>
    <CreatedAt>25/04/2018 6:14:55 PM +00:00</CreatedAt>
    <ClosedAt>25/04/2018 7:45:55 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9141</IssueLabelID>
    <Title>MSBuild 15.7.172 (3xx)</Title>
    <Description>Keeping up to date with prodcon.

This isn't critical but after RTM we'll need to make a commit like this to prep for servicing. See Microsoft/msbuild#3228 for details.</Description>
    <Title_Description>MSBuild 15.7.172 (3xx) Keeping up to date with prodcon.

This isn't critical but after RTM we'll need to make a commit like this to prep for servicing. See Microsoft/msbuild#3228 for details.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>25/04/2018 4:29:07 PM +00:00</CreatedAt>
    <ClosedAt>26/04/2018 3:26:24 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9137</IssueLabelID>
    <Title>Fix --source-feed option for tool install and update commands.</Title>
    <Description>Commit 9cc2b7c regressed the  option provided
the option specified was not an absolute URI.

Fixes #9132.</Description>
    <Title_Description>Fix --source-feed option for tool install and update commands. Commit 9cc2b7c regressed the  option provided
the option specified was not an absolute URI.

Fixes #9132.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>25/04/2018 2:07:46 AM +00:00</CreatedAt>
    <ClosedAt>30/04/2018 9:46:51 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9135</IssueLabelID>
    <Title>Building a Razor Class Library project generates refs directory in the build output</Title>
    <Description>## Steps to reproduce
- dotnet new razorclasslib
- dotnet build
- open folder 

cc @nguerrera 



</Description>
    <Title_Description>Building a Razor Class Library project generates refs directory in the build output ## Steps to reproduce
- dotnet new razorclasslib
- dotnet build
- open folder 

cc @nguerrera 



</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>24/04/2018 11:37:12 PM +00:00</CreatedAt>
    <ClosedAt>25/04/2018 9:55:46 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9134</IssueLabelID>
    <Title>Update Roslyn to 2.8.0-beta4-62824-10</Title>
    <Description>@jaredpar @barrytang @MattGertz </Description>
    <Title_Description>Update Roslyn to 2.8.0-beta4-62824-10 @jaredpar @barrytang @MattGertz </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>24/04/2018 11:00:57 PM +00:00</CreatedAt>
    <ClosedAt>24/04/2018 11:57:12 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9133</IssueLabelID>
    <Title>Insert NuGet Build 4.7.0-rtm.5148 into cli</Title>
    <Description>Insert NuGet Build 4.7.0-rtm.5148 into cli release/2.1.2xx branch</Description>
    <Title_Description>Insert NuGet Build 4.7.0-rtm.5148 into cli Insert NuGet Build 4.7.0-rtm.5148 into cli release/2.1.2xx branch</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>24/04/2018 9:50:14 PM +00:00</CreatedAt>
    <ClosedAt>26/04/2018 8:21:05 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9132</IssueLabelID>
    <Title>dotnet tool install --source-feed isn't relative</Title>
    <Description>## Steps to reproduce



Fully-qualified path works. I expect to be able to use relative paths.

## Environment data
dotnet --version
2.1.300-preview2-008530






</Description>
    <Title_Description>dotnet tool install --source-feed isn't relative ## Steps to reproduce



Fully-qualified path works. I expect to be able to use relative paths.

## Environment data
dotnet --version
2.1.300-preview2-008530






</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9130</IssueLabelID>
    <Title>Fix linux musl; CLI:release/2.1.3xx</Title>
    <Description>Currently; the Linux-musl CLI build is pulling in Alpine3.6 assets: 
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1624156&amp;_a=summary

Downloading 'https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180423-06/cli-inputs/assets/aspnetcore/Runtime/2.1.0-rc1-final/aspnetcore-runtime-internal-2.1.0-rc1-final-alpine.3.6-x64.tar.gz' to '/opt/code/bin/2/linux-musl-x64/packages/aspnetcore-runtime-internal-2.1.0-rc1-final-alpine.3.6-x64.tar.gz'
Downloading 'https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180423-06/cli-inputs/assets/Runtime/2.1.0-rc1/dotnet-runtime-2.1.0-rc1-alpine.3.6-x64.tar.gz' to '/opt/code/bin/2/linux-musl-x64/intermediate/coreSetupDownload/2.1.0-rc1/combinedSharedHostAndFrameworkArchive.tar.gz'

The Linux-musl CLI build should download 'Linux-musl' branded assets.</Description>
    <Title_Description>Fix linux musl; CLI:release/2.1.3xx Currently; the Linux-musl CLI build is pulling in Alpine3.6 assets: 
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1624156&amp;_a=summary

Downloading 'https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180423-06/cli-inputs/assets/aspnetcore/Runtime/2.1.0-rc1-final/aspnetcore-runtime-internal-2.1.0-rc1-final-alpine.3.6-x64.tar.gz' to '/opt/code/bin/2/linux-musl-x64/packages/aspnetcore-runtime-internal-2.1.0-rc1-final-alpine.3.6-x64.tar.gz'
Downloading 'https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180423-06/cli-inputs/assets/Runtime/2.1.0-rc1/dotnet-runtime-2.1.0-rc1-alpine.3.6-x64.tar.gz' to '/opt/code/bin/2/linux-musl-x64/intermediate/coreSetupDownload/2.1.0-rc1/combinedSharedHostAndFrameworkArchive.tar.gz'

The Linux-musl CLI build should download 'Linux-musl' branded assets.</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9129</IssueLabelID>
    <Title>Publishing ASP.NET Core webapplication from VS to Azure fails when the web app references a class library</Title>
    <Description>## Steps to reproduce
- Create a Razor Pages or MVC web application in Visual Studio
- Create a regular netstandard2.0 Class Library project
- Reference the Class Library project from the web application
- Publish the web application to Azure from VS
- Configure the deployment mode as Self-Contained Target Runtime win-x64; File Publish Options-&gt; Check the Remove additional files at destination box


## Expected  behavior
Publish to Azure succeeds

## Actual behavior
Web Publish Activity:



cc @kichalla @pranavkm 

</Description>
    <Title_Description>Publishing ASP.NET Core webapplication from VS to Azure fails when the web app references a class library ## Steps to reproduce
- Create a Razor Pages or MVC web application in Visual Studio
- Create a regular netstandard2.0 Class Library project
- Reference the Class Library project from the web application
- Publish the web application to Azure from VS
- Configure the deployment mode as Self-Contained Target Runtime win-x64; File Publish Options-&gt; Check the Remove additional files at destination box


## Expected  behavior
Publish to Azure succeeds

## Actual behavior
Web Publish Activity:



cc @kichalla @pranavkm 

</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>24/04/2018 8:04:43 PM +00:00</CreatedAt>
    <ClosedAt>26/04/2018 11:37:48 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9127</IssueLabelID>
    <Title>In a command window 'dotnet tool list --global' does not list any global tools</Title>
    <Description>## Steps to reproduce
1. Install CLI for .NET Core 2.1 (version 2.1.300-rc1-008662)
2. Open command window and run


## Expected  behavior
List all the global tools

## Actual behavior
No global tools are listed

![image](https://user-images.githubusercontent.com/8246794/39190822-445c13ea-478a-11e8-8b4d-4e6a72c517d7.png)





</Description>
    <Title_Description>In a command window, 'dotnet tool list --global' does not list any global tools ## Steps to reproduce
1. Install CLI for .NET Core 2.1 (version 2.1.300-rc1-008662)
2. Open command window and run


## Expected  behavior
List all the global tools

## Actual behavior
No global tools are listed

![image](https://user-images.githubusercontent.com/8246794/39190822-445c13ea-478a-11e8-8b4d-4e6a72c517d7.png)





</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9126</IssueLabelID>
    <Title>How to include a runtimeconfig.json?</Title>
    <Description>I made a new .NET Core app in Visual Studio 2017 15.6 and added a "runtimeconfig.json" in my root directory next to the csproj and it doesn't work.

Whenever the project is output or published some random runtimeconfig.json is stuffed there.

Here is my file contents. And the true filename is "runtimeconfig.json". I've tried myapp.runtimeconfig.json and other variations but nothing works.

</Description>
    <Title_Description>How to include a runtimeconfig.json? I made a new .NET Core app in Visual Studio 2017 15.6 and added a "runtimeconfig.json" in my root directory next to the csproj and it doesn't work.

Whenever the project is output or published some random runtimeconfig.json is stuffed there.

Here is my file contents. And the true filename is "runtimeconfig.json". I've tried myapp.runtimeconfig.json and other variations but nothing works.

</Title_Description>
    <Label>question</Label>
    <CreatedAt>24/04/2018 10:40:30 AM +00:00</CreatedAt>
    <ClosedAt>24/04/2018 5:49:07 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9125</IssueLabelID>
    <Title>Update clicommandlineparser climigrate coresetup coresetup fsharp roslyn sdk templating templating templating websdk to alpha-62823-01 alpha-62823-01 rc1-26423-06 rc1-26423-06 rtm-180422-0 beta4-62827-02 rc1-62823-01 beta3-20180422-1618305 beta3-20180422-1618305 beta3-20180422-1618305 rc1-20180422-1618307 respectively (release/2.1.3xx)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update clicommandlineparser, climigrate, coresetup, coresetup, fsharp, roslyn, sdk, templating, templating, templating, websdk to alpha-62823-01, alpha-62823-01, rc1-26423-06, rc1-26423-06, rtm-180422-0, beta4-62827-02, rc1-62823-01, beta3-20180422-1618305, beta3-20180422-1618305, beta3-20180422-1618305, rc1-20180422-1618307, respectively (release/2.1.3xx) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>24/04/2018 4:56:08 AM +00:00</CreatedAt>
    <ClosedAt>1/05/2018 10:31:57 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9124</IssueLabelID>
    <Title>do not set BaseIntermediateOutputPath in temp project of dotnet install</Title>
    <Description>After https://github.com/NuGet/NuGet.Client/pull/2131 and https://github.com/Microsoft/msbuild/pull/3059

MSBuildProjectExtensionsPath is the more accurate property to set to **only** redirect nuget's output

</Description>
    <Title_Description>do not set BaseIntermediateOutputPath in temp project of dotnet install After https://github.com/NuGet/NuGet.Client/pull/2131 and https://github.com/Microsoft/msbuild/pull/3059

MSBuildProjectExtensionsPath is the more accurate property to set to **only** redirect nuget's output

</Title_Description>
    <Label>In PR</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9123</IssueLabelID>
    <Title>Mark both CLI NuPkgs as "NonShipping=true"</Title>
    <Description>Both 'Microsoft.DotNet.Cli.Utils.[version].nupkg' and 'Microsoft.DotNet.MSBuildSdkResolver.[version].nupkg' should not be published to NuGet.org; mark both NuPkgs as "NonShipping=true" Therefore these NuPkgs will not be signed.
</Description>
    <Title_Description>Mark both CLI NuPkgs as "NonShipping=true" Both 'Microsoft.DotNet.Cli.Utils.[version].nupkg' and 'Microsoft.DotNet.MSBuildSdkResolver.[version].nupkg' should not be published to NuGet.org; mark both NuPkgs as "NonShipping=true" Therefore these NuPkgs will not be signed.
</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9122</IssueLabelID>
    <Title>do not set BaseIntermediateOutputPath in temp project of dotnet install to 2.1.4xx</Title>
    <Description>Should use MsBuildProjectExtensionsPath instead.

- Change the property passin by project file instead of command line. It is more reliable passing path in xml and also the timing of MsBuildProjectExtensionsPath is controlled. (Before loading SDK)
- Change mock fake project to use “;” instead since c:\path contains “:”.</Description>
    <Title_Description>do not set BaseIntermediateOutputPath in temp project of dotnet install to 2.1.4xx Should use MsBuildProjectExtensionsPath instead.

- Change the property passin by project file instead of command line. It is more reliable passing path in xml and also the timing of MsBuildProjectExtensionsPath is controlled. (Before loading SDK)
- Change mock fake project to use “;” instead since c:\path contains “:”.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>23/04/2018 9:47:15 PM +00:00</CreatedAt>
    <ClosedAt>24/04/2018 5:19:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9121</IssueLabelID>
    <Title>dotnet store fails with NRE when referencing Microsoft.AspNetCore.App</Title>
    <Description>## Steps to reproduce
1. 







</Description>
    <Title_Description>dotnet store fails with NRE when referencing Microsoft.AspNetCore.App ## Steps to reproduce
1. 







</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9120</IssueLabelID>
    <Title>Need better warning/error message when ASP.NET Core 1.1 project is opened using CLI for .NET Core 2.1</Title>
    <Description>## Steps to reproduce
With VS 15.7 + CLI for .NET Core 2.1 (CLI 2.1.300 or higher) installed

1. Open ASP.NET Core 1.1 project that was created using a previous version of the CLI
2. View Error list 

## Actual behavior
You see the warnings below
![image](https://user-images.githubusercontent.com/8246794/39138907-a150cbaa-46d5-11e8-8300-340e4835f48b.png)

For the ASP.NET Core 1.1 / 1.0 cases the warning shows the incorrect message. Removing the tool from csproj as suggested by the message will not put you in a working state. 

## Expected  behavior
- Warning/Error should not say that the tools "can be removed from this project"
- It should point to an fwlink where we explicitly ask the user to drop a global.json and pin their CLI version assuming other places such as the build server will also have that pinned version of the CLI installed






</Description>
    <Title_Description>Need better warning/error message when ASP.NET Core 1.1 project is opened using CLI for .NET Core 2.1 ## Steps to reproduce
With VS 15.7 + CLI for .NET Core 2.1 (CLI 2.1.300 or higher) installed

1. Open ASP.NET Core 1.1 project that was created using a previous version of the CLI
2. View Error list 

## Actual behavior
You see the warnings below
![image](https://user-images.githubusercontent.com/8246794/39138907-a150cbaa-46d5-11e8-8300-340e4835f48b.png)

For the ASP.NET Core 1.1 / 1.0 cases the warning shows the incorrect message. Removing the tool from csproj as suggested by the message will not put you in a working state. 

## Expected  behavior
- Warning/Error should not say that the tools "can be removed from this project"
- It should point to an fwlink where we explicitly ask the user to drop a global.json and pin their CLI version assuming other places such as the build server will also have that pinned version of the CLI installed






</Title_Description>
    <Label>Blocking-RTM</Label>
    <CreatedAt>23/04/2018 4:10:49 PM +00:00</CreatedAt>
    <ClosedAt>26/04/2018 11:37:18 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9119</IssueLabelID>
    <Title>Provide fwlink in the warning about obsolete DotNetCliToolReference that points to good documentation about global tools</Title>
    <Description>## Steps to reproduce
With VS 15.7 + CLI for .NET Core 2.1 (CLI 2.1.300 or higher) installed
1. Open ASP.NET Core 2.0 project that was created using a previous version of the CLI
2. View Error list or build

## Actual behavior
You see the warnings below

![image](https://user-images.githubusercontent.com/8246794/39138249-63e8c20a-46d4-11e8-8513-74f4350a3f96.png)

## Expected  behavior
Warning should include an fwlink that can be clicked and take you to good documentation about why the tools are obsolete and what is the mitigation









</Description>
    <Title_Description>Provide fwlink in the warning about obsolete DotNetCliToolReference that points to good documentation about global tools ## Steps to reproduce
With VS 15.7 + CLI for .NET Core 2.1 (CLI 2.1.300 or higher) installed
1. Open ASP.NET Core 2.0 project that was created using a previous version of the CLI
2. View Error list or build

## Actual behavior
You see the warnings below

![image](https://user-images.githubusercontent.com/8246794/39138249-63e8c20a-46d4-11e8-8513-74f4350a3f96.png)

## Expected  behavior
Warning should include an fwlink that can be clicked and take you to good documentation about why the tools are obsolete and what is the mitigation









</Title_Description>
    <Label>Blocking-RTM</Label>
    <CreatedAt>23/04/2018 3:58:44 PM +00:00</CreatedAt>
    <ClosedAt>4/05/2018 8:00:59 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9117</IssueLabelID>
    <Title>Unblock build</Title>
    <Description>Test build was causing restore and build in same evaluation which was
always incorrect but with a recent change to sdk it will always fail
outright instead of sometimes getting lucky enough for it not to matter.
This was therefore a breaking change and we will discuss separately how
to handle it. This takes the bad pattern out of the test build to unblock
the build.</Description>
    <Title_Description>Unblock build Test build was causing restore and build in same evaluation which was
always incorrect but with a recent change to sdk it will always fail
outright instead of sometimes getting lucky enough for it not to matter.
This was therefore a breaking change and we will discuss separately how
to handle it. This takes the bad pattern out of the test build to unblock
the build.</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>20/04/2018 11:45:03 PM +00:00</CreatedAt>
    <ClosedAt>21/04/2018 12:30:52 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9116</IssueLabelID>
    <Title>[release/2.1.3xx] Replace alpine with linux-musl builds</Title>
    <Description>Port of change https://github.com/dotnet/cli/pull/9104

cc @eerhardt @livarcocc @johnbeisner </Description>
    <Title_Description>[release/2.1.3xx] Replace alpine with linux-musl builds Port of change https://github.com/dotnet/cli/pull/9104

cc @eerhardt @livarcocc @johnbeisner </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>20/04/2018 8:24:32 PM +00:00</CreatedAt>
    <ClosedAt>20/04/2018 10:14:39 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9115</IssueLabelID>
    <Title>Insert NuGet Build 4.7.0-rtm.5122 into cli</Title>
    <Description>Insert NuGet Build 4.7.0-rtm.5122 into cli release/2.1.2xx branch</Description>
    <Title_Description>Insert NuGet Build 4.7.0-rtm.5122 into cli Insert NuGet Build 4.7.0-rtm.5122 into cli release/2.1.2xx branch</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>20/04/2018 8:09:20 PM +00:00</CreatedAt>
    <ClosedAt>20/04/2018 11:27:20 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9111</IssueLabelID>
    <Title>Tab completion should not provide internal-reportinstallsuccess as an option</Title>
    <Description>## Steps to reproduce

0. Enable bash completion for .NET Core as described on https://github.com/dotnet/cli/blob/master/Documentation/general/tab-completion.md. I just  output:

    .NET Command Line Tools (2.1.101)
    
    Product Information:
     Version:            2.1.101
     Commit SHA-1 hash:  6c22303bf0
    
    Runtime Environment:
     OS Name:     fedora
     OS Version:  28
     OS Platform: Linux
     RID:         fedora.28-x64
     Base Path:   /usr/lib64/dotnet/sdk/2.1.101/
    
    Microsoft .NET Core Shared Framework Host
    
      Version  : 2.0.6
      Build    : N/A


</Description>
    <Title_Description>Tab completion should not provide internal-reportinstallsuccess as an option ## Steps to reproduce

0. Enable bash completion for .NET Core as described on https://github.com/dotnet/cli/blob/master/Documentation/general/tab-completion.md. I just  output:

    .NET Command Line Tools (2.1.101)
    
    Product Information:
     Version:            2.1.101
     Commit SHA-1 hash:  6c22303bf0
    
    Runtime Environment:
     OS Name:     fedora
     OS Version:  28
     OS Platform: Linux
     RID:         fedora.28-x64
     Base Path:   /usr/lib64/dotnet/sdk/2.1.101/
    
    Microsoft .NET Core Shared Framework Host
    
      Version  : 2.0.6
      Build    : N/A


</Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9109</IssueLabelID>
    <Title>dotnet 2.1-preview 2 test unable to load dependent project libraries</Title>
    <Description>_From @livarcocc on April 19 2018 21:8_

_From @lunim on April 19 2018 6:29_

Hello

I have a simple xunit test project that references a single .net core 2.1 app.  Both define  and includes the proper myget source in order to restore it. 

I can build the app without issue but when I attempt to run the tests I get the error: 
&gt; Could not load file or assembly 'System.CommandLine Version=0.1.0.0 Culture=neutral PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.

If I add the PackageReference to the test .csproj the tests are able to run correctly.  The tests work without issue with .Net Core 2.0.

I am running the tests both locally and in the docker container 'microsoft/dotnet:2.1-sdk-alpine' both have the same issue.

_Copied from original issue: dotnet/core#1462_

_Copied from original issue: Microsoft/vstest#1555_</Description>
    <Title_Description>dotnet 2.1-preview 2 test unable to load dependent project libraries _From @livarcocc on April 19 2018 21:8_

_From @lunim on April 19 2018 6:29_

Hello

I have a simple xunit test project that references a single .net core 2.1 app.  Both define  and includes the proper myget source in order to restore it. 

I can build the app without issue but when I attempt to run the tests I get the error: 
&gt; Could not load file or assembly 'System.CommandLine Version=0.1.0.0 Culture=neutral PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.

If I add the PackageReference to the test .csproj the tests are able to run correctly.  The tests work without issue with .Net Core 2.0.

I am running the tests both locally and in the docker container 'microsoft/dotnet:2.1-sdk-alpine' both have the same issue.

_Copied from original issue: dotnet/core#1462_

_Copied from original issue: Microsoft/vstest#1555_</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9104</IssueLabelID>
    <Title>Replace alpine with linux-musl builds</Title>
    <Description>We still build linux-musl on the alpine OS but we no longer
produce a alpine installer/tar file instead we just have the
linux-musl version.

cc @eerhardt @johnbeisner @livarcocc @janvorli 

This is pretty close to a find-release of alpine3.6 with linux-musl. I suspect we also need to make changes to the official build definitions which I will do once this merges. </Description>
    <Title_Description>Replace alpine with linux-musl builds We still build linux-musl on the alpine OS but we no longer
produce a alpine installer/tar file instead we just have the
linux-musl version.

cc @eerhardt @johnbeisner @livarcocc @janvorli 

This is pretty close to a find-release of alpine3.6 with linux-musl. I suspect we also need to make changes to the official build definitions which I will do once this merges. </Title_Description>
    <Label>Approved to merge</Label>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9104</IssueLabelID>
    <Title>Replace alpine with linux-musl builds</Title>
    <Description>We still build linux-musl on the alpine OS but we no longer
produce a alpine installer/tar file instead we just have the
linux-musl version.

cc @eerhardt @johnbeisner @livarcocc @janvorli 

This is pretty close to a find-release of alpine3.6 with linux-musl. I suspect we also need to make changes to the official build definitions which I will do once this merges. </Description>
    <Title_Description>Replace alpine with linux-musl builds We still build linux-musl on the alpine OS but we no longer
produce a alpine installer/tar file instead we just have the
linux-musl version.

cc @eerhardt @johnbeisner @livarcocc @janvorli 

This is pretty close to a find-release of alpine3.6 with linux-musl. I suspect we also need to make changes to the official build definitions which I will do once this merges. </Title_Description>
    <Label>Approved to merge</Label>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9103</IssueLabelID>
    <Title>Remove -f short hand in dotnet tool install</Title>
    <Description> can be used for future commands

https://github.com/dotnet/cli/issues/9073#issuecomment-382138783
https://github.com/dotnet/cli/issues/9064#issuecomment-382240361 
</Description>
    <Title_Description>Remove -f short hand in dotnet tool install  can be used for future commands

https://github.com/dotnet/cli/issues/9073#issuecomment-382138783
https://github.com/dotnet/cli/issues/9064#issuecomment-382240361 
</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9102</IssueLabelID>
    <Title>Remove -f short hand in dotnet tool install</Title>
    <Description>fix https://github.com/dotnet/cli/issues/9103</Description>
    <Title_Description>Remove -f short hand in dotnet tool install fix https://github.com/dotnet/cli/issues/9103</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>19/04/2018 9:27:42 PM +00:00</CreatedAt>
    <ClosedAt>23/04/2018 8:23:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9101</IssueLabelID>
    <Title>Updating CLI branding to RC1</Title>
    <Description>
    </Description>
    <Title_Description>Updating CLI branding to RC1 </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>19/04/2018 7:47:09 PM +00:00</CreatedAt>
    <ClosedAt>19/04/2018 10:29:12 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9100</IssueLabelID>
    <Title>Update clicommandlineparser climigrate coresetup coresetup coresetup fsharp msbuild nugetclient roslyn sdk templating templating templating websdk to alpha-62819-01 alpha-62819-01 rc1-26419-02 rc1-26419-02 rc1-26419-02 rtm-180418-0 preview-000169 preview1.5116 dev-62819-05 preview3-62819-01 beta3-20180418-1607235 beta3-20180418-1607235 beta3-20180418-1607235 rc1-20180418-1607241 respectively (release/2.1.3xx)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update clicommandlineparser, climigrate, coresetup, coresetup, coresetup, fsharp, msbuild, nugetclient, roslyn, sdk, templating, templating, templating, websdk to alpha-62819-01, alpha-62819-01, rc1-26419-02, rc1-26419-02, rc1-26419-02, rtm-180418-0, preview-000169, preview1.5116, dev-62819-05, preview3-62819-01, beta3-20180418-1607235, beta3-20180418-1607235, beta3-20180418-1607235, rc1-20180418-1607241, respectively (release/2.1.3xx) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>19/04/2018 7:40:55 PM +00:00</CreatedAt>
    <ClosedAt>20/04/2018 6:36:33 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9099</IssueLabelID>
    <Title>Implement Razor server discovery by pid file.</Title>
    <Description>Previously Razor server discovery for the ) which the command can now enumerate to discover and
shutdown the running Razor servers.

This commit changes the Razor server discovery to use the pid files and removes
the requirement that users need to run the command in specific directories to
work.

Fixes #9084.
</Description>
    <Title_Description>Implement Razor server discovery by pid file. Previously Razor server discovery for the ) which the command can now enumerate to discover and
shutdown the running Razor servers.

This commit changes the Razor server discovery to use the pid files and removes
the requirement that users need to run the command in specific directories to
work.

Fixes #9084.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>19/04/2018 7:19:08 PM +00:00</CreatedAt>
    <ClosedAt>20/04/2018 7:15:53 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9097</IssueLabelID>
    <Title>Add bundled aspnetcore runtime framework versions</Title>
    <Description>- Add integration test for implicit Microsoft.AspNetCore.App versions

Addresses https://github.com/aspnet/Universe/issues/967. I'm adding the bundled AspNetCore runtime frameworks versions required by the Web SDK. I have run these tests locally but the PR's tests won't pass until we have a build with the Web SDK updates to ingest. We can review the PR but since it's ask mode please wait for ship-room approval before merging. </Description>
    <Title_Description>Add bundled aspnetcore runtime framework versions - Add integration test for implicit Microsoft.AspNetCore.App versions

Addresses https://github.com/aspnet/Universe/issues/967. I'm adding the bundled AspNetCore runtime frameworks versions required by the Web SDK. I have run these tests locally but the PR's tests won't pass until we have a build with the Web SDK updates to ingest. We can review the PR but since it's ask mode please wait for ship-room approval before merging. </Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>dsplaisted</Assignee>
    <CreatedAt>19/04/2018 4:54:15 AM +00:00</CreatedAt>
    <ClosedAt>23/04/2018 8:29:30 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9096</IssueLabelID>
    <Title>Fix .deb and .rpm dependency on the aspnetcore-store package </Title>
    <Description>Fixes https://github.com/dotnet/cli/issues/9095

In cleaning up some targets for 2.1.105 I missed that the &lt;AspNetCoreRuntimePackageName&gt; property needed to be set in both Installer.RPM.targets _and_ Installer.DEB.targets.

Changes:
 - add tests that would have caught this error in the first place
 - fix the targets to include correctly a dependency on aspnetcore-store for 2.1.1xx builds</Description>
    <Title_Description>Fix .deb and .rpm dependency on the aspnetcore-store package  Fixes https://github.com/dotnet/cli/issues/9095

In cleaning up some targets for 2.1.105 I missed that the &lt;AspNetCoreRuntimePackageName&gt; property needed to be set in both Installer.RPM.targets _and_ Installer.DEB.targets.

Changes:
 - add tests that would have caught this error in the first place
 - fix the targets to include correctly a dependency on aspnetcore-store for 2.1.1xx builds</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>19/04/2018 4:45:06 AM +00:00</CreatedAt>
    <ClosedAt>19/04/2018 11:46:42 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9095</IssueLabelID>
    <Title>2.1.105 SDK package isn't installing aspnetcore-store packages</Title>
    <Description>I installed the dotnet-sdk-2.1.105 package on an Ubuntu 16.04 machine and then removed the 2.1.104 package and I noticed that the aspnetcore-store packages were eligible for auto-removal.

It looks like the 2.1.105 package doesn't have the correct dependency to bring in the runtime store packages like previous SDKs do.

Looking at the tarball version of the 2.1.105 SDK I see that the store files are still in there so I suspect this change isn't intentional.

@natemcmaster 

</Description>
    <Title_Description>2.1.105 SDK package isn't installing aspnetcore-store packages I installed the dotnet-sdk-2.1.105 package on an Ubuntu 16.04 machine and then removed the 2.1.104 package and I noticed that the aspnetcore-store packages were eligible for auto-removal.

It looks like the 2.1.105 package doesn't have the correct dependency to bring in the runtime store packages like previous SDKs do.

Looking at the tarball version of the 2.1.105 SDK I see that the store files are still in there so I suspect this change isn't intentional.

@natemcmaster 

</Title_Description>
    <Label>
    </Label>
    <Assignee>natemcmaster</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9094</IssueLabelID>
    <Title>Add Fed28 and Deb9 to 2.1.3xx dotnet-install script</Title>
    <Description>Add Fed28 and Deb9 to 2.1.3xx dotnet-install script

Continuation of https://github.com/dotnet/cli/pull/8902
Unblocks https://github.com/dotnet/core-setup/pull/4043

PTAL: @johnbeisner or @livarcocc </Description>
    <Title_Description>Add Fed28 and Deb9 to 2.1.3xx dotnet-install script Add Fed28 and Deb9 to 2.1.3xx dotnet-install script

Continuation of https://github.com/dotnet/cli/pull/8902
Unblocks https://github.com/dotnet/core-setup/pull/4043

PTAL: @johnbeisner or @livarcocc </Title_Description>
    <Label>
    </Label>
    <Assignee>ianhays</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9093</IssueLabelID>
    <Title>Update Roslyn to 2.8.0-dev-62817-01</Title>
    <Description>
    </Description>
    <Title_Description>Update Roslyn to 2.8.0-dev-62817-01 </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>18/04/2018 7:04:00 PM +00:00</CreatedAt>
    <ClosedAt>19/04/2018 8:32:50 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9092</IssueLabelID>
    <Title>dotnet store crashed with The process cannot access the file rs.assets.cache</Title>
    <Description>## Steps to reproduce
1.


Marking as blocking partner as this breaks ASP.NET Core site extension build.



</Description>
    <Title_Description>dotnet store crashed with The process cannot access the file rs.assets.cache ## Steps to reproduce
1.


Marking as blocking partner as this breaks ASP.NET Core site extension build.



</Title_Description>
    <Label>blocking-partner</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9091</IssueLabelID>
    <Title>`dotnet test` fails when the file path has an ampersand in it</Title>
    <Description>## Steps to reproduce

1. Move existing solution which contains a test project to a directory that has an ampersand in it e.g.  is thrown; a stack trace is printed out; and the tool exits badly.

## Environment data

.NET Command Line Tools (2.1.4)

Product Information:
 Version:            2.1.4
 Commit SHA-1 hash:  5e8add2190

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.4\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54</Description>
    <Title_Description> is thrown; a stack trace is printed out; and the tool exits badly.

## Environment data

.NET Command Line Tools (2.1.4)

Product Information:
 Version:            2.1.4
 Commit SHA-1 hash:  5e8add2190

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.4\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9090</IssueLabelID>
    <Title>pick up nuget loc</Title>
    <Description>Works well. Fix #8471
![capture1](https://user-images.githubusercontent.com/6993335/38908650-1d2ff48a-4276-11e8-86f4-fdb259746419.PNG)
![capture2](https://user-images.githubusercontent.com/6993335/38908649-1d1f3ef6-4276-11e8-8493-255a664ba943.PNG)
</Description>
    <Title_Description>pick up nuget loc Works well. Fix #8471
![capture1](https://user-images.githubusercontent.com/6993335/38908650-1d2ff48a-4276-11e8-86f4-fdb259746419.PNG)
![capture2](https://user-images.githubusercontent.com/6993335/38908649-1d1f3ef6-4276-11e8-8493-255a664ba943.PNG)
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>18/04/2018 2:36:06 AM +00:00</CreatedAt>
    <ClosedAt>18/04/2018 6:18:15 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9089</IssueLabelID>
    <Title>Rename buildserver command.</Title>
    <Description>This commit renames the .

Fixes #9075.
</Description>
    <Title_Description>Rename buildserver command. This commit renames the .

Fixes #9075.
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>18/04/2018 12:29:58 AM +00:00</CreatedAt>
    <ClosedAt>18/04/2018 6:42:55 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9086</IssueLabelID>
    <Title>Sign the 'nupkg' files; CLI:release/2.1.3xx</Title>
    <Description>'nupkg' packages are required to be signed on Windows official builds; but not 'symbols.nupkg' packages
</Description>
    <Title_Description>Sign the 'nupkg' files; CLI:release/2.1.3xx 'nupkg' packages are required to be signed on Windows official builds; but not 'symbols.nupkg' packages
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9084</IssueLabelID>
    <Title>Razor build server shutdown should use pid files to discover running servers.</Title>
    <Description>See https://github.com/aspnet/Razor/issues/2248 which is implementing support for writing a pid file 





</Description>
    <Title_Description>Razor build server shutdown should use pid files to discover running servers. See https://github.com/aspnet/Razor/issues/2248 which is implementing support for writing a pid file 





</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9079</IssueLabelID>
    <Title>Help text improves</Title>
    <Description>fix #8869
fix https://github.com/dotnet/cli/issues/9023
fix https://github.com/dotnet/cli/issues/8563</Description>
    <Title_Description>Help text improves fix #8869
fix https://github.com/dotnet/cli/issues/9023
fix https://github.com/dotnet/cli/issues/8563</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/04/2018 8:50:14 PM +00:00</CreatedAt>
    <ClosedAt>17/04/2018 7:21:40 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9075</IssueLabelID>
    <Title>Change name of buildserver command to build-server</Title>
    <Description>## Expected  behavior



(Sorry I missed this earlier :-(






</Description>
    <Title_Description>Change name of buildserver command to build-server ## Expected  behavior



(Sorry I missed this earlier :-(






</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9073</IssueLabelID>
    <Title>Global tools targeting netcoreapp2.0 do not work with preview2 SDK</Title>
    <Description>## Steps to reproduce
* Create dotnet global tool 





</Description>
    <Title_Description>Global tools targeting netcoreapp2.0 do not work with preview2 SDK ## Steps to reproduce
* Create dotnet global tool 





</Title_Description>
    <Label>Pending Shiproom Approval</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9070</IssueLabelID>
    <Title>Give a different error to guide use to install via global tools</Title>
    <Description>Fix https://github.com/dotnet/cli/issues/8861

So if several bundled DotnetTools cannot finish source build on time. The user can use global tools to get it.

The original plan that adding a different resolver is hard due to resolver can only find dll that will be used to spawn a process. However the command constructor will give an error message when resolver find null. By adding a different error when the command name is part of the list it can achieve the same goal.

</Description>
    <Title_Description>Give a different error to guide use to install via global tools Fix https://github.com/dotnet/cli/issues/8861

So if several bundled DotnetTools cannot finish source build on time. The user can use global tools to get it.

The original plan that adding a different resolver is hard due to resolver can only find dll that will be used to spawn a process. However the command constructor will give an error message when resolver find null. By adding a different error when the command name is part of the list it can achieve the same goal.

</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>15/04/2018 11:10:32 PM +00:00</CreatedAt>
    <ClosedAt>17/04/2018 7:21:21 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9061</IssueLabelID>
    <Title>Occasionally seeing warnings or errors building Asp.Net Core 2.1 projects</Title>
    <Description>## Steps to reproduce

- From VS create a new ASP.NET Core 2.1 Empty Web project
- Build

## Expected  behavior
Build succeeds

## Actual behavior
Occasionally the build will succeed but show the following warning:

Could not write state file "obj\Debug\netcoreapp1.1\App3.csprojAssemblyReference.cache". The process cannot access the file 'D:\dd\WTE\Rel\TestResults\Deploy_asplab 2018-04-11 14_56_42\Out\App3\App3\obj\Debug\netcoreapp1.1\App3.csprojAssemblyReference.cache' because it is being used by another process.

On one occasion I saw the following error:






</Description>
    <Title_Description>Occasionally seeing warnings or errors building Asp.Net Core 2.1 projects ## Steps to reproduce

- From VS create a new ASP.NET Core 2.1 Empty Web project
- Build

## Expected  behavior
Build succeeds

## Actual behavior
Occasionally the build will succeed but show the following warning:

Could not write state file "obj\Debug\netcoreapp1.1\App3.csprojAssemblyReference.cache". The process cannot access the file 'D:\dd\WTE\Rel\TestResults\Deploy_asplab 2018-04-11 14_56_42\Out\App3\App3\obj\Debug\netcoreapp1.1\App3.csprojAssemblyReference.cache' because it is being used by another process.

On one occasion I saw the following error:






</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9056</IssueLabelID>
    <Title>dotnet-install.sh resulting in empty folder</Title>
    <Description>As shown on these commands I install two versions of the SDK which are returning successfully.
It's running inside the 2.0-sdk docker image.


It happens on two different Azure VM with Ubuntu 16.04.
</Description>
    <Title_Description>dotnet-install.sh resulting in empty folder As shown on these commands I install two versions of the SDK which are returning successfully.
It's running inside the 2.0-sdk docker image.


It happens on two different Azure VM with Ubuntu 16.04.
</Title_Description>
    <Label>Install-Script</Label>
    <CreatedAt>12/04/2018 1:29:58 AM +00:00</CreatedAt>
    <ClosedAt>21/05/2018 9:59:04 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9054</IssueLabelID>
    <Title>Trim back the 'unnecessary' nuget feeds</Title>
    <Description>The CLI collects nuget feeds over time; we need to trim back the 'unnecessary' nuget feeds from time-to-time.

Related: https://github.com/dotnet/cli/issues/7793</Description>
    <Title_Description>Trim back the 'unnecessary' nuget feeds The CLI collects nuget feeds over time; we need to trim back the 'unnecessary' nuget feeds from time-to-time.

Related: https://github.com/dotnet/cli/issues/7793</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9049</IssueLabelID>
    <Title>Terminate the 'StartsWith' string in the badge existence check.</Title>
    <Description>The badge existence check was always returning false because the pattern match was not deterministic. 

**Paraphrased badge existence check logic:**
StartsWith("linux_arm") &amp;&amp; EndsWith(".svg")

**Conflicting badge file names:**
"linux_arm64_Release_version_badge.svg"
"linux_arm_Release_version_badge.svg"

The check was double verifying the linux_arm badge and always returning 'false' for the  linux_arm64 badge.

**Other:**
FinishBuild.targets
'CheckIfAllBuildsHavePublished' target depends on the 'SetBadgeProps' target [VersionBadgeMoniker]

FinishBuild.targets 
formatting...</Description>
    <Title_Description>Terminate the 'StartsWith' string in the badge existence check. The badge existence check was always returning false because the pattern match was not deterministic. 

**Paraphrased badge existence check logic:**
StartsWith("linux_arm") &amp;&amp; EndsWith(".svg")

**Conflicting badge file names:**
"linux_arm64_Release_version_badge.svg"
"linux_arm_Release_version_badge.svg"

The check was double verifying the linux_arm badge and always returning 'false' for the  linux_arm64 badge.

**Other:**
FinishBuild.targets
'CheckIfAllBuildsHavePublished' target depends on the 'SetBadgeProps' target [VersionBadgeMoniker]

FinishBuild.targets 
formatting...</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9033</IssueLabelID>
    <Title>Dotnet install-script updates</Title>
    <Description>Introduce support for arm &amp; arm64 architectures; when detecting a missing 'library' prerequisite - do not fail the installation.

Addresses: https://github.com/dotnet/cli/issues/9007

**Auto-detect tested successfully on:**
OS = raspbian.8
Arch = armv7l
</Description>
    <Title_Description>Dotnet install-script updates Introduce support for arm &amp; arm64 architectures; when detecting a missing 'library' prerequisite - do not fail the installation.

Addresses: https://github.com/dotnet/cli/issues/9007

**Auto-detect tested successfully on:**
OS = raspbian.8
Arch = armv7l
</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9031</IssueLabelID>
    <Title>Fixing build-break in AllLinuxDistrosNativeInstallers; CLI:master</Title>
    <Description>Fixing typos...
should be: "InputFiles" and "DestinationFiles"


**Build break:**
build/package/Installer.RPM.targets(11526): warning MSB4064: The "InputFile" parameter is not supported by the "ReplaceFileContents" task. Verify the parameter exists on the task and it is a settable public instance property.

**First VSO break instance:**
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1560139

**Commit:**
https://github.com/dotnet/cli/commit/c3a1fecd995dc611f275a78cbfd3150245f94f5a
Installer.RPM.targets 

</Description>
    <Title_Description>Fixing build-break in AllLinuxDistrosNativeInstallers; CLI:master Fixing typos...
should be: "InputFiles" and "DestinationFiles"


**Build break:**
build/package/Installer.RPM.targets(11526): warning MSB4064: The "InputFile" parameter is not supported by the "ReplaceFileContents" task. Verify the parameter exists on the task and it is a settable public instance property.

**First VSO break instance:**
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1560139

**Commit:**
https://github.com/dotnet/cli/commit/c3a1fecd995dc611f275a78cbfd3150245f94f5a
Installer.RPM.targets 

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9027</IssueLabelID>
    <Title>Unify EmbedAppNameInHost in CLI and SDK</Title>
    <Description>https://github.com/dotnet/cli/blob/56c10f65c71e070116ca92f55598015a7f7713c1/src/Microsoft.DotNet.Cli.Utils/EmbedAppNameInHost.cs

https://github.com/dotnet/sdk/blob/cd25d6bbfc2aac61cc790c511900427ac64fdaa8/src/Tasks/Microsoft.NET.Build.Tasks/EmbedAppNameInHost.cs

This logic is duplicated in both CLI and SDK. It should be unified.</Description>
    <Title_Description>Unify EmbedAppNameInHost in CLI and SDK https://github.com/dotnet/cli/blob/56c10f65c71e070116ca92f55598015a7f7713c1/src/Microsoft.DotNet.Cli.Utils/EmbedAppNameInHost.cs

https://github.com/dotnet/sdk/blob/cd25d6bbfc2aac61cc790c511900427ac64fdaa8/src/Tasks/Microsoft.NET.Build.Tasks/EmbedAppNameInHost.cs

This logic is duplicated in both CLI and SDK. It should be unified.</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9023</IssueLabelID>
    <Title>Add help support for new CLI commands</Title>
    <Description>## Steps to reproduce
dotnet help tool

## Expected  behavior
Would open an article for the command (which doesn't exist right now 😄) 

Probably the following files should be updated:
https://github.com/dotnet/cli/blob/master/src/dotnet/README.md
https://github.com/dotnet/cli/blob/master/src/dotnet/BuiltInCommandsCatalog.cs

## Actual behavior
You get an error message saying:
Specified command 'tool' is not a valid CLI command. Please specify a valid CLI commands. For more information run dotnet help.

## Environment data
 output:

.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview3-008443
 Commit:    1e2e8138b9

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview3-008443\

Host (useful for support):
  Version: 2.1.0-preview3-26404-01
  Commit:  1b1a652c15

.NET Core SDKs installed:
  1.0.0 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.0.3 [C:\Program Files\dotnet\sdk]
  2.1.2 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300-preview3-008443 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0-preview2-30431 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0-preview2-30431 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview3-26404-01 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download</Description>
    <Title_Description>Add help support for new CLI commands ## Steps to reproduce
dotnet help tool

## Expected  behavior
Would open an article for the command (which doesn't exist right now 😄) 

Probably the following files should be updated:
https://github.com/dotnet/cli/blob/master/src/dotnet/README.md
https://github.com/dotnet/cli/blob/master/src/dotnet/BuiltInCommandsCatalog.cs

## Actual behavior
You get an error message saying:
Specified command 'tool' is not a valid CLI command. Please specify a valid CLI commands. For more information run dotnet help.

## Environment data
 output:

.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview3-008443
 Commit:    1e2e8138b9

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview3-008443\

Host (useful for support):
  Version: 2.1.0-preview3-26404-01
  Commit:  1b1a652c15

.NET Core SDKs installed:
  1.0.0 [C:\Program Files\dotnet\sdk]
  1.0.4 [C:\Program Files\dotnet\sdk]
  1.1.0 [C:\Program Files\dotnet\sdk]
  2.0.0 [C:\Program Files\dotnet\sdk]
  2.0.2 [C:\Program Files\dotnet\sdk]
  2.0.3 [C:\Program Files\dotnet\sdk]
  2.1.2 [C:\Program Files\dotnet\sdk]
  2.1.100 [C:\Program Files\dotnet\sdk]
  2.1.102 [C:\Program Files\dotnet\sdk]
  2.1.103 [C:\Program Files\dotnet\sdk]
  2.1.300-preview1-008174 [C:\Program Files\dotnet\sdk]
  2.1.300-preview3-008443 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.All 2.1.0-preview2-30431 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 2.1.0-preview2-30431 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 1.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 1.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 2.1.0-preview3-26404-01 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9022</IssueLabelID>
    <Title>Conclusion page in the installer has multiple issues to address.</Title>
    <Description>Feel free to split this up as neccessary:

![image](https://user-images.githubusercontent.com/8228359/38511088-d52b01ac-3bdb-11e8-80df-66496df67ca1.png)

I installed the Preview 2 SDK and noticed a few things on the conclusion page that should be addressed.

@KathleenDollard 

1. There is nothing that tells me its preview 2. I was juggling preview 1 uninstalls and preview 2 installs and the installer didn't give me any hints which one I was on. Branding for the previews should be in the installer UI's. 

2. The resources section has a set of issues:
- The Release notes point to 2.0.
- The tutorials point to instructions on how to use the CLI and other projects that all talk about the .NET Core 1.0 SDK. https://docs.microsoft.com/en-us/dotnet/core/tutorials/using-with-xplat-cli
- The "Core Documentation" should be ".NET Core documentation"
- The "SDK documentation" points to a Command Line Interface page and not the "SDK page". 






</Description>
    <Title_Description>Conclusion page in the installer has multiple issues to address. Feel free to split this up as neccessary:

![image](https://user-images.githubusercontent.com/8228359/38511088-d52b01ac-3bdb-11e8-80df-66496df67ca1.png)

I installed the Preview 2 SDK and noticed a few things on the conclusion page that should be addressed.

@KathleenDollard 

1. There is nothing that tells me its preview 2. I was juggling preview 1 uninstalls and preview 2 installs and the installer didn't give me any hints which one I was on. Branding for the previews should be in the installer UI's. 

2. The resources section has a set of issues:
- The Release notes point to 2.0.
- The tutorials point to instructions on how to use the CLI and other projects that all talk about the .NET Core 1.0 SDK. https://docs.microsoft.com/en-us/dotnet/core/tutorials/using-with-xplat-cli
- The "Core Documentation" should be ".NET Core documentation"
- The "SDK documentation" points to a Command Line Interface page and not the "SDK page". 






</Title_Description>
    <Label>Area: Setup</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9019</IssueLabelID>
    <Title>Update test templates to use the 15.7.0 test SDK</Title>
    <Description>cc @mayankbansal018</Description>
    <Title_Description>Update test templates to use the 15.7.0 test SDK cc @mayankbansal018</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>8/04/2018 6:59:09 PM +00:00</CreatedAt>
    <ClosedAt>19/04/2018 7:56:21 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9008</IssueLabelID>
    <Title>ASP.NET Core HTTPs first run experience disclaimer is misleading for Linux users</Title>
    <Description>Today the text for the ASP.NET Core HTTPs bits is:
![image](https://user-images.githubusercontent.com/2008729/38388681-c8c5565a-38d0-11e8-9aaf-df632b22ff1c.png)

The problem with this is it makes it seem that for Linux the trust has already been trusted in some fashion; however in reality it's up to the user to determine how to trust the cert on their flavor of Linux. Should update the wording to be more explicit about that expectation.

/cc @danroth27 @javiercn 

## Environment data
 output:


![image](https://user-images.githubusercontent.com/2008729/38388741-f22d86b6-38d0-11e8-9b43-1d1472a85416.png)




</Description>
    <Title_Description>ASP.NET Core HTTPs first run experience disclaimer is misleading for Linux users Today the text for the ASP.NET Core HTTPs bits is:
![image](https://user-images.githubusercontent.com/2008729/38388681-c8c5565a-38d0-11e8-9aaf-df632b22ff1c.png)

The problem with this is it makes it seem that for Linux the trust has already been trusted in some fashion; however in reality it's up to the user to determine how to trust the cert on their flavor of Linux. Should update the wording to be more explicit about that expectation.

/cc @danroth27 @javiercn 

## Environment data
 output:


![image](https://user-images.githubusercontent.com/2008729/38388741-f22d86b6-38d0-11e8-9b43-1d1472a85416.png)




</Title_Description>
    <Label>
    </Label>
    <Assignee>danroth27</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>9007</IssueLabelID>
    <Title>dotnet-install.sh installs linux-x64 not linux-arm on an arm32v7 machine</Title>
    <Description>## Steps to reproduce
Create a Dockerfile





</Description>
    <Title_Description>dotnet-install.sh installs linux-x64, not linux-arm, on an arm32v7 machine ## Steps to reproduce
Create a Dockerfile





</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8998</IssueLabelID>
    <Title>[Arm] crossgen cli tools</Title>
    <Description>Arm64 &amp; Arm crosscomponent crossgen tools are available and are being consumed by coreclr core-setup to crossgen the runtime.

They are not yet being used by cli to crossgen the SDK (done for x64).

One of the issues is that the crosscomponent crossgen tool is contained in a private coreclr package which is enacapsulated by core-setup.  ClI does not seem to have the necessary version info to reference the correct package.

Options:
+ Core-setup redistribute the crosscomponent crossgen tool(s)
+ Create a mechanism to determine the correct coreclr package version.

For arm64 the crosscomponent crossgen tool is here 
</Description>
    <Title_Description>[Arm] crossgen cli tools Arm64 &amp; Arm crosscomponent crossgen tools are available and are being consumed by coreclr core-setup to crossgen the runtime.

They are not yet being used by cli to crossgen the SDK (done for x64).

One of the issues is that the crosscomponent crossgen tool is contained in a private coreclr package which is enacapsulated by core-setup.  ClI does not seem to have the necessary version info to reference the correct package.

Options:
+ Core-setup redistribute the crosscomponent crossgen tool(s)
+ Create a mechanism to determine the correct coreclr package version.

For arm64 the crosscomponent crossgen tool is here 
</Title_Description>
    <Label>
    </Label>
    <Assignee>sdmaclea</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8981</IssueLabelID>
    <Title>unable to generate deps.json it may have been already generated</Title>
    <Description>_From @jholovacs on March 18 2018 21:8_

trying to use migrations or update the database I get this message:



_Copied from original issue: aspnet/EntityFrameworkCore#11320_</Description>
    <Title_Description>unable to generate deps.json, it may have been already generated _From @jholovacs on March 18 2018 21:8_

trying to use migrations or update the database I get this message:



_Copied from original issue: aspnet/EntityFrameworkCore#11320_</Title_Description>
    <Label>
    </Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8972</IssueLabelID>
    <Title>CI error Retrying X for source - Could not load file or assembly 'Microsoft.Win32.Primitives - Too many open files</Title>
    <Description>Relate to 

https://github.com/NuGet/Home/issues/2004
https://github.com/dotnet/cli/issues/809

Failed CI build
https://ci.dot.net/job/dotnet_cli/job/release_2.1.3xx/job/release_rhel7.2_x64_prtest/187/testReport/junit/(root)/(empty)/Microsoft_DotNet_New_Tests_GivenThatIWantANewAppWithSpecifiedType_TemplateRestoresAndBuildsWithoutWarnings_language___C____projectType___mvc___skipSpaWebpackSteps__False_/

https://ci.dot.net/job/dotnet_cli/job/release_2.1.3xx/job/debug_centos7.1_x64_prtest/195/testReport/junit/(root)/(empty)/Microsoft_DotNet_New_Tests_GivenThatIWantANewAppWithSpecifiedType_TemplateRestoresAndBuildsWithoutWarnings_language___C____projectType___mvc___skipSpaWebpackSteps__False_/
</Description>
    <Title_Description>CI error Retrying X for source - Could not load file or assembly 'Microsoft.Win32.Primitives - Too many open files Relate to 

https://github.com/NuGet/Home/issues/2004
https://github.com/dotnet/cli/issues/809

Failed CI build
https://ci.dot.net/job/dotnet_cli/job/release_2.1.3xx/job/release_rhel7.2_x64_prtest/187/testReport/junit/(root)/(empty)/Microsoft_DotNet_New_Tests_GivenThatIWantANewAppWithSpecifiedType_TemplateRestoresAndBuildsWithoutWarnings_language___C____projectType___mvc___skipSpaWebpackSteps__False_/

https://ci.dot.net/job/dotnet_cli/job/release_2.1.3xx/job/debug_centos7.1_x64_prtest/195/testReport/junit/(root)/(empty)/Microsoft_DotNet_New_Tests_GivenThatIWantANewAppWithSpecifiedType_TemplateRestoresAndBuildsWithoutWarnings_language___C____projectType___mvc___skipSpaWebpackSteps__False_/
</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8968</IssueLabelID>
    <Title>Improve design of the buildserver shutdown command.</Title>
    <Description>See related discussion [here](https://github.com/dotnet/cli/pull/8950#discussion_r178253999).

Currently the  command would then become more generic and issue shutdown commands to all running build servers regardless of the current directory.</Description>
    <Title_Description>Improve design of the buildserver shutdown command. See related discussion [here](https://github.com/dotnet/cli/pull/8950#discussion_r178253999).

Currently the  command would then become more generic and issue shutdown commands to all running build servers regardless of the current directory.</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8964</IssueLabelID>
    <Title>Right bracket is missing in text when tool installation succeed with SC language </Title>
    <Description>## Steps to reproduce
1. Install global tool on windows with SC language

## Expected  behavior
All the text is translated and displayed normally

## Actual behavior
Right bracket is missing in text when tool installation succeed
![image](https://user-images.githubusercontent.com/1578239/38190747-3c218032-3698-11e8-9183-a6628595d9d3.png)


## Environment data
 output:
.NET Core SDK（反映任何 global.json）:
 Version:   2.1.300-preview2-008510
 Commit:    abcdeba455

运行时环境:
 OS Name:     Windows
 OS Version:  10.0.15063
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview2-008510\

Host (useful for support):
  Version: 2.1.0-preview2-26330-03
  Commit:  632536fb4b

.NET Core SDKs installed:
  2.1.300-preview2-008510 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview2-30520 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview2-30520 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26330-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Description>
    <Title_Description>Right bracket is missing in text when tool installation succeed with SC language  ## Steps to reproduce
1. Install global tool on windows with SC language

## Expected  behavior
All the text is translated and displayed normally

## Actual behavior
Right bracket is missing in text when tool installation succeed
![image](https://user-images.githubusercontent.com/1578239/38190747-3c218032-3698-11e8-9183-a6628595d9d3.png)


## Environment data
 output:
.NET Core SDK（反映任何 global.json）:
 Version:   2.1.300-preview2-008510
 Commit:    abcdeba455

运行时环境:
 OS Name:     Windows
 OS Version:  10.0.15063
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview2-008510\

Host (useful for support):
  Version: 2.1.0-preview2-26330-03
  Commit:  632536fb4b

.NET Core SDKs installed:
  2.1.300-preview2-008510 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview2-30520 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview2-30520 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26330-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download





</Title_Description>
    <Label>localization</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>2/04/2018 9:14:22 AM +00:00</CreatedAt>
    <ClosedAt>11/04/2018 10:35:45 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8962</IssueLabelID>
    <Title>Fix prodcon</Title>
    <Description>Updates the SDK to the latest version available.
Fixes an issue where test assets were not respecting the Orchestrated package versions leading to a conflict with the Microsoft.NetCore.App version which now errors out when building/publishing.

There is still one issue happening which is when generating the project tools deps.json because of that marking this PR as WIP.
</Description>
    <Title_Description>Fix prodcon Updates the SDK to the latest version available.
Fixes an issue where test assets were not respecting the Orchestrated package versions leading to a conflict with the Microsoft.NetCore.App version which now errors out when building/publishing.

There is still one issue happening which is when generating the project tools deps.json because of that marking this PR as WIP.
</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>1/04/2018 4:10:40 AM +00:00</CreatedAt>
    <ClosedAt>2/04/2018 6:34:16 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8956</IssueLabelID>
    <Title>NETStandard.Library 2.0.3 should be picked up in SDK servicing</Title>
    <Description>_From @ericstj on September 26 2017 21:6_

/cc @livarcocc @dsplaisted 

_Copied from original issue: dotnet/sdk#1608_</Description>
    <Title_Description>NETStandard.Library 2.0.3 should be picked up in SDK servicing _From @ericstj on September 26 2017 21:6_

/cc @livarcocc @dsplaisted 

_Copied from original issue: dotnet/sdk#1608_</Title_Description>
    <Label>Urgency-Soon</Label>
    <Assignee>dsplaisted</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8935</IssueLabelID>
    <Title>CLI builds referenced libraries as debug for release build</Title>
    <Description>## Steps to reproduce
Linux:

1. Create a library library1 (dotnet new library)
2. Create a console app console1 (dotnet new console)
3. Reference library from console app (dotnet add reference)
4. Create solution (dotnet new sln)
5. Add console1 to solution (dotnet sln add)
6. Run publish with release

## Expected  behavior

library1 should be build for Release

## Actual behavior







</Description>
    <Title_Description>CLI builds referenced libraries as debug for release build ## Steps to reproduce
Linux:

1. Create a library library1 (dotnet new library)
2. Create a console app console1 (dotnet new console)
3. Reference library from console app (dotnet add reference)
4. Create solution (dotnet new sln)
5. Add console1 to solution (dotnet sln add)
6. Run publish with release

## Expected  behavior

library1 should be build for Release

## Actual behavior







</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8931</IssueLabelID>
    <Title>It should return error when run dotnet tool list using non-exist tool path</Title>
    <Description>## Steps to reproduce
Run dotnet tool list --tool-path "~/non-exist-path"

## Expected  behavior
It should return error path

## Actual behavior
The output shows the table header with package id version and commands. 
![image](https://user-images.githubusercontent.com/1578239/38074117-42602538-3360-11e8-9ad5-d33b4fac4ef9.png)


## Environment data
 output:
.NET Core SDK (reflecting any global.json):
Version: 2.1.300-preview2-008407
Commit: 5a5e35c
Runtime Environment:
OS Name: ubuntu
OS Version: 16.04
OS Platform: Linux
RID: ubuntu.16.04-x64
Base Path: /usr/share/dotnet/sdk/2.1.300-preview2-008407/
Host (useful for support):
Version: 2.1.0-preview2-26326-03
Commit: 01c8d79c6a
.NET Core SDKs installed:
2.1.300-preview2-008407 [/usr/share/dotnet/sdk]
.NET Core runtimes installed:
Microsoft.AspNetCore.All 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
Microsoft.AspNetCore.App 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
Microsoft.NETCore.App 2.1.0-preview2-26326-03 [/usr/share/dotnet/shared/Microsoft.NETCore.App]
To install additional .NET Core runtimes or SDKs:
https://aka.ms/dotnet-download





</Description>
    <Title_Description>It should return error when run dotnet tool list using non-exist tool path ## Steps to reproduce
Run dotnet tool list --tool-path "~/non-exist-path"

## Expected  behavior
It should return error path

## Actual behavior
The output shows the table header with package id version and commands. 
![image](https://user-images.githubusercontent.com/1578239/38074117-42602538-3360-11e8-9ad5-d33b4fac4ef9.png)


## Environment data
 output:
.NET Core SDK (reflecting any global.json):
Version: 2.1.300-preview2-008407
Commit: 5a5e35c
Runtime Environment:
OS Name: ubuntu
OS Version: 16.04
OS Platform: Linux
RID: ubuntu.16.04-x64
Base Path: /usr/share/dotnet/sdk/2.1.300-preview2-008407/
Host (useful for support):
Version: 2.1.0-preview2-26326-03
Commit: 01c8d79c6a
.NET Core SDKs installed:
2.1.300-preview2-008407 [/usr/share/dotnet/sdk]
.NET Core runtimes installed:
Microsoft.AspNetCore.All 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
Microsoft.AspNetCore.App 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
Microsoft.NETCore.App 2.1.0-preview2-26326-03 [/usr/share/dotnet/shared/Microsoft.NETCore.App]
To install additional .NET Core runtimes or SDKs:
https://aka.ms/dotnet-download





</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8929</IssueLabelID>
    <Title>URL paths for RHEL 7.2 SDK and ASP.NET Core Runtime installer should omit “rhel” on github page - 2.1 master branch</Title>
    <Description>URL paths for RHEL 7.2 SDK and ASP.NET Core Runtime installer should omit “rhel” on https://github.com/dotnet/versions/tree/master/build-info/dotnet/product/cli/release/2.1. Otherwise it will return 404 error.
![image](https://user-images.githubusercontent.com/1578239/38073183-8d3b6e2c-335c-11e8-9b3a-f4e443ced12c.png)


Workaround: Modify the link ***-**rhel-x64.rpm** -&gt; ***-**x64.rpm** 
SDK:
https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180326-03/final/assets/Sdk/2.1.300-preview2-008407/dotnet-sdk-2.1.300-preview2-008407-**rhel-x64.rpm** 
-&gt;
 https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180326-03/final/assets/Sdk/2.1.300-preview2-008407/dotnet-sdk-2.1.300-preview2-008407**-x64.rpm**
 
ASP.NET Core Runtime:
https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180326-03/final/assets/aspnetcore/Runtime/2.1.0-preview2-30478/aspnetcore-runtime-2.1.0-preview2-30478-**rhel.7-x64.rpm** 
 -&gt; 
https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180326-03/final/assets/aspnetcore/Runtime/2.1.0-preview2-30478/aspnetcore-runtime-2.1.0-preview2-30478-**x64.rpm**






</Description>
    <Title_Description>URL paths for RHEL 7.2 SDK and ASP.NET Core Runtime installer should omit “rhel” on github page - 2.1 master branch URL paths for RHEL 7.2 SDK and ASP.NET Core Runtime installer should omit “rhel” on https://github.com/dotnet/versions/tree/master/build-info/dotnet/product/cli/release/2.1. Otherwise it will return 404 error.
![image](https://user-images.githubusercontent.com/1578239/38073183-8d3b6e2c-335c-11e8-9b3a-f4e443ced12c.png)


Workaround: Modify the link ***-**rhel-x64.rpm** -&gt; ***-**x64.rpm** 
SDK:
https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180326-03/final/assets/Sdk/2.1.300-preview2-008407/dotnet-sdk-2.1.300-preview2-008407-**rhel-x64.rpm** 
-&gt;
 https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180326-03/final/assets/Sdk/2.1.300-preview2-008407/dotnet-sdk-2.1.300-preview2-008407**-x64.rpm**
 
ASP.NET Core Runtime:
https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180326-03/final/assets/aspnetcore/Runtime/2.1.0-preview2-30478/aspnetcore-runtime-2.1.0-preview2-30478-**rhel.7-x64.rpm** 
 -&gt; 
https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180326-03/final/assets/aspnetcore/Runtime/2.1.0-preview2-30478/aspnetcore-runtime-2.1.0-preview2-30478-**x64.rpm**






</Title_Description>
    <Label>
    </Label>
    <Assignee>mmitche</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8927</IssueLabelID>
    <Title>The error text should not indicating version issue when conflicting shim exists</Title>
    <Description>## Steps to reproduce
1. Setup tools local feed. 
2. Prepare 2 tools that have different package ID but same command name. Add &lt;ToolCommandName&gt;mytool2&lt;/ToolCommandName&gt; after &lt;PackAsTool&gt;true&lt;/PackAsTool&gt; to customize nameSetup tools local feed. Prepare 2 tools that have different package ID but same command name. Add &lt;ToolCommandName&gt;mytool2&lt;/ToolCommandName&gt; after &lt;PackAsTool&gt;true&lt;/PackAsTool&gt; to customize name
3. Run dotnet tool install -g mytool1 
4. Run dotnet tool install -g mytool2


## Expected  behavior
Tool mytool2 installation failed with clear error indicates "tool with the same name already existed". 

## Actual behavior
Tool mytool2 installation failed with error indicating version issue. 
![image](https://user-images.githubusercontent.com/1578239/38072375-8ba3aa2e-3358-11e8-81c0-4687affc91b7.png)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview2-008407
 Commit:    5a5e35cf02

Runtime Environment:
 OS Name:     ubuntu
 OS Version:  16.04
 OS Platform: Linux
 RID:         ubuntu.16.04-x64
 Base Path:   /usr/share/dotnet/sdk/2.1.300-preview2-008407/

Host (useful for support):
  Version: 2.1.0-preview2-26326-03
  Commit:  01c8d79c6a

.NET Core SDKs installed:
  2.1.300-preview2-008407 [/usr/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26326-03 [/usr/share/dotnet/shared/Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Description>
    <Title_Description>The error text should not indicating version issue when conflicting shim exists ## Steps to reproduce
1. Setup tools local feed. 
2. Prepare 2 tools that have different package ID but same command name. Add &lt;ToolCommandName&gt;mytool2&lt;/ToolCommandName&gt; after &lt;PackAsTool&gt;true&lt;/PackAsTool&gt; to customize nameSetup tools local feed. Prepare 2 tools that have different package ID but same command name. Add &lt;ToolCommandName&gt;mytool2&lt;/ToolCommandName&gt; after &lt;PackAsTool&gt;true&lt;/PackAsTool&gt; to customize name
3. Run dotnet tool install -g mytool1 
4. Run dotnet tool install -g mytool2


## Expected  behavior
Tool mytool2 installation failed with clear error indicates "tool with the same name already existed". 

## Actual behavior
Tool mytool2 installation failed with error indicating version issue. 
![image](https://user-images.githubusercontent.com/1578239/38072375-8ba3aa2e-3358-11e8-81c0-4687affc91b7.png)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview2-008407
 Commit:    5a5e35cf02

Runtime Environment:
 OS Name:     ubuntu
 OS Version:  16.04
 OS Platform: Linux
 RID:         ubuntu.16.04-x64
 Base Path:   /usr/share/dotnet/sdk/2.1.300-preview2-008407/

Host (useful for support):
  Version: 2.1.0-preview2-26326-03
  Commit:  01c8d79c6a

.NET Core SDKs installed:
  2.1.300-preview2-008407 [/usr/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26326-03 [/usr/share/dotnet/shared/Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Title_Description>
    <Label>tool</Label>
    <CreatedAt>29/03/2018 5:53:47 AM +00:00</CreatedAt>
    <ClosedAt>3/04/2018 4:36:03 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8924</IssueLabelID>
    <Title>Warning message indicating that format version is missing should not occur if the installation tool was packed with preview 2</Title>
    <Description>## Steps to reproduce
1.	run dotnet new console -n test-global-tools. 
2.	edit project file add line &lt;PackAsTool&gt;true&lt;/PackAsTool&gt; in PropertyGroup session. 
3.	run dotnet pack 
4.	setup local nuget feed and copy paste result bin/Debug/test-global-tools.1.0.0.nupkg in to it 
5.	run dotnet install tool -g test-global-tools 
6.	Observe the instruction printed on the screen 

## Expected  behavior
Installation succeed without any warning message

## Actual behavior
Warning message is displayed  indicating that format version is missing
![image](https://user-images.githubusercontent.com/1578239/38071877-69b3d2e2-3356-11e8-83f0-6a391341e4c9.png)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview2-008407
 Commit:    5a5e35cf02

Runtime Environment:
 OS Name:     ubuntu
 OS Version:  16.04
 OS Platform: Linux
 RID:         ubuntu.16.04-x64
 Base Path:   /usr/share/dotnet/sdk/2.1.300-preview2-008407/

Host (useful for support):
  Version: 2.1.0-preview2-26326-03
  Commit:  01c8d79c6a

.NET Core SDKs installed:
  2.1.300-preview2-008407 [/usr/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26326-03 [/usr/share/dotnet/shared/Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Description>
    <Title_Description>Warning message indicating that format version is missing should not occur if the installation tool was packed with preview 2 ## Steps to reproduce
1.	run dotnet new console -n test-global-tools. 
2.	edit project file add line &lt;PackAsTool&gt;true&lt;/PackAsTool&gt; in PropertyGroup session. 
3.	run dotnet pack 
4.	setup local nuget feed and copy paste result bin/Debug/test-global-tools.1.0.0.nupkg in to it 
5.	run dotnet install tool -g test-global-tools 
6.	Observe the instruction printed on the screen 

## Expected  behavior
Installation succeed without any warning message

## Actual behavior
Warning message is displayed  indicating that format version is missing
![image](https://user-images.githubusercontent.com/1578239/38071877-69b3d2e2-3356-11e8-83f0-6a391341e4c9.png)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview2-008407
 Commit:    5a5e35cf02

Runtime Environment:
 OS Name:     ubuntu
 OS Version:  16.04
 OS Platform: Linux
 RID:         ubuntu.16.04-x64
 Base Path:   /usr/share/dotnet/sdk/2.1.300-preview2-008407/

Host (useful for support):
  Version: 2.1.0-preview2-26326-03
  Commit:  01c8d79c6a

.NET Core SDKs installed:
  2.1.300-preview2-008407 [/usr/share/dotnet/sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview2-30478 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26326-03 [/usr/share/dotnet/shared/Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download






</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8918</IssueLabelID>
    <Title>With .zip installer message is not localized when install global tool succeed</Title>
    <Description>## Steps to reproduce
1. Prepare a windows 10 OS with language SC
2. Download zip installer and unzip add this path to system path
3. run dotnet new console -n test-global-tools. 
4. edit project file add line &lt;PackAsTool&gt;true&lt;/PackAsTool&gt; in PropertyGroup session. 
5. run dotnet pack 
6. setup local nuget feed and copy paste result bin/Debug/test-global-tools.1.0.0.nupkg in to it 
7. run dotnet install tool -g test-global-tools 
8. observe the instruction printed on the screen 

## Expected  behavior
1. Message should be localized normally

## Actual behavior
1. Message still shows in English
![image](https://user-images.githubusercontent.com/1578239/38005802-f2e1bc1a-3274-11e8-9812-9e345ecad063.png)

##Note
1. This issue is not reproduced when using .exe installer.
![image](https://user-images.githubusercontent.com/1578239/38005479-5afaa05c-3273-11e8-890a-a68d2e194dff.png)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview2-008396
 Commit:    400e670faa

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.10240
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\sdk\2.1.300-preview2-008396\

Host (useful for support):
  Version: 2.1.0-preview2-26325-03
  Commit:  95f1b0b97f

.NET Core SDKs installed:
  2.1.300-preview2-008396 [C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview2-30457 [C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview2-30457 [C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26325-03 [C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download</Description>
    <Title_Description>With .zip installer, message is not localized when install global tool succeed ## Steps to reproduce
1. Prepare a windows 10 OS with language SC
2. Download zip installer and unzip add this path to system path
3. run dotnet new console -n test-global-tools. 
4. edit project file add line &lt;PackAsTool&gt;true&lt;/PackAsTool&gt; in PropertyGroup session. 
5. run dotnet pack 
6. setup local nuget feed and copy paste result bin/Debug/test-global-tools.1.0.0.nupkg in to it 
7. run dotnet install tool -g test-global-tools 
8. observe the instruction printed on the screen 

## Expected  behavior
1. Message should be localized normally

## Actual behavior
1. Message still shows in English
![image](https://user-images.githubusercontent.com/1578239/38005802-f2e1bc1a-3274-11e8-9812-9e345ecad063.png)

##Note
1. This issue is not reproduced when using .exe installer.
![image](https://user-images.githubusercontent.com/1578239/38005479-5afaa05c-3273-11e8-890a-a68d2e194dff.png)

## Environment data
 output:
.NET Core SDK (reflecting any global.json):
 Version:   2.1.300-preview2-008396
 Commit:    400e670faa

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.10240
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\sdk\2.1.300-preview2-008396\

Host (useful for support):
  Version: 2.1.0-preview2-26325-03
  Commit:  95f1b0b97f

.NET Core SDKs installed:
  2.1.300-preview2-008396 [C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.0-preview2-30457 [C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.0-preview2-30457 [C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.0-preview2-26325-03 [C:\dotnet-sdk-2.1.300-preview2-008396-win-x64\shared\Microsoft.NETCore.App]

To install additional .NET Core runtimes or SDKs:
  https://aka.ms/dotnet-download</Title_Description>
    <Label>tool</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>28/03/2018 2:44:36 AM +00:00</CreatedAt>
    <ClosedAt>28/03/2018 5:11:05 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8912</IssueLabelID>
    <Title>Fix an 'unbound variable' warning.</Title>
    <Description>Trying to make the 'linux_platform_name' variable global doesn't work entirely. Calling the method "get_current_os_name" eliminates the 'unbound variable' warning:
/opt/code/scripts/obtain/dotnet-install.sh: line 594: linux_platform_name: unbound variable</Description>
    <Title_Description>Fix an 'unbound variable' warning. Trying to make the 'linux_platform_name' variable global doesn't work entirely. Calling the method "get_current_os_name" eliminates the 'unbound variable' warning:
/opt/code/scripts/obtain/dotnet-install.sh: line 594: linux_platform_name: unbound variable</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8892</IssueLabelID>
    <Title>dotnet run "eats" empty command line arguments</Title>
    <Description>## Steps to reproduce
Have a simple console app written on C#:


## Note
This example crashes at all on latest released version of .NET Core (runtime version 2.0.6) but seems like this crash was fixed for .NET Core 2.1</Description>
    <Title_Description>dotnet run "eats" empty command line arguments ## Steps to reproduce
Have a simple console app written on C#:


## Note
This example crashes at all on latest released version of .NET Core (runtime version 2.0.6) but seems like this crash was fixed for .NET Core 2.1</Title_Description>
    <Label>In PR</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8874</IssueLabelID>
    <Title>Restore fails in restrictive environments</Title>
    <Description>## Steps to reproduce
Upload a 2.1.300 version of the SDK to an Azure Web App
Change the deploy script to use your dotnet for restore
Git deploy a 2.1 app

## Expected  behavior
Restore and publish to work and site to be functioning as expected

## Actual behavior
remote: Handling ASP.NET Core Web Application deployment.
remote: Failed exitCode=1 command=dotnet restore "D:\home\site\repository\testapp.csproj"
remote: An error has occurred during web site deployment.
remote: System.Security.SecurityException: Requested registry access is not allowed.
remote:    at Microsoft.Win32.RegistryKey.OpenSubKey(String name Boolean writable)
remote:    at System.Environment.SetEnvironmentVariableCore(String variable String value EnvironmentVariableTarget target)
remote:    at System.Environment.SetEnvironmentVariable(String variable String value EnvironmentVariableTarget target)
remote:    at Internal.Runtime.Augments.EnvironmentAugments.SetEnvironmentVariable(String variable String value EnvironmentVariableTarget target)
remote:    at System.Environment.SetEnvironmentVariable(String variable String value EnvironmentVariableTarget target)
remote:    at Microsoft.DotNet.ShellShim.WindowsEnvironmentPath.AddPackageExecutablePathToUserPath()
remote:    at Microsoft.DotNet.Configurer.DotnetFirstTimeUseConfigurer.AddPackageExecutablePath()
remote:    at Microsoft.DotNet.Configurer.DotnetFirstTimeUseConfigurer.Configure()
remote:    at Microsoft.DotNet.Cli.Program.ConfigureDotNetForFirstTimeUse(INuGetCacheSentinel nugetCacheSentinel IFirstTimeUseNoticeSentinel firstTimeUseNotice
Sentinel IAspNetCertificateSentinel aspNetCertificateSentinel CliFolderPathCalculator cliFolderPathCalculator Boolean hasSuperUserAccess)
remote:    at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args ITelemetry telemetryClient)
remote:    at Microsoft.DotNet.Cli.Program.Main(String[] args)
remote:
remote: Error - Changes committed to remote repository but deployment to website failed.


## Environment data
SDK 2.1.300-preview2-008367
Azure Web App





</Description>
    <Title_Description>Restore fails in restrictive environments ## Steps to reproduce
Upload a 2.1.300 version of the SDK to an Azure Web App
Change the deploy script to use your dotnet for restore
Git deploy a 2.1 app

## Expected  behavior
Restore and publish to work and site to be functioning as expected

## Actual behavior
remote: Handling ASP.NET Core Web Application deployment.
remote: Failed exitCode=1 command=dotnet restore "D:\home\site\repository\testapp.csproj"
remote: An error has occurred during web site deployment.
remote: System.Security.SecurityException: Requested registry access is not allowed.
remote:    at Microsoft.Win32.RegistryKey.OpenSubKey(String name Boolean writable)
remote:    at System.Environment.SetEnvironmentVariableCore(String variable String value EnvironmentVariableTarget target)
remote:    at System.Environment.SetEnvironmentVariable(String variable String value EnvironmentVariableTarget target)
remote:    at Internal.Runtime.Augments.EnvironmentAugments.SetEnvironmentVariable(String variable String value EnvironmentVariableTarget target)
remote:    at System.Environment.SetEnvironmentVariable(String variable String value EnvironmentVariableTarget target)
remote:    at Microsoft.DotNet.ShellShim.WindowsEnvironmentPath.AddPackageExecutablePathToUserPath()
remote:    at Microsoft.DotNet.Configurer.DotnetFirstTimeUseConfigurer.AddPackageExecutablePath()
remote:    at Microsoft.DotNet.Configurer.DotnetFirstTimeUseConfigurer.Configure()
remote:    at Microsoft.DotNet.Cli.Program.ConfigureDotNetForFirstTimeUse(INuGetCacheSentinel nugetCacheSentinel IFirstTimeUseNoticeSentinel firstTimeUseNotice
Sentinel IAspNetCertificateSentinel aspNetCertificateSentinel CliFolderPathCalculator cliFolderPathCalculator Boolean hasSuperUserAccess)
remote:    at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args ITelemetry telemetryClient)
remote:    at Microsoft.DotNet.Cli.Program.Main(String[] args)
remote:
remote: Error - Changes committed to remote repository but deployment to website failed.


## Environment data
SDK 2.1.300-preview2-008367
Azure Web App





</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8869</IssueLabelID>
    <Title>Better help text on `dotnet tool`</Title>
    <Description>As in

</Description>
    <Title_Description>Better help text on 
</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8866</IssueLabelID>
    <Title>TestPlatform 15.7 preview 3 insertion</Title>
    <Description>Tesplatform release note [here](https://github.com/Microsoft/vstest-docs/blob/master/docs/releases.md#1570-preview-20180320-02)</Description>
    <Title_Description>TestPlatform 15.7 preview 3 insertion Tesplatform release note [here](https://github.com/Microsoft/vstest-docs/blob/master/docs/releases.md#1570-preview-20180320-02)</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>22/03/2018 8:56:56 AM +00:00</CreatedAt>
    <ClosedAt>22/03/2018 11:07:17 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8861</IssueLabelID>
    <Title>Catch bundled commands that may not be sourcebuild-able </Title>
    <Description>Or it should be in program.cs

a list of explicit commands that may not be sourcebuild-able. And when resolver hit this list after searching other places. It should display and guide user to run </Description>
    <Title_Description>Catch bundled commands that may not be sourcebuild-able  Or it should be in program.cs

a list of explicit commands that may not be sourcebuild-able. And when resolver hit this list after searching other places. It should display and guide user to run </Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8853</IssueLabelID>
    <Title>Updating NuGet to 4.6.1-rtm-5019</Title>
    <Description>
    </Description>
    <Title_Description>Updating NuGet to 4.6.1-rtm-5019 </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>20/03/2018 9:23:37 PM +00:00</CreatedAt>
    <ClosedAt>20/03/2018 10:56:44 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8829</IssueLabelID>
    <Title>Tool installation with relative --tool-path option fails to install.</Title>
    <Description>## Steps to reproduce
1. 

## Bug

The tool package store is storing a relative path instead of a full path causing a relative path to be passed to NuGet via the temp project.  Thus NuGet restores relative to the temp project directory and not the current working directory.</Description>
    <Title_Description>Tool installation with relative --tool-path option fails to install. ## Steps to reproduce
1. 

## Bug

The tool package store is storing a relative path instead of a full path causing a relative path to be passed to NuGet via the temp project.  Thus NuGet restores relative to the temp project directory and not the current working directory.</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8825</IssueLabelID>
    <Title>full framework shim cannot work on Windows nano service</Title>
    <Description>Windows nano service don't have full framework pre installed






</Description>
    <Title_Description>full framework shim cannot work on Windows nano service Windows nano service don't have full framework pre installed






</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8824</IssueLabelID>
    <Title>WIP: Testing...</Title>
    <Description>- The '-n' option to 'cp' does not exist for Alpine [try "-u"]
- Don't use "$ID.$VERSION_ID" for the error message

Addresses: https://github.com/dotnet/cli/issues/8738
**CP options for Alpine:**
From: http://www.spblinux.de/2.0/doc/cp.html
	-a      Same as -dpR
	-d      Preserve links
	-p      Preserve file attributes if possible
	-R      Copy directories recursively

(testing something)</Description>
    <Title_Description>WIP: Testing... - The '-n' option to 'cp' does not exist for Alpine [try "-u"]
- Don't use "$ID.$VERSION_ID" for the error message

Addresses: https://github.com/dotnet/cli/issues/8738
**CP options for Alpine:**
From: http://www.spblinux.de/2.0/doc/cp.html
	-a      Same as -dpR
	-d      Preserve links
	-p      Preserve file attributes if possible
	-R      Copy directories recursively

(testing something)</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8821</IssueLabelID>
    <Title>Alpine fix; plus 1</Title>
    <Description>- The '-n' option to 'cp' does not exist for Alpine [try "-u"]
- Don't use "$ID.$VERSION_ID" for the error message

Addresses: https://github.com/dotnet/cli/issues/8738
**CP options for Alpine:**
From: http://www.spblinux.de/2.0/doc/cp.html
	-a      Same as -dpR
	-d      Preserve links
	-p      Preserve file attributes if possible
	-R      Copy directories recursively</Description>
    <Title_Description>Alpine fix; plus 1 - The '-n' option to 'cp' does not exist for Alpine [try "-u"]
- Don't use "$ID.$VERSION_ID" for the error message

Addresses: https://github.com/dotnet/cli/issues/8738
**CP options for Alpine:**
From: http://www.spblinux.de/2.0/doc/cp.html
	-a      Same as -dpR
	-d      Preserve links
	-p      Preserve file attributes if possible
	-R      Copy directories recursively</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8816</IssueLabelID>
    <Title>Fix help text in `dotnet remove` and 'dotnet add' commands</Title>
    <Description>## Steps to reproduce






</Description>
    <Title_Description>Fix help text in 




</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8812</IssueLabelID>
    <Title>Help is wrong for some commands</Title>
    <Description>## Steps to reproduce

$ dotnet install --help

## Expected  behavior

dotnet install [options] [command]

## Actual behavior

dotnet install [options] [command]

In fact -g must come after "tool" which is shown correctly in

$ dotnet install tool --help
dotnet install tool [options] &lt;PACKAGE_ID&gt;

## Environment data
.NET Command Line Tools (2.1.300-preview2-008260)

Product Information:
 Version:            2.1.300-preview2-008260
 Commit SHA-1 hash:  4f2e060ef3

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.13
 OS Platform: Darwin
 RID:         osx.10.13-x64
 Base Path:   /usr/local/share/dotnet/sdk/2.1.300-preview2-008260/

Microsoft .NET Core Shared Framework Host

  Version  : 2.1.0-preview2-26131-06
  Build    : b13a0d5c331f374afd35ded57b9a4b4ab128864c






</Description>
    <Title_Description>Help is wrong for some commands ## Steps to reproduce

$ dotnet install --help

## Expected  behavior

dotnet install [options] [command]

## Actual behavior

dotnet install [options] [command]

In fact -g must come after "tool" which is shown correctly in

$ dotnet install tool --help
dotnet install tool [options] &lt;PACKAGE_ID&gt;

## Environment data
.NET Command Line Tools (2.1.300-preview2-008260)

Product Information:
 Version:            2.1.300-preview2-008260
 Commit SHA-1 hash:  4f2e060ef3

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.13
 OS Platform: Darwin
 RID:         osx.10.13-x64
 Base Path:   /usr/local/share/dotnet/sdk/2.1.300-preview2-008260/

Microsoft .NET Core Shared Framework Host

  Version  : 2.1.0-preview2-26131-06
  Build    : b13a0d5c331f374afd35ded57b9a4b4ab128864c






</Title_Description>
    <Label>Bug</Label>
    <CreatedAt>16/03/2018 12:48:39 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8809</IssueLabelID>
    <Title>Better using facing string</Title>
    <Description>Fix https://github.com/dotnet/cli/issues/8728

Fix https://github.com/dotnet/cli/issues/8369</Description>
    <Title_Description>Better using facing string Fix https://github.com/dotnet/cli/issues/8728

Fix https://github.com/dotnet/cli/issues/8369</Title_Description>
    <Label>tool</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>15/03/2018 10:09:03 PM +00:00</CreatedAt>
    <ClosedAt>17/03/2018 12:00:15 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8805</IssueLabelID>
    <Title>Add tool package format version metadata to packed tool in settings file</Title>
    <Description>To support better error message when future version come.

@KathleenDollard  should it be )

cc @dotnet/dotnet-cli 

- [x] change on CLI to warning when major version is different
- [x] change on SDK to put version on packtool</Description>
    <Title_Description>Add tool package format version metadata to packed tool in settings file To support better error message when future version come.

@KathleenDollard  should it be )

cc @dotnet/dotnet-cli 

- [x] change on CLI to warning when major version is different
- [x] change on SDK to put version on packtool</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8803</IssueLabelID>
    <Title>List tool should implement `--tool-path` option.</Title>
    <Description>## Steps to reproduce
1. 






</Description>
    <Title_Description>List tool should implement 






</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8802</IssueLabelID>
    <Title>Running "dotnet store" command fails with "MSB3026: Could not copy" errors</Title>
    <Description>_From @Petermarcu on February 21 2018 1:41_

@scottmendel commented on [Tue Feb 20 2018](https://github.com/dotnet/core/issues/1274)

# Issue Title

Be as descriptive as you can with your title.

# General

Provide details on the problem you are experiencing including the .NET Core version operating system version and anything else that is relevant.

Please provide a code sample for your issue if it is relevant either inline link to a gist (or similar) or add it as a zipped attachment.

For some issues you will get a quicker and better response if you file it at a more specific [.NET repo](https://github.com/dotnet/core/blob/master/Documentation/core-repos.md). For example if the problem is with ASP.NET Core you are encouraged to use the [aspnet/home repo](https://github.com/aspnet/home/issues).


---

@scottmendel commented on [Tue Feb 20 2018](https://github.com/dotnet/core/issues/1274#issuecomment-367117947)

Apologies I submitted this accidentally while trying to fill in the details. I will try and reopen with details. 

---

@scottmendel commented on [Tue Feb 20 2018](https://github.com/dotnet/core/issues/1274#issuecomment-367129103)

I ran the following command: dotnet.exe store --skip-optimization -m "C:\Panorama\hedzup\mn\bin\InstallNetCore.manifest" -o "C:\Program Files\dotnet\store"

I received the following error: C:\Program Files\dotnet\sdk\2.0.0\Sdks\Microsoft.NET.Sdk\build\Microsoft.NET.ComposeStore.targets(3515): warning MSB3026: Could not copy "C:\Program Files\dotnet\sdk\NuGetFallbackFolder\microsoft.aspnetcore.antiforgery\2.0.0\lib\netstandard2.0\Microsoft.AspNetCore.Antiforgery.dll" to "C:\Program Files\dotnet\store\x64\netcoreapp2.0\\microsoft.aspnetcore.antiforgery\2.0.0\lib\netstandard2.0\Microsoft.AspNetCore.Antiforgery.dll". 

The assembly in question was in fact "in use" but I expect this is a problem that needs to be addressed. The Microsoft.AspNetCore.Antiforgery dll in the NuGetFallBackFolder I suspect is "Any CPU" at least the "Optional" PE header marks it with magic 0x10B. The same assembly in the store has a optional header with magic 0x20B which makes it an x64 version of the same assembly. The version of the assembly is the same in both cases 2.0.0.17205 so I am wondering why the copy is even attempted. because this is the "x64" area of the store replacing the "x64 version of the assembly with the "Any CPU" version this seems like it is undoing an optimization made previously.

I am attempting to add something to the store but not this assembly. Microsoft.AspNetCore.Antiforgery is a dependency of another assembly that is the main target of the store command which is Riverbed.AppInternals.DotNetCore.dll. But the store command will not complete. I do understand that stopping the dotnet applications using the antiforgery dll will work around the problem but we have a requirement to do a "hot" install on a production server where it is not desirable to stop services that are running.

If I remove the --skip-optimazation flag I run into the reverse scenario; assemblies can be "in use" trying to place optimized version of the assemblies into the store area. 

Conceptually I would like the store command to add only the dependencies that are missing and not get hung up on things that already may be in the store and possibly in use. 

Environment Details:

.NET Command Line Tools (2.1.2)
Product Information:
 Version:            2.1.2
 Commit SHA-1 hash:  5695315371
Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.2\
Microsoft .NET Core Shared Framework Host
  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54




_Copied from original issue: dotnet/core-setup#3712_</Description>
    <Title_Description>Running "dotnet store" command fails with "MSB3026: Could not copy" errors _From @Petermarcu on February 21 2018 1:41_

@scottmendel commented on [Tue Feb 20 2018](https://github.com/dotnet/core/issues/1274)

# Issue Title

Be as descriptive as you can with your title.

# General

Provide details on the problem you are experiencing including the .NET Core version operating system version and anything else that is relevant.

Please provide a code sample for your issue if it is relevant either inline link to a gist (or similar) or add it as a zipped attachment.

For some issues you will get a quicker and better response if you file it at a more specific [.NET repo](https://github.com/dotnet/core/blob/master/Documentation/core-repos.md). For example if the problem is with ASP.NET Core you are encouraged to use the [aspnet/home repo](https://github.com/aspnet/home/issues).


---

@scottmendel commented on [Tue Feb 20 2018](https://github.com/dotnet/core/issues/1274#issuecomment-367117947)

Apologies I submitted this accidentally while trying to fill in the details. I will try and reopen with details. 

---

@scottmendel commented on [Tue Feb 20 2018](https://github.com/dotnet/core/issues/1274#issuecomment-367129103)

I ran the following command: dotnet.exe store --skip-optimization -m "C:\Panorama\hedzup\mn\bin\InstallNetCore.manifest" -o "C:\Program Files\dotnet\store"

I received the following error: C:\Program Files\dotnet\sdk\2.0.0\Sdks\Microsoft.NET.Sdk\build\Microsoft.NET.ComposeStore.targets(3515): warning MSB3026: Could not copy "C:\Program Files\dotnet\sdk\NuGetFallbackFolder\microsoft.aspnetcore.antiforgery\2.0.0\lib\netstandard2.0\Microsoft.AspNetCore.Antiforgery.dll" to "C:\Program Files\dotnet\store\x64\netcoreapp2.0\\microsoft.aspnetcore.antiforgery\2.0.0\lib\netstandard2.0\Microsoft.AspNetCore.Antiforgery.dll". 

The assembly in question was in fact "in use" but I expect this is a problem that needs to be addressed. The Microsoft.AspNetCore.Antiforgery dll in the NuGetFallBackFolder I suspect is "Any CPU" at least the "Optional" PE header marks it with magic 0x10B. The same assembly in the store has a optional header with magic 0x20B which makes it an x64 version of the same assembly. The version of the assembly is the same in both cases 2.0.0.17205 so I am wondering why the copy is even attempted. because this is the "x64" area of the store replacing the "x64 version of the assembly with the "Any CPU" version this seems like it is undoing an optimization made previously.

I am attempting to add something to the store but not this assembly. Microsoft.AspNetCore.Antiforgery is a dependency of another assembly that is the main target of the store command which is Riverbed.AppInternals.DotNetCore.dll. But the store command will not complete. I do understand that stopping the dotnet applications using the antiforgery dll will work around the problem but we have a requirement to do a "hot" install on a production server where it is not desirable to stop services that are running.

If I remove the --skip-optimazation flag I run into the reverse scenario; assemblies can be "in use" trying to place optimized version of the assemblies into the store area. 

Conceptually I would like the store command to add only the dependencies that are missing and not get hung up on things that already may be in the store and possibly in use. 

Environment Details:

.NET Command Line Tools (2.1.2)
Product Information:
 Version:            2.1.2
 Commit SHA-1 hash:  5695315371
Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.2\
Microsoft .NET Core Shared Framework Host
  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54




_Copied from original issue: dotnet/core-setup#3712_</Title_Description>
    <Label>Area: SDK</Label>
    <CreatedAt>15/03/2018 5:29:55 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8800</IssueLabelID>
    <Title>Add back the LZMA for 'arm*' SDKs</Title>
    <Description>Currently 'arm*' SDK's do not include the LZMA for performance upon extraction of the NuGet archive.

Once we have good design for opt-in/acquisition of the LZMA it will be added back into to all 'arm*' SDKs packages.





</Description>
    <Title_Description>Add back the LZMA for 'arm*' SDKs Currently 'arm*' SDK's do not include the LZMA for performance upon extraction of the NuGet archive.

Once we have good design for opt-in/acquisition of the LZMA it will be added back into to all 'arm*' SDKs packages.





</Title_Description>
    <Label>arm</Label>
    <CreatedAt>15/03/2018 3:35:23 PM +00:00</CreatedAt>
    <ClosedAt>29/08/2018 12:39:51 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8797</IssueLabelID>
    <Title>Follow-up PR for Linux-arm; CLI:master</Title>
    <Description>- The badge for 'Linux-arm' should be: "linux_arm_Release_version_badge.svg" not "linux_x64_Release_version_badge.svg"
- Add comment for the LZMA non-inclusion for 'arm*': https://github.com/dotnet/cli/issues/8800
- Turn off collection of test results in Jenkins for 'arm*' since the leg is build-only

Follow-up to PR: https://github.com/dotnet/cli/pull/8791
</Description>
    <Title_Description>Follow-up PR for Linux-arm; CLI:master - The badge for 'Linux-arm' should be: "linux_arm_Release_version_badge.svg" not "linux_x64_Release_version_badge.svg"
- Add comment for the LZMA non-inclusion for 'arm*': https://github.com/dotnet/cli/issues/8800
- Turn off collection of test results in Jenkins for 'arm*' since the leg is build-only

Follow-up to PR: https://github.com/dotnet/cli/pull/8791
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8791</IssueLabelID>
    <Title>Enable 'arm' builds in the CLI</Title>
    <Description>Enable Linux-arm builds in the CLI

_BackwardsCompatibilityRuntimes.props_ 
Disable the backward compatible downloads for 'arm*'

_BuildInfo.targets_ 
Straightforward logic for the 'Rid' and 'Architecture'

_BundledRuntimes.props_ 
Disable most the runtime downloads for 'arm*'

_Package.targets_ 
Disable 'GenerateInstallers' target for 'arm*'
formatting...

_Publish.targets 
Badge.targets 
RuntimeCoherence.targets_ 
Disable 'coherent' test and 'coherent' badge for 'arm*'

_Test.targets_ 
Disable the tests for 'arm*'

_redist.csproj_ 
Disable 'crossgen' for 'arm*'

_CheckIfAllBuildsHavePublished.cs_ 
Add the Linux-arm and Win-arm legs...

_run-build.sh 
run-build.ps1_
Enable Architecture=arm*
If Architecture=arm*; install an x64 SDK

**Testing:**
Full set of 'private' VSO builds
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?_a=allDefinitions&amp;path=%5CJBeisner%5C

_On an ARM device:_
"./dotnet new"


**Follow-up:**
Create the 'arm' VSO build definitions</Description>
    <Title_Description>Enable 'arm' builds in the CLI Enable Linux-arm builds in the CLI

_BackwardsCompatibilityRuntimes.props_ 
Disable the backward compatible downloads for 'arm*'

_BuildInfo.targets_ 
Straightforward logic for the 'Rid' and 'Architecture'

_BundledRuntimes.props_ 
Disable most the runtime downloads for 'arm*'

_Package.targets_ 
Disable 'GenerateInstallers' target for 'arm*'
formatting...

_Publish.targets 
Badge.targets 
RuntimeCoherence.targets_ 
Disable 'coherent' test and 'coherent' badge for 'arm*'

_Test.targets_ 
Disable the tests for 'arm*'

_redist.csproj_ 
Disable 'crossgen' for 'arm*'

_CheckIfAllBuildsHavePublished.cs_ 
Add the Linux-arm and Win-arm legs...

_run-build.sh 
run-build.ps1_
Enable Architecture=arm*
If Architecture=arm*; install an x64 SDK

**Testing:**
Full set of 'private' VSO builds
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?_a=allDefinitions&amp;path=%5CJBeisner%5C

_On an ARM device:_
"./dotnet new"


**Follow-up:**
Create the 'arm' VSO build definitions</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8779</IssueLabelID>
    <Title>Ensure the delivery of communication on "preview1 SDK packed dotnetTool cannot work on next preview or release"</Title>
    <Description>Due to preview runtime will not move forward. The conclusion of this Monday's (3/12/2018 ) meeting -- No change on product side but make sure this message is delivered via a blog post.</Description>
    <Title_Description>Ensure the delivery of communication on "preview1 SDK packed dotnetTool cannot work on next preview or release" Due to preview runtime will not move forward. The conclusion of this Monday's (3/12/2018 ) meeting -- No change on product side but make sure this message is delivered via a blog post.</Title_Description>
    <Label>documentation</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8762</IssueLabelID>
    <Title>Better error message to guide user when there is only preview version in the feed</Title>
    <Description>It is hard for user to take the right action -- 


Current experience:
![image](https://user-images.githubusercontent.com/6993335/37232747-265a2520-23a5-11e8-9f24-d4217bbc9a49.png)

</Description>
    <Title_Description>Better error message to guide user when there is only preview version in the feed It is hard for user to take the right action -- 


Current experience:
![image](https://user-images.githubusercontent.com/6993335/37232747-265a2520-23a5-11e8-9f24-d4217bbc9a49.png)

</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8760</IssueLabelID>
    <Title>Tool commands should not permit concurrent operations.</Title>
    <Description>## Steps to reproduce
1. Run </Description>
    <Title_Description>Tool commands should not permit concurrent operations. ## Steps to reproduce
1. Run </Title_Description>
    <Label>tool</Label>
    <CreatedAt>9/03/2018 7:28:47 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8757</IssueLabelID>
    <Title>SDK 2.1.100 installed after updating VS 2017 15.6.1</Title>
    <Description>@Vaiune commented on [Fri Mar 09 2018](https://github.com/dotnet/core/issues/1329)

I've updated visual studio 2017 to 15.6.1 this morning.
After that i got 
 shows 2.1.100.

I unfortunately cannot confirm that it said 2.1.4 prior to the VS update.

</Description>
    <Title_Description>SDK 2.1.100 installed after updating VS 2017 15.6.1 @Vaiune commented on [Fri Mar 09 2018](https://github.com/dotnet/core/issues/1329)

I've updated visual studio 2017 to 15.6.1 this morning.
After that i got 
 shows 2.1.100.

I unfortunately cannot confirm that it said 2.1.4 prior to the VS update.

</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8738</IssueLabelID>
    <Title>dotnet-install.sh fails to install SDK on Alpine Linux</Title>
    <Description>## Steps to reproduce
</Description>
    <Title_Description>dotnet-install.sh fails to install SDK on Alpine Linux ## Steps to reproduce
</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8731</IssueLabelID>
    <Title>Update CoreSetup to preview2-26306-04 (master)</Title>
    <Description>/cc @dotnet/dotnet-cli</Description>
    <Title_Description>Update CoreSetup to preview2-26306-04 (master) /cc @dotnet/dotnet-cli</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8728</IssueLabelID>
    <Title>Review user facing strings from pull-8716</Title>
    <Description>https://github.com/dotnet/cli/pull/8716/files#diff-c48d6b1e99aab51dc486bc33cd2b5a7aR629
</Description>
    <Title_Description>Review user facing strings from pull-8716 https://github.com/dotnet/cli/pull/8716/files#diff-c48d6b1e99aab51dc486bc33cd2b5a7aR629
</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8724</IssueLabelID>
    <Title>PackTool nuspec has p2p dependencies</Title>
    <Description>Given  due to "cannot find the package -- packageId = "library" version = 1.0.0"</Description>
    <Title_Description>PackTool nuspec has p2p dependencies Given  due to "cannot find the package -- packageId = "library" version = 1.0.0"</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8712</IssueLabelID>
    <Title>Creating and publishing 'symbols.nuget' to the blob feed.</Title>
    <Description>**Main initiative:**
Create and publish 2 symbols nupkgs: 

</Description>
    <Title_Description>Creating and publishing 'symbols.nuget' to the blob feed. **Main initiative:**
Create and publish 2 symbols nupkgs: 

</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8709</IssueLabelID>
    <Title>Add a space when instructing people how to call dotnet global tools</Title>
    <Description>
 
# Steps to reproduce

Install a global tool that is prefixed with dotnet.

## Expected  behavior

The installation succeeded. If there are no further instructions you can type the following command
in shell directly to invoke: dotnet user-secrets

## Actual behavior

The installation succeeded. If there are no further instructions you can type the following command
in shell directly to invoke: dotnet-user-secrets

Note that there is a dash following dotnet instead of a space although the user should type with a space. 
 
## Environment data
 output:






</Description>
    <Title_Description>Add a space when instructing people how to call dotnet global tools 
 
# Steps to reproduce

Install a global tool that is prefixed with dotnet.

## Expected  behavior

The installation succeeded. If there are no further instructions you can type the following command
in shell directly to invoke: dotnet user-secrets

## Actual behavior

The installation succeeded. If there are no further instructions you can type the following command
in shell directly to invoke: dotnet-user-secrets

Note that there is a dash following dotnet instead of a space although the user should type with a space. 
 
## Environment data
 output:






</Title_Description>
    <Label>tool</Label>
    <CreatedAt>1/03/2018 12:42:38 AM +00:00</CreatedAt>
    <ClosedAt>12/03/2018 8:46:28 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8707</IssueLabelID>
    <Title>Tool install with nuget error should not display the temp project in output</Title>
    <Description>## Steps to reproduce

See related issue #8698.





</Description>
    <Title_Description>Tool install with nuget error should not display the temp project in output ## Steps to reproduce

See related issue #8698.





</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8705</IssueLabelID>
    <Title>Cannot create tool with P2P using dotnet pack</Title>
    <Description>fail with 


_Copied from original issue: dotnet/sdk#1998_</Description>
    <Title_Description>Cannot create tool with P2P using dotnet pack fail with 


_Copied from original issue: dotnet/sdk#1998_</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8698</IssueLabelID>
    <Title>Provide a clearer error message when dotnet-install-tool fails because of incorrect package type</Title>
    <Description>## Steps to reproduce
: 2.1.300-preview1-008174

cc @wli3 @KathleenDollard @shanselman 

cref https://github.com/aspnet/DotNetTools/issues/399 and https://github.com/aspnet/Announcements/issues/290#issuecomment-369015372



</Description>
    <Title_Description>Provide a clearer error message when dotnet-install-tool fails because of incorrect package type ## Steps to reproduce
: 2.1.300-preview1-008174

cc @wli3 @KathleenDollard @shanselman 

cref https://github.com/aspnet/DotNetTools/issues/399 and https://github.com/aspnet/Announcements/issues/290#issuecomment-369015372



</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8693</IssueLabelID>
    <Title>Update to the 15.6 RTM version of the test SDK in templates</Title>
    <Description>Carries the update made by @jayaranigarg in https://github.com/dotnet/templating/pull/1420</Description>
    <Title_Description>Update to the 15.6 RTM version of the test SDK in templates Carries the update made by @jayaranigarg in https://github.com/dotnet/templating/pull/1420</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>27/02/2018 8:43:27 PM +00:00</CreatedAt>
    <ClosedAt>13/03/2018 11:31:36 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8691</IssueLabelID>
    <Title>Implement the `list tool` command.</Title>
    <Description>This PR implements the  command.

The command is responsible for displaying a list of install global tools.

Fixes #8548.

Also fixes #8682.</Description>
    <Title_Description>Implement the  command.

The command is responsible for displaying a list of install global tools.

Fixes #8548.

Also fixes #8682.</Title_Description>
    <Label>tool</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>27/02/2018 2:40:15 AM +00:00</CreatedAt>
    <ClosedAt>6/03/2018 12:52:41 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8690</IssueLabelID>
    <Title>The dotnet install tool fails if a feed can't be reached even if the package is available in the offline cache. </Title>
    <Description>For example this might happen when the machine is offline

Due to by default nuget will throw if the a feed cannot reach.

</Description>
    <Title_Description>The dotnet install tool fails if a feed can't be reached, even if the package is available in the offline cache.  For example this might happen when the machine is offline

Due to by default nuget will throw if the a feed cannot reach.

</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8682</IssueLabelID>
    <Title>Failure to install/uninstall tool when package id is not all lower case</Title>
    <Description>## Steps to reproduce
1. 






</Description>
    <Title_Description>Failure to install/uninstall tool when package id is not all lower case ## Steps to reproduce
1. 






</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8680</IssueLabelID>
    <Title>Locally cached runtime/sdk images for dotnet-install</Title>
    <Description>I could use a new feature in  that would cache the files locally as the filenames vary for each version. 

I run dotnet-install during CI jobs and it downloads the image on every call where it could be cached locally instead. I believe that passing a custom cache folder would be enough and if the file is found locally the azure feed would not be used.

This would be opt-in so any wrong behavior would be on the user's responsibility to clear the cache.</Description>
    <Title_Description>Locally cached runtime/sdk images for dotnet-install I could use a new feature in  that would cache the files locally as the filenames vary for each version. 

I run dotnet-install during CI jobs and it downloads the image on every call where it could be cached locally instead. I believe that passing a custom cache folder would be enough and if the file is found locally the azure feed would not be used.

This would be opt-in so any wrong behavior would be on the user's responsibility to clear the cache.</Title_Description>
    <Label>enhancement</Label>
    <CreatedAt>24/02/2018 6:35:01 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8678</IssueLabelID>
    <Title>Enable `dotnet sln` to add SLN-level files</Title>
    <Description>I wasn't able to add SLN-level files to a  file with the commandline tools. VS enables me to do this.</Description>
    <Title_Description>Enable  file with the commandline tools. VS enables me to do this.</Title_Description>
    <Label>good first issue</Label>
    <CreatedAt>24/02/2018 12:29:37 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8669</IssueLabelID>
    <Title>Improve --info output</Title>
    <Description>This is for the CLI side of issue: https://github.com/dotnet/core-setup/issues/3502

We'd like to get these changes into 2.1.

Current:


cc @KathleenDollard @livarcocc </Description>
    <Title_Description>Improve --info output This is for the CLI side of issue: https://github.com/dotnet/core-setup/issues/3502

We'd like to get these changes into 2.1.

Current:


cc @KathleenDollard @livarcocc </Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8668</IssueLabelID>
    <Title>Dotnet install tool doesn't throw an error when a tool with the same name is already instaled</Title>
    <Description>Appears to be a regression of #8479
## Steps to reproduce
Create 2 projects to be used with different names
 output:

.NET Command Line Tools (2.1.300-preview1-008174)

Product Information:
 Version:            2.1.300-preview1-008174
 Commit SHA-1 hash:  b8df89a54f

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview1-008174\

Microsoft .NET Core Shared Framework Host

  Version  : 2.1.0-preview1-26216-03
  Build    : f2c3216183d20416568a4bbf5bb7d153e826f153




</Description>
    <Title_Description>Dotnet install tool doesn't throw an error when a tool with the same name is already instaled Appears to be a regression of #8479
## Steps to reproduce
Create 2 projects to be used with different names
 output:

.NET Command Line Tools (2.1.300-preview1-008174)

Product Information:
 Version:            2.1.300-preview1-008174
 Commit SHA-1 hash:  b8df89a54f

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview1-008174\

Microsoft .NET Core Shared Framework Host

  Version  : 2.1.0-preview1-26216-03
  Build    : f2c3216183d20416568a4bbf5bb7d153e826f153




</Title_Description>
    <Label>tool</Label>
    <CreatedAt>22/02/2018 8:37:42 PM +00:00</CreatedAt>
    <ClosedAt>22/02/2018 11:23:00 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8664</IssueLabelID>
    <Title>LOC CHECKIN | cli master | 20180222</Title>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8647</IssueLabelID>
    <Title>Tag non-shipping nupkg as 'NonShipping=true' in the manifest.</Title>
    <Description>
microsoft.dotnet.msbuildsdkresolver.2.1.300-preview2-008217.nupkg should be tagged as "nonshipping" to prevent the final publishing on nuget.org</Description>
    <Title_Description>Tag non-shipping nupkg as 'NonShipping=true' in the manifest. 
microsoft.dotnet.msbuildsdkresolver.2.1.300-preview2-008217.nupkg should be tagged as "nonshipping" to prevent the final publishing on nuget.org</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8639</IssueLabelID>
    <Title>race condition in build with cross project reference</Title>
    <Description>## Steps to reproduce
run  CLI for not adding a build order XML element to the SLN file.

## Expected  behavior
Build succeeds 100% of the time


## Actual behavior
Build sometimes fails race condition?

## Environment data
.NET Command Line Tools (2.1.4)

Product Information:
 Version:            2.1.4
 Commit SHA-1 hash:  5e8add2190

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.4\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54







</Description>
    <Title_Description>race condition in build with cross project reference ## Steps to reproduce
run  CLI for not adding a build order XML element to the SLN file.

## Expected  behavior
Build succeeds 100% of the time


## Actual behavior
Build sometimes fails race condition?

## Environment data
.NET Command Line Tools (2.1.4)

Product Information:
 Version:            2.1.4
 Commit SHA-1 hash:  5e8add2190

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.4\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54







</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8633</IssueLabelID>
    <Title>Discovery of bundled DotnetTools</Title>
    <Description>Continue of [this](https://github.com/dotnet/cli/pull/8606#issuecomment-365713105) discussion

Should we add DotNetTools Command into help? And what does it look like

Current help text:
</Description>
    <Title_Description>Discovery of bundled DotnetTools Continue of [this](https://github.com/dotnet/cli/pull/8606#issuecomment-365713105) discussion

Should we add DotNetTools Command into help? And what does it look like

Current help text:
</Title_Description>
    <Label>Blocking-RTM</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8630</IssueLabelID>
    <Title>Branding changes for  TestPlatform 15.6 RTM</Title>
    <Description>VS insertion [PR](https://devdiv.visualstudio.com/DevDiv/Automated%20Testing/_git/VS/pullrequest/106851?_a=files&amp;path=%2F.corext%2FConfigs%2Fcomponents.json&amp;discussionId=1014812)
</Description>
    <Title_Description>Branding changes for  TestPlatform 15.6 RTM VS insertion [PR](https://devdiv.visualstudio.com/DevDiv/Automated%20Testing/_git/VS/pullrequest/106851?_a=files&amp;path=%2F.corext%2FConfigs%2Fcomponents.json&amp;discussionId=1014812)
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>16/02/2018 1:17:27 PM +00:00</CreatedAt>
    <ClosedAt>13/03/2018 11:31:08 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8618</IssueLabelID>
    <Title>Enable tools RID filtering availability</Title>
    <Description>https://github.com/dotnet/cli/issues/8617 first

- [x] Until https://github.com/NuGet/Home/issues/6559 is finished
- [x] insert nuget with 6559 into  CLI
- [x] make --source to be additional https://github.com/dotnet/cli/issues/8561
- [ ] Add  to temp project during restore
</Description>
    <Title_Description>Enable tools RID filtering availability https://github.com/dotnet/cli/issues/8617 first

- [x] Until https://github.com/NuGet/Home/issues/6559 is finished
- [x] insert nuget with 6559 into  CLI
- [x] make --source to be additional https://github.com/dotnet/cli/issues/8561
- [ ] Add  to temp project during restore
</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8617</IssueLabelID>
    <Title>Remove Microsoft.NETCore.Platforms dependency requirement for producer</Title>
    <Description>- [x] Pass "any" as RID to nuget during restore of temp project so there is no need for . However that also blocked all RID specific scenarios
- [x] Remove implicit package reference during pack in SDK






</Description>
    <Title_Description>Remove Microsoft.NETCore.Platforms dependency requirement for producer - [x] Pass "any" as RID to nuget during restore of temp project so there is no need for . However that also blocked all RID specific scenarios
- [x] Remove implicit package reference during pack in SDK






</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8613</IssueLabelID>
    <Title>PublishRoslyn generates invalid runtimeconfig.json file</Title>
    <Description>See https://github.com/dotnet/roslyn/issues/24816

In Azure AppService ASP.NET Core ligthup scenario we bring additional deps and runtime store for 2.1-* runtime and set 

This afects preview1 of ASP.NET Core site extension

/cc @muratg @livarcocc @eerhardt 




</Description>
    <Title_Description>PublishRoslyn generates invalid runtimeconfig.json file See https://github.com/dotnet/roslyn/issues/24816

In Azure AppService ASP.NET Core ligthup scenario we bring additional deps and runtime store for 2.1-* runtime and set 

This afects preview1 of ASP.NET Core site extension

/cc @muratg @livarcocc @eerhardt 




</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8605</IssueLabelID>
    <Title>"Session tools"</Title>
    <Description>An experience that has tools available on PATH only during a session. So CI can utilize dotnet tools without changing the environment path</Description>
    <Title_Description>"Session tools" An experience that has tools available on PATH only during a session. So CI can utilize dotnet tools without changing the environment path</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8604</IssueLabelID>
    <Title>Bundle DotNetTools</Title>
    <Description>Tools from repo https://github.com/aspnet/DotNetTools should be bundled with SDK.

verb like  should be available right out of box.

Implementation:
Add these verb to SDK layout and add additional resolver to resolve from that folder.</Description>
    <Title_Description>Bundle DotNetTools Tools from repo https://github.com/aspnet/DotNetTools should be bundled with SDK.

verb like  should be available right out of box.

Implementation:
Add these verb to SDK layout and add additional resolver to resolve from that folder.</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8603</IssueLabelID>
    <Title>Remove SignNupkg and SignSDKResolverContents targets</Title>
    <Description>We have changed our sign project to sign all assemblies together however we had to keep the targets above around so as not to break build definitions that still invoke them.

Once this change permeates to other branches we can then remove the steps from the build defs and delete these empty targets.

See PR https://github.com/dotnet/cli/pull/8601</Description>
    <Title_Description>Remove SignNupkg and SignSDKResolverContents targets We have changed our sign project to sign all assemblies together however we had to keep the targets above around so as not to break build definitions that still invoke them.

Once this change permeates to other branches we can then remove the steps from the build defs and delete these empty targets.

See PR https://github.com/dotnet/cli/pull/8601</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>14/02/2018 12:21:02 AM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8602</IssueLabelID>
    <Title>"ExternalRestoreSources" needs to be set in the docker container</Title>
    <Description>**Follow-up action completed:**
ExternalRestoreSources is set as an VSO variable and removed as a property from BuildArguments in AllLinux: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?context=allDefinitions&amp;path=%5CDotNet%5CCLI%5Cmaster&amp;definitionId=7254
 
_______________________

The "ExternalRestoreSources" value needs to be set in the internal call to 'build.sh'. Another way to say this is: since 'build.sh' writes a new Nuget.Config for the 'SandBox' working directory; "ExternalRestoreSources" needs to be set in the docker container.

**Final fix:**
Using an environmental variable to communicate "ExternalRestoreSources" to the docker container. 
**Follow-up:**
Add "ExternalRestoreSources" as a VSO variable to: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?context=allDefinitions&amp;path=%5CDotNet%5CCLI%5Cmaster&amp;definitionId=7254

_______________________________________

Testing - with "20180213-02" orchestrated build inputs:
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1381420  _FAILED_

New test build:
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1381703  _FAILED_

Reference: https://github.com/Microsoft/msbuild/issues/1622
Passing the 'ExternalRestoreSource's property explictly is not working as msbuild turns the URL into a local path by turning "//" into "/"

**Final try:**
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1382529    **SUCCESS**</Description>
    <Title_Description>"ExternalRestoreSources" needs to be set in the docker container **Follow-up action completed:**
ExternalRestoreSources is set as an VSO variable and removed as a property from BuildArguments in AllLinux: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?context=allDefinitions&amp;path=%5CDotNet%5CCLI%5Cmaster&amp;definitionId=7254
 
_______________________

The "ExternalRestoreSources" value needs to be set in the internal call to 'build.sh'. Another way to say this is: since 'build.sh' writes a new Nuget.Config for the 'SandBox' working directory; "ExternalRestoreSources" needs to be set in the docker container.

**Final fix:**
Using an environmental variable to communicate "ExternalRestoreSources" to the docker container. 
**Follow-up:**
Add "ExternalRestoreSources" as a VSO variable to: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?context=allDefinitions&amp;path=%5CDotNet%5CCLI%5Cmaster&amp;definitionId=7254

_______________________________________

Testing - with "20180213-02" orchestrated build inputs:
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1381420  _FAILED_

New test build:
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1381703  _FAILED_

Reference: https://github.com/Microsoft/msbuild/issues/1622
Passing the 'ExternalRestoreSource's property explictly is not working as msbuild turns the URL into a local path by turning "//" into "/"

**Final try:**
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1382529    **SUCCESS**</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8595</IssueLabelID>
    <Title>Update to roslyn 2.7.0-beta3-62612-07 for 2.1.1xx</Title>
    <Description>This build includes satellites built directly from the roslyn repo and so this PR also removes the messy process of getting them from cli-deps-satellites.

Version obtained from https://github.com/dotnet/versions/blob/master/build-info/dotnet/roslyn/dev15.6/Latest.txt

@livarcocc Please review

@jaredpar Please confirm this version is correct to insert for the CLI that aligns with VS 15.6

@tmeschter FYI</Description>
    <Title_Description>Update to roslyn 2.7.0-beta3-62612-07 for 2.1.1xx This build includes satellites built directly from the roslyn repo and so this PR also removes the messy process of getting them from cli-deps-satellites.

Version obtained from https://github.com/dotnet/versions/blob/master/build-info/dotnet/roslyn/dev15.6/Latest.txt

@livarcocc Please review

@jaredpar Please confirm this version is correct to insert for the CLI that aligns with VS 15.6

@tmeschter FYI</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>13/02/2018 12:48:00 AM +00:00</CreatedAt>
    <ClosedAt>13/02/2018 6:56:05 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8594</IssueLabelID>
    <Title>Update fsharp</Title>
    <Description>Updates F# compiler to match VS 2017.6
</Description>
    <Title_Description>Update fsharp Updates F# compiler to match VS 2017.6
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>12/02/2018 7:55:35 PM +00:00</CreatedAt>
    <ClosedAt>15/02/2018 12:14:46 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8593</IssueLabelID>
    <Title>Can't invoke dotnet-* global tools by tool name on OSX (works on Windows)</Title>
    <Description>## Steps to reproduce
1.   all works as expected.

/cc @Eilon @DamianEdwards 

</Description>
    <Title_Description>Can't invoke dotnet-* global tools by tool name on OSX (works on Windows) ## Steps to reproduce
1.   all works as expected.

/cc @Eilon @DamianEdwards 

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8589</IssueLabelID>
    <Title>Support TildeSlash expand</Title>
    <Description>**Customer scenario**

Consumer install a global tool on CLI that has the command name dotnet-mytool. The consumer cannot invoke the command by .

**Bugs this fixes**

https://github.com/dotnet/cli/issues/8450

**Workarounds if any**

Add the full path of shim to PATH manually.

**Risk**

low

**Performance impact**

no

**Root cause analysis**

CLI command resolver does not implementation the same path logic as bash. 

**How was the bug found?**

Issue filed on GitHub

-----------------------------

fix https://github.com/dotnet/cli/issues/8450

Tilda expand is a [bash behavior](https://www.gnu.org/software/bash/manual/html_node/Tilde-Expansion.html). I only add "~/" expand to $HOME

I cannot find a good way to test PATH. Considering we should not put things in CI's home directory. And if we mock a little bit we are testing string class. So I only manually tested it.</Description>
    <Title_Description>Support TildeSlash expand **Customer scenario**

Consumer install a global tool on CLI that has the command name dotnet-mytool. The consumer cannot invoke the command by .

**Bugs this fixes**

https://github.com/dotnet/cli/issues/8450

**Workarounds if any**

Add the full path of shim to PATH manually.

**Risk**

low

**Performance impact**

no

**Root cause analysis**

CLI command resolver does not implementation the same path logic as bash. 

**How was the bug found?**

Issue filed on GitHub

-----------------------------

fix https://github.com/dotnet/cli/issues/8450

Tilda expand is a [bash behavior](https://www.gnu.org/software/bash/manual/html_node/Tilde-Expansion.html). I only add "~/" expand to $HOME

I cannot find a good way to test PATH. Considering we should not put things in CI's home directory. And if we mock a little bit we are testing string class. So I only manually tested it.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>10/02/2018 3:17:16 AM +00:00</CreatedAt>
    <ClosedAt>12/02/2018 10:59:44 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8588</IssueLabelID>
    <Title>Port Kernel Version telemetry to preview1</Title>
    <Description>Port https://github.com/dotnet/cli/pull/8579 to preview 1.

Pending shiproom approval.</Description>
    <Title_Description>Port Kernel Version telemetry to preview1 Port https://github.com/dotnet/cli/pull/8579 to preview 1.

Pending shiproom approval.</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>10/02/2018 1:21:49 AM +00:00</CreatedAt>
    <ClosedAt>11/02/2018 12:31:51 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8587</IssueLabelID>
    <Title>Do not create a directory with a trailing space</Title>
    <Description>Do not create a directory with a trailing space; it cannot be deleted by conventional methods. The directory behaves as if it wasn't there.

We've seen this impact a Windows leg:
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1370797
Error in "Get sources" step:
Could not find a part of the path 'E:\A\_work\2413\s\bin\3\win81-x86\test\Microsoft.DotNet.ShellShim.Tests\TestAppSimple'

Manual Solution:
In a cmd shell [please notice the trailing space in the directory name]:
rd "\\\\?\\E:\\A\\_work\\2413\\s\\bin\\3\\win81-x86\\test\\Microsoft.DotNet.ShellShim.Tests\\TestAppSimple "
</Description>
    <Title_Description>Do not create a directory with a trailing space Do not create a directory with a trailing space; it cannot be deleted by conventional methods. The directory behaves as if it wasn't there.

We've seen this impact a Windows leg:
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1370797
Error in "Get sources" step:
Could not find a part of the path 'E:\A\_work\2413\s\bin\3\win81-x86\test\Microsoft.DotNet.ShellShim.Tests\TestAppSimple'

Manual Solution:
In a cmd shell [please notice the trailing space in the directory name]:
rd "\\\\?\\E:\\A\\_work\\2413\\s\\bin\\3\\win81-x86\\test\\Microsoft.DotNet.ShellShim.Tests\\TestAppSimple "
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8586</IssueLabelID>
    <Title>GivenEnvironmentAndReporterItCanPrintOutInstructionToAddPath failed in CI due to culture issue</Title>
    <Description>https://ci.dot.net/job/dotnet_cli/job/master/job/debug_windows_nt_es_x64_prtest/777/consoleText

Apparently the test is running with en-US locale and the product is running with es-ES locale.

It seems they are supposed by be aligned by this code:

</Description>
    <Title_Description>GivenEnvironmentAndReporterItCanPrintOutInstructionToAddPath failed in CI due to culture issue https://ci.dot.net/job/dotnet_cli/job/master/job/debug_windows_nt_es_x64_prtest/777/consoleText

Apparently the test is running with en-US locale and the product is running with es-ES locale.

It seems they are supposed by be aligned by this code:

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8580</IssueLabelID>
    <Title>Insert NuGet Build 4.6.0-rtm-4918 into cli</Title>
    <Description>Insert NuGet Build 4.6.0-rtm-4918 into cli release/2.1.1xx branch</Description>
    <Title_Description>Insert NuGet Build 4.6.0-rtm-4918 into cli Insert NuGet Build 4.6.0-rtm-4918 into cli release/2.1.1xx branch</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>9/02/2018 6:52:39 PM +00:00</CreatedAt>
    <ClosedAt>11/02/2018 12:32:37 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8577</IssueLabelID>
    <Title>Installed global tool cannot be run</Title>
    <Description>## Steps to reproduce
* https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180208-05/final/assets/Sdk/2.1.300-preview1-008117/dotnet-sdk-2.1.300-preview1-008117-win-x64.exe
* Execute 






</Description>
    <Title_Description>Installed global tool cannot be run ## Steps to reproduce
* https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180208-05/final/assets/Sdk/2.1.300-preview1-008117/dotnet-sdk-2.1.300-preview1-008117-win-x64.exe
* Execute 






</Title_Description>
    <Label>tool</Label>
    <CreatedAt>9/02/2018 6:16:38 PM +00:00</CreatedAt>
    <ClosedAt>9/02/2018 6:52:21 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8573</IssueLabelID>
    <Title>Confusion when tool install a different package with the same PackageId</Title>
    <Description>This doesn't occur always. It happened to be in the initial attempt for this project type but subsequent attempts work correctly. This also occurred on a shim scenario.

## Steps to reproduce
Install latest .NET Core2.1 preview and latest D15.6
Open cmd prompt
dotnet new console -n multi
Open the .csproj and change the file to:
 output:
.NET Command Line Tools (2.1.300-preview2-008162)

Product Information:
 Version:            2.1.300-preview2-008162
 Commit SHA-1 hash:  5a5a245658

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview2-008162\

Microsoft .NET Core Shared Framework Host

  Version  : 2.1.0-preview2-26131-06
  Build    : b13a0d5c331f374afd35ded57b9a4b4ab128864c

</Description>
    <Title_Description>Confusion when tool install a different package with the same PackageId This doesn't occur always. It happened to be in the initial attempt for this project type but subsequent attempts work correctly. This also occurred on a shim scenario.

## Steps to reproduce
Install latest .NET Core2.1 preview and latest D15.6
Open cmd prompt
dotnet new console -n multi
Open the .csproj and change the file to:
 output:
.NET Command Line Tools (2.1.300-preview2-008162)

Product Information:
 Version:            2.1.300-preview2-008162
 Commit SHA-1 hash:  5a5a245658

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview2-008162\

Microsoft .NET Core Shared Framework Host

  Version  : 2.1.0-preview2-26131-06
  Build    : b13a0d5c331f374afd35ded57b9a4b4ab128864c

</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8565</IssueLabelID>
    <Title>MSBuild 15.6.80</Title>
    <Description>Shiproom approved. Will complete the PR in the morning:
https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_git/VS/pullrequest/105518

Contains:
https://github.com/Microsoft/msbuild/pull/2969 - Drop preview tag for 15.6
https://github.com/Microsoft/msbuild/pull/2959 - Localization hand-back
https://github.com/Microsoft/msbuild/pull/2964 - Build hangs when SDK not found
</Description>
    <Title_Description>MSBuild 15.6.80 Shiproom approved. Will complete the PR in the morning:
https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_git/VS/pullrequest/105518

Contains:
https://github.com/Microsoft/msbuild/pull/2969 - Drop preview tag for 15.6
https://github.com/Microsoft/msbuild/pull/2959 - Localization hand-back
https://github.com/Microsoft/msbuild/pull/2964 - Build hangs when SDK not found
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>8/02/2018 3:29:15 AM +00:00</CreatedAt>
    <ClosedAt>8/02/2018 6:10:31 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8564</IssueLabelID>
    <Title>update for dotnet tool</Title>
    <Description>Check the packageId is the same check version number is increasing

do an uninstall the old and install the new tool in order to make sure shims are consistent.</Description>
    <Title_Description>update, for dotnet tool Check the packageId is the same check version number is increasing

do an uninstall the old and install the new tool in order to make sure shims are consistent.</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8563</IssueLabelID>
    <Title>Error message should have instruction to help investigate from NuGet error message</Title>
    <Description>NuGet is considered **not** an implementation detail of dotnet tools. However when there is error of installation there should be extra instruction to guide consumer to trouble shoot from NuGet's error message</Description>
    <Title_Description>Error message should have instruction to help investigate from NuGet error message NuGet is considered **not** an implementation detail of dotnet tools. However when there is error of installation there should be extra instruction to guide consumer to trouble shoot from NuGet's error message</Title_Description>
    <Label>tool</Label>
    <CreatedAt>7/02/2018 11:24:08 PM +00:00</CreatedAt>
    <ClosedAt>17/04/2018 7:22:11 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8561</IssueLabelID>
    <Title>Change --source to additional instead of exclusive</Title>
    <Description>So if Microsoft.NETCore.Platforms is not in the source folder. CLI can still find it in nugetfallbackfolder

Need to reconsider the opinion name</Description>
    <Title_Description>Change --source to additional instead of exclusive So if Microsoft.NETCore.Platforms is not in the source folder. CLI can still find it in nugetfallbackfolder

Need to reconsider the opinion name</Title_Description>
    <Label>tool</Label>
    <CreatedAt>7/02/2018 10:57:09 PM +00:00</CreatedAt>
    <ClosedAt>11/10/2018 9:09:08 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8557</IssueLabelID>
    <Title>Updating the MSI Installation Note message.</Title>
    <Description>Updating the MSI Installation Note message. Also had to shift components around slightly to make it fit.


![capture](https://user-images.githubusercontent.com/367554/35935507-8ef02e26-0bf5-11e8-8635-e538e6b81d0a.PNG)
</Description>
    <Title_Description>Updating the MSI Installation Note message. Updating the MSI Installation Note message. Also had to shift components around slightly to make it fit.


![capture](https://user-images.githubusercontent.com/367554/35935507-8ef02e26-0bf5-11e8-8635-e538e6b81d0a.PNG)
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>7/02/2018 6:56:58 PM +00:00</CreatedAt>
    <ClosedAt>7/02/2018 10:15:27 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8556</IssueLabelID>
    <Title>Removing all references to a static 'aspnetpatch' Nuget.Config</Title>
    <Description>Reference: https://github.com/dotnet/cli/pull/8553
Referenced PR removed 'NuGet.tempaspnetpatch.config' for test: "RestoreDoesNotUseAnyCliProducedPackagesOnItsTemplates" 


This PR removes 'NuGet.tempaspnetpatch.config' for all tests.

Testing [compile and test]:
Using orchestrated build 20180205-02 inputs; all tests passed.
</Description>
    <Title_Description>Removing all references to a static 'aspnetpatch' Nuget.Config Reference: https://github.com/dotnet/cli/pull/8553
Referenced PR removed 'NuGet.tempaspnetpatch.config' for test: "RestoreDoesNotUseAnyCliProducedPackagesOnItsTemplates" 


This PR removes 'NuGet.tempaspnetpatch.config' for all tests.

Testing [compile and test]:
Using orchestrated build 20180205-02 inputs; all tests passed.
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8553</IssueLabelID>
    <Title>Fixing recent CLI test failures around ASP.NETcore in the orchestrated build</Title>
    <Description>Test: "RestoreDoesNotUseAnyCliProducedPackagesOnItsTemplates" should not use the 'patch' NuGet.tempaspnetpatch.config; but use the Nuget.config at the enlistment root as it contains the private feed entry.


Testing [compile and test]:
Using orchestrated build 20180205-02 inputs; all tests passed.
</Description>
    <Title_Description>Fixing recent CLI test failures around ASP.NETcore in the orchestrated build Test: "RestoreDoesNotUseAnyCliProducedPackagesOnItsTemplates" should not use the 'patch' NuGet.tempaspnetpatch.config; but use the Nuget.config at the enlistment root as it contains the private feed entry.


Testing [compile and test]:
Using orchestrated build 20180205-02 inputs; all tests passed.
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8552</IssueLabelID>
    <Title>Update VersionTools version; CLI:release/2.1.3xx</Title>
    <Description>The BuildTasksFeedTool version and the VersionTools version should be in sync to prevent incompatabilities between these two packages.

Reference: https://github.com/dotnet/cli/pull/8539

Publish errors:
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1358740

E:\A\_work\1992\s\build\publish\PublishContent.targets(295): error : Method not found: 'Void Microsoft.DotNet.VersionTools.BuildManifest.Model.BuildIdentity..ctor()'
E:\A\_work\1992\s\build\publish\PublishContent.targets(295): error :    at Microsoft.DotNet.Build.Tasks.Feed.PushToBlobFeed.&lt;PushBuildManifestAsync&gt;d__65.MoveNext()

</Description>
    <Title_Description>Update VersionTools version; CLI:release/2.1.3xx The BuildTasksFeedTool version and the VersionTools version should be in sync to prevent incompatabilities between these two packages.

Reference: https://github.com/dotnet/cli/pull/8539

Publish errors:
https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1358740

E:\A\_work\1992\s\build\publish\PublishContent.targets(295): error : Method not found: 'Void Microsoft.DotNet.VersionTools.BuildManifest.Model.BuildIdentity..ctor()'
E:\A\_work\1992\s\build\publish\PublishContent.targets(295): error :    at Microsoft.DotNet.Build.Tasks.Feed.PushToBlobFeed.&lt;PushBuildManifestAsync&gt;d__65.MoveNext()

</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8551</IssueLabelID>
    <Title>portable global tool summary issue</Title>
    <Description>- [x] uninstall https://github.com/dotnet/cli/issues/8549
- [x] list https://github.com/dotnet/cli/issues/8548
- [x] update https://github.com/dotnet/cli/issues/8564
- [x] prelease https://github.com/dotnet/cli/issues/8485
- [x] Remove Microsoft.NETCore.Platforms dependency requirement for producer https://github.com/dotnet/cli/issues/8617
- [x] p2p pack tool https://github.com/dotnet/sdk/issues/1998</Description>
    <Title_Description>portable global tool summary issue - [x] uninstall https://github.com/dotnet/cli/issues/8549
- [x] list https://github.com/dotnet/cli/issues/8548
- [x] update https://github.com/dotnet/cli/issues/8564
- [x] prelease https://github.com/dotnet/cli/issues/8485
- [x] Remove Microsoft.NETCore.Platforms dependency requirement for producer https://github.com/dotnet/cli/issues/8617
- [x] p2p pack tool https://github.com/dotnet/sdk/issues/1998</Title_Description>
    <Label>tool</Label>
    <CreatedAt>7/02/2018 4:18:32 AM +00:00</CreatedAt>
    <ClosedAt>17/03/2018 12:00:43 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8550</IssueLabelID>
    <Title>--force dotnet install tool -g with override existing command</Title>
    <Description> will invoke Bob's vim</Description>
    <Title_Description>--force, dotnet install tool -g with override existing command  will invoke Bob's vim</Title_Description>
    <Label>tool</Label>
    <CreatedAt>7/02/2018 4:15:25 AM +00:00</CreatedAt>
    <ClosedAt>8/02/2018 12:45:50 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8549</IssueLabelID>
    <Title>uninstall in dotnet install tool -g</Title>
    <Description>
    </Description>
    <Title_Description>uninstall, in dotnet install tool -g 

</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8548</IssueLabelID>
    <Title>list in dotnet install tool -g </Title>
    <Description>List should show all global tool installed on the machine along with the version and command name</Description>
    <Title_Description>list, in dotnet install tool -g  List should show all global tool installed on the machine along with the version and command name</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8546</IssueLabelID>
    <Title>Allow including an exe shim for global tools</Title>
    <Description>Reading through the plan for Global Tools in 2.1 I noticed it mentioned generating an exe shim. It would be useful if there was a way to provide one in the package instead that would be used on Windows.

Question comes down to code signing namely how can I sign the entry-point of my application? If I can include one or more shims then those could be signed if the platform supports code signing. 






</Description>
    <Title_Description>Allow including an exe shim for global tools Reading through the plan for Global Tools in 2.1 I noticed it mentioned generating an exe shim. It would be useful if there was a way to provide one in the package instead that would be used on Windows.

Question comes down to code signing namely how can I sign the entry-point of my application? If I can include one or more shims then those could be signed if the platform supports code signing. 






</Title_Description>
    <Label>tool</Label>
    <CreatedAt>6/02/2018 4:45:26 PM +00:00</CreatedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8541</IssueLabelID>
    <Title>Infrastructure updates: CLI:master -&gt; release/2.1.3xx</Title>
    <Description>Cherry-picking infrastructure updates into CLI:release/2.1.3xx

**Orchestrated final publish**
Reference: dotnet/core-eng#2407 
Contains: https://github.com/dotnet/cli/pull/8504
	Commit 8649a5c6
.\build\publish\publishnupkgtoblobfeed.targets
.\build\publish\publishcontent.targets
.\build\publish.targets
.\build\dependencyversions.props
.\build\azureinfo.props


**Use a unchanging version for 'Microsoft.NETCore.App'** 
Contains: https://github.com/dotnet/cli/pull/8448
	Commit 579e8473
.\build_projects\dotnet-cli-build\dotnet-cli-build.csproj


**Repairing the first pass call to 'dotnet msbuild'**
Contains: https://github.com/dotnet/cli/pull/8497 &amp; https://github.com/dotnet/cli/pull/8488
	 Commit 3e35517c
	 Commit 71f22a9f
.\run-build.sh
.\run-build.ps1



</Description>
    <Title_Description>Infrastructure updates: CLI:master -&gt; release/2.1.3xx Cherry-picking infrastructure updates into CLI:release/2.1.3xx

**Orchestrated final publish**
Reference: dotnet/core-eng#2407 
Contains: https://github.com/dotnet/cli/pull/8504
	Commit 8649a5c6
.\build\publish\publishnupkgtoblobfeed.targets
.\build\publish\publishcontent.targets
.\build\publish.targets
.\build\dependencyversions.props
.\build\azureinfo.props


**Use a unchanging version for 'Microsoft.NETCore.App'** 
Contains: https://github.com/dotnet/cli/pull/8448
	Commit 579e8473
.\build_projects\dotnet-cli-build\dotnet-cli-build.csproj


**Repairing the first pass call to 'dotnet msbuild'**
Contains: https://github.com/dotnet/cli/pull/8497 &amp; https://github.com/dotnet/cli/pull/8488
	 Commit 3e35517c
	 Commit 71f22a9f
.\run-build.sh
.\run-build.ps1



</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8536</IssueLabelID>
    <Title>Fixing the recent CLI test failures around ASP.NETcore</Title>
    <Description>Fixing the recent CLI test failures around ASP.NETcore in the orchestrated build: adding a 'dotnet-corefxlab' feed.


**Failing tests:**
Microsoft.DotNet.New.Tests.GivenThatIWantANewAppWithSpecifiedType.TemplateRestoresAndBuildsWithoutWarnings
Microsoft.DotNet.New.Tests.GivenThatIWantANewApp.RestoreDoesNotUseAnyCliProducedPackagesOnItsTemplates

**The basic errors:**
but System.IO.Pipelines 0.1.0-preview1-180129-1 was not found
but System.Text.Encodings.Web.Utf8 0.1.0-preview1-180129-1 was not found

**Solution:**
1) Adding the feed: add key="dotnet-corefxlab" value="https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json"
2) removing duplicate feeds

**Testing:**
1) Non-orchestrated baseline Compile &amp; Test [Win-x64]
2) Orchestrated Compile &amp; Test [Win-x64]

_Orchestrated build inputs:_
PB_RestoreSource=https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/cli-inputs/index.json
PB_PackageVersionPropsUrl=https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/cli-inputs/orchestration-metadata/PackageVersions.props
PB_AssetRootUrl=https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/cli-inputs/assets/
</Description>
    <Title_Description>Fixing the recent CLI test failures around ASP.NETcore Fixing the recent CLI test failures around ASP.NETcore in the orchestrated build: adding a 'dotnet-corefxlab' feed.


**Failing tests:**
Microsoft.DotNet.New.Tests.GivenThatIWantANewAppWithSpecifiedType.TemplateRestoresAndBuildsWithoutWarnings
Microsoft.DotNet.New.Tests.GivenThatIWantANewApp.RestoreDoesNotUseAnyCliProducedPackagesOnItsTemplates

**The basic errors:**
but System.IO.Pipelines 0.1.0-preview1-180129-1 was not found
but System.Text.Encodings.Web.Utf8 0.1.0-preview1-180129-1 was not found

**Solution:**
1) Adding the feed: add key="dotnet-corefxlab" value="https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json"
2) removing duplicate feeds

**Testing:**
1) Non-orchestrated baseline Compile &amp; Test [Win-x64]
2) Orchestrated Compile &amp; Test [Win-x64]

_Orchestrated build inputs:_
PB_RestoreSource=https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/cli-inputs/index.json
PB_PackageVersionPropsUrl=https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/cli-inputs/orchestration-metadata/PackageVersions.props
PB_AssetRootUrl=https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/cli-inputs/assets/
</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8529</IssueLabelID>
    <Title>MacOS pkg installer does not include aspnetcore runtime</Title>
    <Description>The pkg installer for macOS doesn't install the aspnetcore runtime on my machine. However the tar.gz for macOS contains the runtimes.

## Steps to reproduce
Download https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/final/assets/Sdk/2.1.300-preview1-008019/dotnet-sdk-2.1.300-preview1-008019-osx-x64.pkg
Install

## Expected  behavior
Should contain two aspnetcore runtimes


## Actual behavior
No aspnetcore shared runtime installed.

Compare to this: https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/final/assets/Sdk/2.1.300-preview1-008019/dotnet-sdk-2.1.300-preview1-008019-osx-x64.tar.gz contains the right runtime.

cc @livarcocc @Eilon - safe to assume this is a critical 2.1.0-preview1 scenario eh?






</Description>
    <Title_Description>MacOS pkg installer does not include aspnetcore runtime The pkg installer for macOS doesn't install the aspnetcore runtime on my machine. However the tar.gz for macOS contains the runtimes.

## Steps to reproduce
Download https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/final/assets/Sdk/2.1.300-preview1-008019/dotnet-sdk-2.1.300-preview1-008019-osx-x64.pkg
Install

## Expected  behavior
Should contain two aspnetcore runtimes


## Actual behavior
No aspnetcore shared runtime installed.

Compare to this: https://dotnetfeed.blob.core.windows.net/orchestrated-release-2-1/20180202-02/final/assets/Sdk/2.1.300-preview1-008019/dotnet-sdk-2.1.300-preview1-008019-osx-x64.tar.gz contains the right runtime.

cc @livarcocc @Eilon - safe to assume this is a critical 2.1.0-preview1 scenario eh?






</Title_Description>
    <Label>release blocking</Label>
    <Assignee>natemcmaster</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8526</IssueLabelID>
    <Title>LOC CHECKIN | cli master | 20180202</Title>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8517</IssueLabelID>
    <Title>Update F# to match dev15.6 preview 4</Title>
    <Description>
    </Description>
    <Title_Description>Update F# to match dev15.6 preview 4 
</Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8505</IssueLabelID>
    <Title>Update ASP.NET Core certificate installation message</Title>
    <Description>Updates the ASP.NET Core development certificate installation message.</Description>
    <Title_Description>Update ASP.NET Core certificate installation message Updates the ASP.NET Core development certificate installation message.</Title_Description>
    <Label>Pending M2 Approval</Label>
    <CreatedAt>30/01/2018 9:20:26 PM +00:00</CreatedAt>
    <ClosedAt>31/01/2018 12:40:48 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8504</IssueLabelID>
    <Title>Orchestrated final publish; CLI:master</Title>
    <Description>Reference: https://github.com/dotnet/core-eng/issues/2407

</Description>
    <Title_Description>Orchestrated final publish; CLI:master Reference: https://github.com/dotnet/core-eng/issues/2407

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8503</IssueLabelID>
    <Title>How to use daily sdk build with daily ASP.NET Core build</Title>
    <Description>## Steps to reproduce

Download and untar latest sdk from https://github.com/dotnet/cli







</Description>
    <Title_Description>How to use daily sdk build with daily ASP.NET Core build ## Steps to reproduce

Download and untar latest sdk from https://github.com/dotnet/cli







</Title_Description>
    <Label>Bug</Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8500</IssueLabelID>
    <Title>run `dotnet install tool -g test-global-tools` twice will return error</Title>
    <Description>Error "Failed to install tool test-global-tools. A command with the same name already exists. "

Thanks to @yuki233

@KathleenDollard do you think this is a bug at all? It could be 2 different tools with the same name from different feed. And if the consumer really want to install them twice s/he should use . If we want to enable install twice we may need to record checksum so we know it is really a same package installed twice.</Description>
    <Title_Description>run . If we want to enable install twice we may need to record checksum so we know it is really a same package installed twice.</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8498</IssueLabelID>
    <Title>Updating Roslyn to 2.7.0-beta3-62529-05.</Title>
    <Description>
    </Description>
    <Title_Description>Updating Roslyn to 2.7.0-beta3-62529-05. </Title_Description>
    <Label>Approved to merge</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>29/01/2018 10:18:44 PM +00:00</CreatedAt>
    <ClosedAt>5/02/2018 6:28:31 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8497</IssueLabelID>
    <Title>Build break on OSX; CLI:master</Title>
    <Description>Follow-up from PR: https://github.com/dotnet/cli/pull/8488

The "${arg}" syntax works well on dev and Jenkins OSX machines but does not work correctly on VSO OSX build machines [likely a lower version of bash on VSO machines]. Therefore using 'awk' to transform to lower case as it is used successfully in line 69 of 'Run-Build.sh'

OSX build break: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1331014




</Description>
    <Title_Description>Build break on OSX; CLI:master Follow-up from PR: https://github.com/dotnet/cli/pull/8488

The "${arg}" syntax works well on dev and Jenkins OSX machines but does not work correctly on VSO OSX build machines [likely a lower version of bash on VSO machines]. Therefore using 'awk' to transform to lower case as it is used successfully in line 69 of 'Run-Build.sh'

OSX build break: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1331014




</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8496</IssueLabelID>
    <Title>dotnet install tool -g should be atomic</Title>
    <Description>Problem:
If there is a package download failure or there is existing tool with the same name there will be broken tools folders left in  much easier </Description>
    <Title_Description>dotnet install tool -g should be atomic Problem:
If there is a package download failure or there is existing tool with the same name there will be broken tools folders left in  much easier </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8492</IssueLabelID>
    <Title>Tool management experience - update list uninstall</Title>
    <Description>Since  record any metadata at the moment? If any of the experiences above will be enabled in future updates/previews metadata should already have been recorded for versions that didn't provide these management experiences.

cc @wli3 @livarcocc @KathleenDollard</Description>
    <Title_Description>Tool management experience - update, list, uninstall Since  record any metadata at the moment? If any of the experiences above will be enabled in future updates/previews metadata should already have been recorded for versions that didn't provide these management experiences.

cc @wli3 @livarcocc @KathleenDollard</Title_Description>
    <Label>tool</Label>
    <CreatedAt>28/01/2018 3:24:22 PM +00:00</CreatedAt>
    <ClosedAt>11/05/2018 10:51:27 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8488</IssueLabelID>
    <Title>Repairing the first pass call to 'dotnet msbuild'; CLI:master</Title>
    <Description>'$ExtraParametersNoTargets' which is used on the first pass call to 'dotnet msbuild' currently is of type 'string' not 'List'1' as is '$ExtraParameters'. This results in the non-honoring of any parameter other than parameter one [after the removal of targets and pure parameters]. 

Solution: Make a copy of '$ExtraParameters' to '$ExtraParametersNoTargets' of type 'List'1' and remove the targets from the list.



</Description>
    <Title_Description>Repairing the first pass call to 'dotnet msbuild'; CLI:master '$ExtraParametersNoTargets' which is used on the first pass call to 'dotnet msbuild' currently is of type 'string' not 'List'1' as is '$ExtraParameters'. This results in the non-honoring of any parameter other than parameter one [after the removal of targets and pure parameters]. 

Solution: Make a copy of '$ExtraParameters' to '$ExtraParametersNoTargets' of type 'List'1' and remove the targets from the list.



</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8485</IssueLabelID>
    <Title>Cannot install prereleased tool package from dotnet-install-tool without specifying the exact version</Title>
    <Description>To install a prerelease version of a CLI tool users must know the exact version they want to install. This means they have to open a browser to nuget.org or myget.org to find the package.

For example this is the console output for dotnet-watch
 flag

cc @KathleenDollard 


</Description>
    <Title_Description>Cannot install prereleased tool package from dotnet-install-tool without specifying the exact version To install a prerelease version of a CLI tool users must know the exact version they want to install. This means they have to open a browser to nuget.org or myget.org to find the package.

For example this is the console output for dotnet-watch
 flag

cc @KathleenDollard 


</Title_Description>
    <Label>Bug</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8484</IssueLabelID>
    <Title>Merge install scripts from master to release/2.0.0</Title>
    <Description>Typically CLI:release/2.0.0 holds the latest version of the install scripts. Recently with the introduction of Alpine et al CLI:master holds the latest versions. This will update release/2.0.0
</Description>
    <Title_Description>Merge install scripts from master to release/2.0.0 Typically CLI:release/2.0.0 holds the latest version of the install scripts. Recently with the introduction of Alpine et al CLI:master holds the latest versions. This will update release/2.0.0
</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8479</IssueLabelID>
    <Title>Dotnet install doesn't fail when installing two tools with different package ids but the same Command Name</Title>
    <Description>## Steps to reproduce
Create 2 projects to be used with different names
 output:

.NET Command Line Tools (2.1.300-preview2-008017)

Product Information:
 Version:            2.1.300-preview2-008017
 Commit SHA-1 hash:  f4a0d2db0e

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview2-008017\

Microsoft .NET Core Shared Framework Host

  Version  : 2.1.0-preview2-26123-02
  Build    : b64cb46124df1f7e64d7b7cde1034f693b270ceb


</Description>
    <Title_Description>Dotnet install doesn't fail when installing two tools with different package ids but the same Command Name ## Steps to reproduce
Create 2 projects to be used with different names
 output:

.NET Command Line Tools (2.1.300-preview2-008017)

Product Information:
 Version:            2.1.300-preview2-008017
 Commit SHA-1 hash:  f4a0d2db0e

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.300-preview2-008017\

Microsoft .NET Core Shared Framework Host

  Version  : 2.1.0-preview2-26123-02
  Build    : b64cb46124df1f7e64d7b7cde1034f693b270ceb


</Title_Description>
    <Label>tool</Label>
    <CreatedAt>25/01/2018 10:34:22 PM +00:00</CreatedAt>
    <ClosedAt>8/02/2018 12:27:41 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8478</IssueLabelID>
    <Title>Build won't finish</Title>
    <Description>@MeikelLP commented on [Tue Jan 23 2018](https://github.com/dotnet/buildtools/issues/1874)

My project wont build at all using -&gt; worked.
Why? That's super strange...

</Description>
    <Title_Description>Build won't finish @MeikelLP commented on [Tue Jan 23 2018](https://github.com/dotnet/buildtools/issues/1874)

My project wont build at all using -&gt; worked.
Why? That's super strange...

</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8477</IssueLabelID>
    <Title>Cannot publish app when net461 libraries are used</Title>
    <Description>## Steps to reproduce
Have a .NET Framework 4.6.1 library call it LIBA with Microsoft.Office.Interop.Excel Version=14.0.0.0 Culture=neutral PublicKeyToken=71e9bce111e9429c processorArchitecture=MSIL

This library is referenced in another library (.NET Framework 4.6.1) call it LIBB.
Add LIBB as a reference to an ASP.NET Core 2.0 project.

## Expected  behavior
dotnet restore works
Build the project using MSBuild works
dotnet publish works

## Actual behavior
dotnet restore works
Build the project using MSBuild works
dotnet publish fails

C:\Program Files\dotnet\sdk\2.1.4\Microsoft.Common.CurrentVersion.targets(20415): warning MSB3245: Could not resolve this reference. Could not locate the assembly "Microsoft.Office.Interop.Excel Version=14.0.0.0 Culture=neutral PublicKeyToken=71e9bce111e9429c processorArchitecture=MSIL". Check to make sure the assembly exists on disk. If this reference is required by your code you may get compilation errors.

## Environment data
 output:
.NET Command Line Tools (2.1.4)

Product Information:
 Version:            2.1.4
 Commit SHA-1 hash:  5e8add2190

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.4\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54





</Description>
    <Title_Description>Cannot publish app when net461 libraries are used ## Steps to reproduce
Have a .NET Framework 4.6.1 library call it LIBA with Microsoft.Office.Interop.Excel Version=14.0.0.0 Culture=neutral PublicKeyToken=71e9bce111e9429c processorArchitecture=MSIL

This library is referenced in another library (.NET Framework 4.6.1) call it LIBB.
Add LIBB as a reference to an ASP.NET Core 2.0 project.

## Expected  behavior
dotnet restore works
Build the project using MSBuild works
dotnet publish works

## Actual behavior
dotnet restore works
Build the project using MSBuild works
dotnet publish fails

C:\Program Files\dotnet\sdk\2.1.4\Microsoft.Common.CurrentVersion.targets(20415): warning MSB3245: Could not resolve this reference. Could not locate the assembly "Microsoft.Office.Interop.Excel Version=14.0.0.0 Culture=neutral PublicKeyToken=71e9bce111e9429c processorArchitecture=MSIL". Check to make sure the assembly exists on disk. If this reference is required by your code you may get compilation errors.

## Environment data
 output:
.NET Command Line Tools (2.1.4)

Product Information:
 Version:            2.1.4
 Commit SHA-1 hash:  5e8add2190

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.4\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54





</Title_Description>
    <Label>
    </Label>
    <Assignee>nguerrera</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8474</IssueLabelID>
    <Title>Cannot download latest version from channel 1.0 using dotnet-install.sh</Title>
    <Description>## Steps to reproduce
On Ubuntu 17.10 execute:


## Note
I took the channel from this documentation: https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script




</Description>
    <Title_Description>Cannot download latest version from channel 1.0 using dotnet-install.sh ## Steps to reproduce
On Ubuntu 17.10 execute:


## Note
I took the channel from this documentation: https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script




</Title_Description>
    <Label>Install-Script</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8471</IssueLabelID>
    <Title>Message from NuGet is not localized</Title>
    <Description>“Restoring Packages for” 
“Generating msbuild file” 
“Restore completed in xxx.xx ms for” </Description>
    <Title_Description>Message from NuGet is not localized “Restoring Packages for” 
“Generating msbuild file” 
“Restore completed in xxx.xx ms for” </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8466</IssueLabelID>
    <Title>Better PATH handling on macOS of different shell</Title>
    <Description>In order for tools to be available from command line CLI need to add  with tilde to the PATH during installer. But the problem is not all shell support finding tools with PATH like that like zsh</Description>
    <Title_Description>Better PATH handling on macOS of different shell In order for tools to be available from command line CLI need to add  with tilde to the PATH during installer. But the problem is not all shell support finding tools with PATH like that like zsh</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8465</IssueLabelID>
    <Title>Tool installation swallows NuGet warnings.</Title>
    <Description>## Steps to reproduce

Install a tool that causes NuGet to output warnings but no errors:








</Description>
    <Title_Description>Tool installation swallows NuGet warnings. ## Steps to reproduce

Install a tool that causes NuGet to output warnings but no errors:








</Title_Description>
    <Label>tool</Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8460</IssueLabelID>
    <Title>Fix non-fatal null exception when no extra parameters are passed.</Title>
    <Description>$ExtraParameters.split() throws a non-fatal null exception when build.cmd is called with no 'extra' parameters.</Description>
    <Title_Description>Fix non-fatal null exception when no extra parameters are passed. $ExtraParameters.split() throws a non-fatal null exception when build.cmd is called with no 'extra' parameters.</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8459</IssueLabelID>
    <Title>Updated message for the MSI installer</Title>
    <Description>For the next version of the MSI installer we want to include the following message:

If you plan to use .NET Core 2.1 with Visual Studio Visual Studio 2017 15.7 or newer is recommended.  [Learn More](https://go.microsoft.com/fwlink/?linkid=866799).</Description>
    <Title_Description>Updated message for the MSI installer For the next version of the MSI installer we want to include the following message:

If you plan to use .NET Core 2.1 with Visual Studio Visual Studio 2017 15.7 or newer is recommended.  [Learn More](https://go.microsoft.com/fwlink/?linkid=866799).</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8458</IssueLabelID>
    <Title>update fsharp compiler to match vs2017.6 preview 3</Title>
    <Description>Update FSharp Compiler.

@livarcocc This is needed to align FSharp with the version shipped in VS 15.6 preview 3</Description>
    <Title_Description>update fsharp compiler to match vs2017.6 preview 3 Update FSharp Compiler.

@livarcocc This is needed to align FSharp with the version shipped in VS 15.6 preview 3</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>23/01/2018 9:54:51 PM +00:00</CreatedAt>
    <ClosedAt>24/01/2018 12:53:56 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8456</IssueLabelID>
    <Title>Building a sln with a Windows Service csproj using dotnet build fails</Title>
    <Description>## Steps to reproduce
dotnet build solutionWithWindowsService.sln

## Expected  behavior
Solution builds successfully

## Actual behavior
C:\Program Files\dotnet\sdk\2.1.4\Microsoft.Common.CurrentVersion.targets(29795): error MSB4216: Could not run the "GenerateResource" task because MSBuild could not create or connect to a task host with runtime "CLR4" and architecture "x86".  Please ensure that (1) the requested runtime and/or architecture are available on the machine and (2) that the required executable "C:\Program Files\dotnet\sdk\2.1.4\MSBuild.exe" exists and can be run. [D:\git\DemoWindowsService.csproj]
    0 Warning(s)

## Environment data
$ dotnet --info
.NET Command Line Tools (2.1.4)

Product Information:
 Version:            2.1.4
 Commit SHA-1 hash:  5e8add2190

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.4\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54






</Description>
    <Title_Description>Building a sln with a Windows Service csproj using dotnet build fails ## Steps to reproduce
dotnet build solutionWithWindowsService.sln

## Expected  behavior
Solution builds successfully

## Actual behavior
C:\Program Files\dotnet\sdk\2.1.4\Microsoft.Common.CurrentVersion.targets(29795): error MSB4216: Could not run the "GenerateResource" task because MSBuild could not create or connect to a task host with runtime "CLR4" and architecture "x86".  Please ensure that (1) the requested runtime and/or architecture are available on the machine and (2) that the required executable "C:\Program Files\dotnet\sdk\2.1.4\MSBuild.exe" exists and can be run. [D:\git\DemoWindowsService.csproj]
    0 Warning(s)

## Environment data
$ dotnet --info
.NET Command Line Tools (2.1.4)

Product Information:
 Version:            2.1.4
 Commit SHA-1 hash:  5e8add2190

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.16299
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.1.4\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.5
  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54






</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8453</IssueLabelID>
    <Title>Revert PR:8443</Title>
    <Description>This PR reverts the changes from PR: https://github.com/dotnet/cli/pull/8443

We should reset to a known good state in the orchestrated build effort - rethink the changes in PR:8443
</Description>
    <Title_Description>Revert PR:8443 This PR reverts the changes from PR: https://github.com/dotnet/cli/pull/8443

We should reset to a known good state in the orchestrated build effort - rethink the changes in PR:8443
</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8452</IssueLabelID>
    <Title>Nuget.config has to be re-generated if we have downloaded a versions props file.</Title>
    <Description>
    </Description>
    <Title_Description>Nuget.config has to be re-generated if we have downloaded a versions props file. 
</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8450</IssueLabelID>
    <Title>Tool with command name dotnet-foo is not available as cli verb</Title>
    <Description>## Steps to reproduce

1. Create and install a tool with 


cc @wli3 @livarcocc 


</Description>
    <Title_Description>Tool with command name dotnet-foo is not available as cli verb ## Steps to reproduce

1. Create and install a tool with 


cc @wli3 @livarcocc 


</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8448</IssueLabelID>
    <Title>Use a unchanging version for 'Microsoft.NETCore.App'</Title>
    <Description>The orchestrated "PackageVersion" type variables should not be used in any of the 'proj' files of the built build tools under: "build_projects"

Why? The build-tools restore &amp; compile first and are used in the download of the orchestrated package version props file - version variables can be used however they cannot change.

</Description>
    <Title_Description>Use a unchanging version for 'Microsoft.NETCore.App' The orchestrated "PackageVersion" type variables should not be used in any of the 'proj' files of the built build tools under: "build_projects"

Why? The build-tools restore &amp; compile first and are used in the download of the orchestrated package version props file - version variables can be used however they cannot change.

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8447</IssueLabelID>
    <Title>Separate tool package and shim file location</Title>
    <Description>**Customer scenario**

Consumer install a global tool on CLI that has the same command name as the package id for example dotnet-watch. The install will fail with access denied error on macOS and Linux.

**Bugs this fixes**

https://github.com/dotnet/cli/issues/8445

**Workarounds if any**

Republish the global tools with a different packageId

**Risk**

low

**Performance impact**

no

**Root cause analysis**

Since tools shim and package are stored in the same folder. If the tool command name and the package name is the same a folder and a file with the same name will be created. And this is not allow in unix file system. More integration test coverage is needed.

**How was the bug found?**

Manual testing
</Description>
    <Title_Description>Separate tool package and shim file location **Customer scenario**

Consumer install a global tool on CLI that has the same command name as the package id for example dotnet-watch. The install will fail with access denied error on macOS and Linux.

**Bugs this fixes**

https://github.com/dotnet/cli/issues/8445

**Workarounds if any**

Republish the global tools with a different packageId

**Risk**

low

**Performance impact**

no

**Root cause analysis**

Since tools shim and package are stored in the same folder. If the tool command name and the package name is the same a folder and a file with the same name will be created. And this is not allow in unix file system. More integration test coverage is needed.

**How was the bug found?**

Manual testing
</Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>22/01/2018 10:05:52 PM +00:00</CreatedAt>
    <ClosedAt>23/01/2018 2:09:24 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8445</IssueLabelID>
    <Title>[tool] tools install failed when the packageid and the command name are the same on unix</Title>
    <Description>repo: create tool package that has the same packageid and command name. Run dotnet install tool it will fail with access denied.

The cause is since shim and package content are stored in the same folder. They will end up with same folder/file name. And unix treats folder as file. They conflict.</Description>
    <Title_Description>[tool] tools install failed when the packageid and the command name are the same on unix repo: create tool package that has the same packageid and command name. Run dotnet install tool it will fail with access denied.

The cause is since shim and package content are stored in the same folder. They will end up with same folder/file name. And unix treats folder as file. They conflict.</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8443</IssueLabelID>
    <Title>Generate a Nuget.config once</Title>
    <Description>If the Nuget.config has already been generated do not re-generate the file every time 'Run-Build' or 'Build' is called.
If 'OrchestratedPackageVersionsProps.props' is present do not re-download the file every time 'Run-Build' or 'Build' is called.

This is consistent with the treatment for: 
BuildInfo.props
GitCommitInfo.props
HostInfo.props

This change should repair the errors we are seeing in the 'AllLinuxDistrosNativeInstallers' leg of orchestrated build; to wit: "Failure at Linux leg because native installer tests are not honoring the package sources." 

The 'AllLinuxDistrosNativeInstallers' leg is markedly different in that there is another call to 'build.sh' here: https://github.com/dotnet/cli/blob/master/build/SandBoxAndPackage.proj#L50 
This call generates a new Nuget.config without the benefit of the 'ExternalRestoreSources' property.
</Description>
    <Title_Description>Generate a Nuget.config once If the Nuget.config has already been generated do not re-generate the file every time 'Run-Build' or 'Build' is called.
If 'OrchestratedPackageVersionsProps.props' is present do not re-download the file every time 'Run-Build' or 'Build' is called.

This is consistent with the treatment for: 
BuildInfo.props
GitCommitInfo.props
HostInfo.props

This change should repair the errors we are seeing in the 'AllLinuxDistrosNativeInstallers' leg of orchestrated build; to wit: "Failure at Linux leg because native installer tests are not honoring the package sources." 

The 'AllLinuxDistrosNativeInstallers' leg is markedly different in that there is another call to 'build.sh' here: https://github.com/dotnet/cli/blob/master/build/SandBoxAndPackage.proj#L50 
This call generates a new Nuget.config without the benefit of the 'ExternalRestoreSources' property.
</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8441</IssueLabelID>
    <Title>Fix "dotnet" typo in donetclichecksums manifest data</Title>
    <Description>This fixes up the manifest to let final publish find the checksums.</Description>
    <Title_Description>Fix "dotnet" typo in donetclichecksums manifest data This fixes up the manifest to let final publish find the checksums.</Title_Description>
    <Label>build</Label>
    <Assignee>dagood</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8436</IssueLabelID>
    <Title>Cannot install tool on macOS high sierra(temp fix merged)</Title>
    <Description>## Steps to reproduce

* Using 

cc @wli3 </Description>
    <Title_Description>Cannot install tool on macOS high sierra(temp fix merged) ## Steps to reproduce

* Using 

cc @wli3 </Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8421</IssueLabelID>
    <Title>Change the name of NETCorePlatformsImplicitPackageVersion</Title>
    <Description>to bundled

- [x] change on SDK
- [x] change on CLI</Description>
    <Title_Description>Change the name of NETCorePlatformsImplicitPackageVersion to bundled

- [x] change on SDK
- [x] change on CLI</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8419</IssueLabelID>
    <Title>CLI Build Break: should use a trailing space instead of a leading space</Title>
    <Description>Should use a trailing space instead of a leading space; with the leading space MSBuild thinks the '$ExtraParametersNoTargets' variable is a switch instead of a string when capturing more than one 'property'.

From: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1294845
MSBUILD : error MSB1008: Only one project can be specified.
Switch:  /p:Configuration=Release /p:ExternalRestoreSources=

</Description>
    <Title_Description>CLI Build Break: should use a trailing space instead of a leading space Should use a trailing space instead of a leading space; with the leading space MSBuild thinks the '$ExtraParametersNoTargets' variable is a switch instead of a string when capturing more than one 'property'.

From: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1294845
MSBUILD : error MSB1008: Only one project can be specified.
Switch:  /p:Configuration=Release /p:ExternalRestoreSources=

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8418</IssueLabelID>
    <Title>Requirement for CLI tool authors to list Microsoft.NETCore.Platforms in nuspec</Title>
    <Description>According to current design spec global CLI tool authors must define the 

Is this really necessary? From my initial tests portable .NET Core app tools restore just fine without this in the nuspec. 

IIUC this is only required for rid-specific tools not portable ones. RID-restores require it because dotnet-install-tool is implemented as a dotnet-restore. Could dotnet-install-tool add Microsoft.NETCore.Platforms to the generated csproj it uses to call dotnet-restore?

cc @wli3 @livarcocc 

cref https://github.com/aspnet/DotNetTools/issues/383
</Description>
    <Title_Description>Requirement for CLI tool authors to list Microsoft.NETCore.Platforms in nuspec According to current design spec global CLI tool authors must define the 

Is this really necessary? From my initial tests portable .NET Core app tools restore just fine without this in the nuspec. 

IIUC this is only required for rid-specific tools not portable ones. RID-restores require it because dotnet-install-tool is implemented as a dotnet-restore. Could dotnet-install-tool add Microsoft.NETCore.Platforms to the generated csproj it uses to call dotnet-restore?

cc @wli3 @livarcocc 

cref https://github.com/aspnet/DotNetTools/issues/383
</Title_Description>
    <Label>tool</Label>
    <Assignee>nguerrera</Assignee>
    <CreatedAt>17/01/2018 8:42:18 PM +00:00</CreatedAt>
    <ClosedAt>15/02/2018 12:04:41 AM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8417</IssueLabelID>
    <Title>Orchestrated build publishing; CLI:master [follow-up]</Title>
    <Description>Reintroducing: 'BlobStoragePartialRelativePath' as orchestrated build needs a prepended "assets" to the partial relative path.


</Description>
    <Title_Description>Orchestrated build publishing; CLI:master [follow-up] Reintroducing: 'BlobStoragePartialRelativePath' as orchestrated build needs a prepended "assets" to the partial relative path.


</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8416</IssueLabelID>
    <Title>Adds Microsoft.Docker.Sdk to CLI</Title>
    <Description>This change is to add Sdk.props and Sdk.targets of Microsoft.Docker.Sdk
into CLI. This unblocks the scenario where a VS solution contains a few
.NET Core projects as well as a docker-compose.dcproj project and people
want to build the solution from command line with .NET Core CLI. With
the Sdk.props and Sdk.targets being present in CLI building
docker-compose.dcproj becomes no-op so it won't block building the other
.NET Core projects.

The SDK files are open-sourced under MIT license here:
https://github.com/Microsoft/DockerTools

#6178 </Description>
    <Title_Description>Adds Microsoft.Docker.Sdk to CLI This change is to add Sdk.props and Sdk.targets of Microsoft.Docker.Sdk
into CLI. This unblocks the scenario where a VS solution contains a few
.NET Core projects as well as a docker-compose.dcproj project and people
want to build the solution from command line with .NET Core CLI. With
the Sdk.props and Sdk.targets being present in CLI building
docker-compose.dcproj becomes no-op so it won't block building the other
.NET Core projects.

The SDK files are open-sourced under MIT license here:
https://github.com/Microsoft/DockerTools

#6178 </Title_Description>
    <Label>Approved to merge</Label>
    <CreatedAt>17/01/2018 7:16:46 PM +00:00</CreatedAt>
    <ClosedAt>9/02/2018 10:02:09 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8412</IssueLabelID>
    <Title>Orchestrated build publishing; CLI:master</Title>
    <Description>**1) Coalesce the publish of assets and nupkgs to: 'PushToBlobFeed'
2) Create a manifest when performing an orchestrated build publish**

_AzureInfo.props_
Use the negative for 'IsNotOrchestratedPublish' for ease of use in the 'PushToBlobFeed' call; default for 'SkipCreateManifest' is false
Use 'ArtifactCloudDropURL' and 'ChecksumCloudDropURL' directly in the 'PushToBlobFeed' call

_Branding.props_ 
We need the build name somewhere.

_DependencyVersions.props_ 
Move the VersionTools version and BuildTasksFeedTool version forward.

_Publish.targets_ 
import 'Microsoft.DotNet.Build.Tasks.Feed.targets' here
Remove 'SetAzureProps'; no longer necessary.
The 'BlobStoragePartialRelativePath' is no longer needed.
Replace 'UploadToAzure' with 'PushToBlobFeed'
SkipCreateManifest if we are not doing an OrchestratedPublish
Add ManifestArtifactData

_Checksum.targets_
Add ManifestArtifactData

_FinishBuild.targets_ 
Perform the 'FinalizeBuild' steps if we are not doing an OrchestratedPublish

_PublishContent.targets_ 
Replace 'UploadToAzure' with 'PushToBlobFeed'
SkipCreateManifest if we are not doing an OrchestratedPublish
Add ManifestArtifactData

_PublishNupkgToBlobFeed.targets_
Move the import Microsoft.DotNet.Build.Tasks.Feed.targets to Publish.targets
SkipCreateManifest if we are not doing an OrchestratedPublish

_dockerrun.sh_ 
Explicitly set 'PB_ASSETROOTURL' 'PB_PACKAGEVERSIONPROPSURL' and 'PB_PUBLISHBLOBFEEDURL' in docker containers.

**Testing:**
Manual publishing from dev box [Win x64] to private blob feed; assets checksums and NuPkgs _plus manifests_

</Description>
    <Title_Description>Orchestrated build publishing; CLI:master **1) Coalesce the publish of assets and nupkgs to: 'PushToBlobFeed'
2) Create a manifest when performing an orchestrated build publish**

_AzureInfo.props_
Use the negative for 'IsNotOrchestratedPublish' for ease of use in the 'PushToBlobFeed' call; default for 'SkipCreateManifest' is false
Use 'ArtifactCloudDropURL' and 'ChecksumCloudDropURL' directly in the 'PushToBlobFeed' call

_Branding.props_ 
We need the build name somewhere.

_DependencyVersions.props_ 
Move the VersionTools version and BuildTasksFeedTool version forward.

_Publish.targets_ 
import 'Microsoft.DotNet.Build.Tasks.Feed.targets' here
Remove 'SetAzureProps'; no longer necessary.
The 'BlobStoragePartialRelativePath' is no longer needed.
Replace 'UploadToAzure' with 'PushToBlobFeed'
SkipCreateManifest if we are not doing an OrchestratedPublish
Add ManifestArtifactData

_Checksum.targets_
Add ManifestArtifactData

_FinishBuild.targets_ 
Perform the 'FinalizeBuild' steps if we are not doing an OrchestratedPublish

_PublishContent.targets_ 
Replace 'UploadToAzure' with 'PushToBlobFeed'
SkipCreateManifest if we are not doing an OrchestratedPublish
Add ManifestArtifactData

_PublishNupkgToBlobFeed.targets_
Move the import Microsoft.DotNet.Build.Tasks.Feed.targets to Publish.targets
SkipCreateManifest if we are not doing an OrchestratedPublish

_dockerrun.sh_ 
Explicitly set 'PB_ASSETROOTURL' 'PB_PACKAGEVERSIONPROPSURL' and 'PB_PUBLISHBLOBFEEDURL' in docker containers.

**Testing:**
Manual publishing from dev box [Win x64] to private blob feed; assets checksums and NuPkgs _plus manifests_

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8411</IssueLabelID>
    <Title>BUG LINUX/OSX Error when Building solutions with csproj/fsproj properties due to Permissions</Title>
    <Description>## Steps to reproduce
Create a solution with multiple projects. Ensure that one of the base (non-dependent) projects needs a property set in the csproj during building. This will break the building process for the entire solution. C# projects get warnings while F# projects errors.

Sample error:
/usr/share/dotnet/sdk/2.1.4/FSharp/Microsoft.FSharp.Targets(2639): error MSB6003: The specified task executable "RunFsc.cmd" could not be run. Permission denied [/MYPROJECT.fsproj]






</Description>
    <Title_Description>BUG LINUX/OSX Error when Building solutions with csproj/fsproj properties due to Permissions ## Steps to reproduce
Create a solution with multiple projects. Ensure that one of the base (non-dependent) projects needs a property set in the csproj during building. This will break the building process for the entire solution. C# projects get warnings while F# projects errors.

Sample error:
/usr/share/dotnet/sdk/2.1.4/FSharp/Microsoft.FSharp.Targets(2639): error MSB6003: The specified task executable "RunFsc.cmd" could not be run. Permission denied [/MYPROJECT.fsproj]






</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8406</IssueLabelID>
    <Title>Ensure that the 'SetAzureProps' target runs before 'BlobStoragePartialRelativePath' is used.</Title>
    <Description>Ensure that the 'SetAzureProps' target runs before 'BlobStoragePartialRelativePath' is used.

The 'SetAzureProps' target sets the final 'BlobStoragePartialRelativePath' ContainerNames &amp; AccountNames
</Description>
    <Title_Description>Ensure that the 'SetAzureProps' target runs before 'BlobStoragePartialRelativePath' is used. Ensure that the 'SetAzureProps' target runs before 'BlobStoragePartialRelativePath' is used.

The 'SetAzureProps' target sets the final 'BlobStoragePartialRelativePath' ContainerNames &amp; AccountNames
</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8404</IssueLabelID>
    <Title>Add "SDK" at the end of the orchestrated build blob drop point.</Title>
    <Description>Add "SDK" at the end of the orchestrated build blob drop point
Example:
https://dotnetfeed.blob.core.windows.net/orchestrated/20180110-13/cli/assets/Sdk/</Description>
    <Title_Description>Add "SDK" at the end of the orchestrated build blob drop point. Add "SDK" at the end of the orchestrated build blob drop point
Example:
https://dotnetfeed.blob.core.windows.net/orchestrated/20180110-13/cli/assets/Sdk/</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8395</IssueLabelID>
    <Title>[tools] Require -g to install global tools</Title>
    <Description>-g --global : Install user wide</Description>
    <Title_Description>[tools] Require -g to install global tools -g --global : Install user wide</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8388</IssueLabelID>
    <Title>Enabling the publish of CLI assets to 'orchestrated' blob storage.</Title>
    <Description>AzureInfo.props 
BlobStoragePartialRelativePath = "Sdk" or "[orchestrated-build-number]/cli/assets"; replaces 'Product'
File reorganized and commented; review it directly...

Publish.targets 
Insert a call to 'SetAzureProps'
'BlobStoragePartialRelativePath' replaces 'Product'
Simplification: remove Boolean 'PUBLISH_NUPKG_TO_AZURE_BLOB'

AzureInfo.targets 
Programmatically assign ContainerNames AccountNames and  BlobStoragePartialRelativePath - if conducting an orchestrated build.
@jcagme 
please review for correctness.

FinishBuild.targets
Do not copy all the blobs to 'master-latest' - if conducting an orchestrated build.

PublishNupkgToBlobFeed.targets 
Simplification: remove Boolean 'PUBLISH_NUPKG_TO_BLOB_FEED'


**Follow-up:**
Remove 'PUBLISH_NUPKG_TO_BLOB_FEED' and 'PUBLISH_NUPKG_TO_AZURE_BLOB' variables in VSO build definitions

</Description>
    <Title_Description>Enabling the publish of CLI assets to 'orchestrated' blob storage. AzureInfo.props 
BlobStoragePartialRelativePath = "Sdk" or "[orchestrated-build-number]/cli/assets"; replaces 'Product'
File reorganized and commented; review it directly...

Publish.targets 
Insert a call to 'SetAzureProps'
'BlobStoragePartialRelativePath' replaces 'Product'
Simplification: remove Boolean 'PUBLISH_NUPKG_TO_AZURE_BLOB'

AzureInfo.targets 
Programmatically assign ContainerNames AccountNames and  BlobStoragePartialRelativePath - if conducting an orchestrated build.
@jcagme 
please review for correctness.

FinishBuild.targets
Do not copy all the blobs to 'master-latest' - if conducting an orchestrated build.

PublishNupkgToBlobFeed.targets 
Simplification: remove Boolean 'PUBLISH_NUPKG_TO_BLOB_FEED'


**Follow-up:**
Remove 'PUBLISH_NUPKG_TO_BLOB_FEED' and 'PUBLISH_NUPKG_TO_AZURE_BLOB' variables in VSO build definitions

</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8386</IssueLabelID>
    <Title>Easy to parse feed to make automated updating chocolatey packages easier</Title>
    <Description>@riezebosch commented on [Thu Jan 11 2018](https://github.com/dotnet/core/issues/1214)

To make maintaining the [chocolatey-packages](https://github.com/jberezanski/dotnetcore-chocolateypackages/) more convenient I would like a stable endpoint to check for latest version of releases with download url's.

I tried to parse to the [download page](https://www.microsoft.com/net/download/windows) and the [releases page](https://github.com/dotnet/core/releases) on github but there are to much hops to go through.

For example I also maintain the [docker-for-windows package](https://github.com/riezebosch/BoxstarterPackages/tree/master/docker-for-windows) and there I found a nice [feed](https://download.docker.com/win/stable/appcast.xml) with version number and download url that was easy to parse and thereby easy to auto update.

</Description>
    <Title_Description>Easy to parse feed to make automated updating chocolatey packages easier @riezebosch commented on [Thu Jan 11 2018](https://github.com/dotnet/core/issues/1214)

To make maintaining the [chocolatey-packages](https://github.com/jberezanski/dotnetcore-chocolateypackages/) more convenient I would like a stable endpoint to check for latest version of releases with download url's.

I tried to parse to the [download page](https://www.microsoft.com/net/download/windows) and the [releases page](https://github.com/dotnet/core/releases) on github but there are to much hops to go through.

For example I also maintain the [docker-for-windows package](https://github.com/riezebosch/BoxstarterPackages/tree/master/docker-for-windows) and there I found a nice [feed](https://download.docker.com/win/stable/appcast.xml) with version number and download url that was easy to parse and thereby easy to auto update.

</Title_Description>
    <Label>
    </Label>
    <Assignee>leecow</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8381</IssueLabelID>
    <Title>Incorrect error message when package name is missing for install tool command</Title>
    <Description>## Steps to reproduce







</Description>
    <Title_Description>Incorrect error message when package name is missing for install tool command ## Steps to reproduce







</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8380</IssueLabelID>
    <Title>Run-Build.sh/ps1 does not behave correctly when passing in a target.</Title>
    <Description>When passing in a 'target' on the command line from Build.sh/cmd; the target is attempted on the first pass call to "dotnet msbuild build.proj". This causes unpredictable results.

https://github.com/dotnet/cli/issues/8375

SandBoxAndPackage.proj 
Using the original implementation "/t:GenerateInstallersAndCopyOutOfSandBox"

run-build.ps1 
Removing the targets into "ExtraParametersNoTargets"

run-build.sh 
Removing the targets into "ExtraParametersNoTargets"
Parameterized targets: 'ALL_LINUX_INSTALLERS_TARGET' and 'GENERATE_INSTALLERS_TARGET' are no longer necessary.
Making the 'help' more consistent with run-build.ps1 

Follow-up actions:
Change "--all-linux-installers" to "/t:BuildAndPublishAllLinuxDistrosNativeInstallers" in the 'BuildArguments' of the 'AllLinuxDistrosNativeInstallers' VSO build definition: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?context=allDefinitions&amp;path=%5CDotNet%5CCLI%5Cmaster&amp;definitionId=7254
</Description>
    <Title_Description>Run-Build.sh/ps1 does not behave correctly when passing in a target. When passing in a 'target' on the command line from Build.sh/cmd; the target is attempted on the first pass call to "dotnet msbuild build.proj". This causes unpredictable results.

https://github.com/dotnet/cli/issues/8375

SandBoxAndPackage.proj 
Using the original implementation "/t:GenerateInstallersAndCopyOutOfSandBox"

run-build.ps1 
Removing the targets into "ExtraParametersNoTargets"

run-build.sh 
Removing the targets into "ExtraParametersNoTargets"
Parameterized targets: 'ALL_LINUX_INSTALLERS_TARGET' and 'GENERATE_INSTALLERS_TARGET' are no longer necessary.
Making the 'help' more consistent with run-build.ps1 

Follow-up actions:
Change "--all-linux-installers" to "/t:BuildAndPublishAllLinuxDistrosNativeInstallers" in the 'BuildArguments' of the 'AllLinuxDistrosNativeInstallers' VSO build definition: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?context=allDefinitions&amp;path=%5CDotNet%5CCLI%5Cmaster&amp;definitionId=7254
</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8375</IssueLabelID>
    <Title>Run-Build.sh/ps1 does not behave correctly when passing in a target </Title>
    <Description>Related: https://github.com/dotnet/cli/issues/8358

When passing in a 'target' on the command line from Build.sh/cmd; the target is attempted on the first pass call to "dotnet msbuild build.proj". This causes unpredictable results.








</Description>
    <Title_Description>Run-Build.sh/ps1 does not behave correctly when passing in a target  Related: https://github.com/dotnet/cli/issues/8358

When passing in a 'target' on the command line from Build.sh/cmd; the target is attempted on the first pass call to "dotnet msbuild build.proj". This causes unpredictable results.








</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8374</IssueLabelID>
    <Title>Warning MSB4011: "Microsoft.CSharp.targets" cannot be imported again.</Title>
    <Description>## Steps to reproduce
dotnet build

## Expected  behavior
No build warnings

## Actual behavior
C:\Program Files\dotnet\sdk\2.0.3\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets(413): warning MSB4011: "C:\Program Files\dotnet\sdk\2.0.3\Microsoft.CSharp.targets" cannot be imported again. It was already imported at "C:\Projects\SomeProject.csproj (1063)". This is most likely a build authoring error. This subsequent import will be ignored.

## Environment data
 output:
.NET Command Line Tools (2.0.3)

Product Information:
 Version:            2.0.3
 Commit SHA-1 hash:  12f0c7efcc

Runtime Environment:
 OS Name:     Windows
 OS Version:  6.1.7601
 OS Platform: Windows
 RID:         win7-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.0.3\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.3
  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df






</Description>
    <Title_Description>Warning MSB4011: "Microsoft.CSharp.targets" cannot be imported again. ## Steps to reproduce
dotnet build

## Expected  behavior
No build warnings

## Actual behavior
C:\Program Files\dotnet\sdk\2.0.3\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets(413): warning MSB4011: "C:\Program Files\dotnet\sdk\2.0.3\Microsoft.CSharp.targets" cannot be imported again. It was already imported at "C:\Projects\SomeProject.csproj (1063)". This is most likely a build authoring error. This subsequent import will be ignored.

## Environment data
 output:
.NET Command Line Tools (2.0.3)

Product Information:
 Version:            2.0.3
 Commit SHA-1 hash:  12f0c7efcc

Runtime Environment:
 OS Name:     Windows
 OS Version:  6.1.7601
 OS Platform: Windows
 RID:         win7-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.0.3\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.3
  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df






</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8370</IssueLabelID>
    <Title>[tools] Add to bundledversions.props</Title>
    <Description>&lt;NETCorePlatformsImplicitPackageVersion&gt;2.0.1&lt;/NETCorePlatformsImplicitPackageVersion&gt;

https://github.com/dotnet/sdk/pull/1843/files#r160794715
https://github.com/dotnet/sdk/pull/1843/files#r160809994

</Description>
    <Title_Description>[tools] Add to bundledversions.props &lt;NETCorePlatformsImplicitPackageVersion&gt;2.0.1&lt;/NETCorePlatformsImplicitPackageVersion&gt;

https://github.com/dotnet/sdk/pull/1843/files#r160794715
https://github.com/dotnet/sdk/pull/1843/files#r160809994

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8369</IssueLabelID>
    <Title>Awkward message from CLI after successfully installing a global tool</Title>
    <Description>The message displayed by the CLI after installing a global tool is awkward and needs an editorial pass:



If there is no other instruction?
</Description>
    <Title_Description>Awkward message from CLI after successfully installing a global tool The message displayed by the CLI after installing a global tool is awkward and needs an editorial pass:



If there is no other instruction?
</Title_Description>
    <Label>tool</Label>
    <Assignee>KathleenDollard</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8368</IssueLabelID>
    <Title>Cannot run global tool after installing it must open new command prompt</Title>
    <Description>After I have successfully installed a global tool I am not able to run it without opening a new command prompt:

</Description>
    <Title_Description>Cannot run global tool after installing it, must open new command prompt After I have successfully installed a global tool I am not able to run it without opening a new command prompt:

</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8367</IssueLabelID>
    <Title>The dotnet install command help text is missing descriptions of options</Title>
    <Description>The 

</Description>
    <Title_Description>The dotnet install command help text is missing descriptions of options The 

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8366</IssueLabelID>
    <Title>The dotnet install command missing from list of SDK commands in dotnet help text</Title>
    <Description>I don't see 

</Description>
    <Title_Description>The dotnet install command missing from list of SDK commands in dotnet help text I don't see 

</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8365</IssueLabelID>
    <Title>Replace copy config file implementation for dotnet install tool my.tool --configfile </Title>
    <Description>Repalce https://github.com/dotnet/cli/blob/master/src/dotnet/ToolPackage/ToolPackageObtainer.cs#L71

with restore with package version = * 

and then add RestoreConfigFile property to temp project. So there is no need to copy config file</Description>
    <Title_Description>Replace copy config file implementation for dotnet install tool my.tool --configfile  Repalce https://github.com/dotnet/cli/blob/master/src/dotnet/ToolPackage/ToolPackageObtainer.cs#L71

with restore with package version = * 

and then add RestoreConfigFile property to temp project. So there is no need to copy config file</Title_Description>
    <Label>tool</Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8364</IssueLabelID>
    <Title>Remove the 'fpm' and 'debuild' existence checks</Title>
    <Description>Remove the 'fpm' and 'debuild' existence checks

Creation of RPM/DEB packages should happen on CI runs. The creation of RPM/DEB packages does not happen on Jenkins CI runs; it should so we can prevent build breaks in these methods.

Addresses: https://github.com/dotnet/cli/issues/8363</Description>
    <Title_Description>Remove the 'fpm' and 'debuild' existence checks Remove the 'fpm' and 'debuild' existence checks

Creation of RPM/DEB packages should happen on CI runs. The creation of RPM/DEB packages does not happen on Jenkins CI runs; it should so we can prevent build breaks in these methods.

Addresses: https://github.com/dotnet/cli/issues/8363</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8363</IssueLabelID>
    <Title>Creation of RPM packages should happen on CI runs</Title>
    <Description>The creation of RPM packages does not happen on Jenkins CI runs; it should so we can prevent build breaks in these method.

https://github.com/dotnet/cli/blob/master/build/package/Installer.RPM.targets#L202




</Description>
    <Title_Description>Creation of RPM packages should happen on CI runs The creation of RPM packages does not happen on Jenkins CI runs; it should so we can prevent build breaks in these method.

https://github.com/dotnet/cli/blob/master/build/package/Installer.RPM.targets#L202




</Title_Description>
    <Label>Infrastructure</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8358</IssueLabelID>
    <Title>Run build.sh on branch `v2.1.4` doesn't work on Linux</Title>
    <Description>## Steps to reproduce
docker run  -it debian:8 bash

Note: I used debian:8 due to https://github.com/dotnet/cli/issues/8250


</Description>
    <Title_Description>Run build.sh on branch 
</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8354</IssueLabelID>
    <Title>Remove method to publish to Debian feeds.</Title>
    <Description>**Follow-up actions:**
Remove the variables:
"REPO_SERVER"
"REPO_PASS"
"REPO_USER"
"debian8x64RepositoryId"
"ubuntu1404x64RepositoryId"
"ubuntu1604x64RepositoryId"
from CLI:master VSO build definitions.


  </Description>
    <Title_Description>Remove method to publish to Debian feeds. **Follow-up actions:**
Remove the variables:
"REPO_SERVER"
"REPO_PASS"
"REPO_USER"
"debian8x64RepositoryId"
"ubuntu1404x64RepositoryId"
"ubuntu1604x64RepositoryId"
from CLI:master VSO build definitions.


  </Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8352</IssueLabelID>
    <Title>Create a 'symstore' directory to gather symbols</Title>
    <Description>Gather the just built symbols and binaries to a 'symstore' directory - so that they are ready to publish via VSO.

**Current set:**
dotnet.*
Microsoft.DotNet.Cli.Sln.Internal.*
Microsoft.DotNet.Cli.Utils.*
Microsoft.DotNet.Configurer.*
Microsoft.DotNet.InternalAbstractions.*
</Description>
    <Title_Description>Create a 'symstore' directory to gather symbols Gather the just built symbols and binaries to a 'symstore' directory - so that they are ready to publish via VSO.

**Current set:**
dotnet.*
Microsoft.DotNet.Cli.Sln.Internal.*
Microsoft.DotNet.Cli.Utils.*
Microsoft.DotNet.Configurer.*
Microsoft.DotNet.InternalAbstractions.*
</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8347</IssueLabelID>
    <Title>CLI produce 'DEB' distro agnostic installer packages; CLI:master</Title>
    <Description>_CLI to produce 'DEB' distro agnostic installer packages..._

Directory.Build.props
Minor reordering: Branding.props uses 'IsDebianBaseDistro' defined in DerivedHostMachineInfo.props

README.md
Updated - see: https://github.com/johnbeisner/cli/blob/CoalesceDebInstaller/README.md

Branding.props 
DEB filename token "HostMonikerRid" = "x64"

LinuxDistrosNativeInstaller.props 
Only build the 'DEB' on debian.8-x64; remove the two other 'DEB' entries.

SandBoxAndPackageInParallel.proj 
No change - formatting.

**Please note:**
Previously produced set of DEB files:
dotnet-sdk-version-ubuntu-x64.deb for Ubuntu 14.04 
dotnet-sdk-version-debian-x64.deb for Debian 8
dotnet-sdk-version-ubuntu.16.04-x64.deb for Ubuntu 16.04

Proposed set of DEB files:
dotnet-sdk-version-x64.deb

**Testing:**
Built a private VSO definition:
https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1272947&amp;_a=summary
Published to private blob storage:
https://dotnetcli.blob.core.windows.net/jbeisner/Sdk/2.2.0-preview1-007881/
  
  
  </Description>
    <Title_Description>CLI produce 'DEB' distro agnostic installer packages; CLI:master _CLI to produce 'DEB' distro agnostic installer packages..._

Directory.Build.props
Minor reordering: Branding.props uses 'IsDebianBaseDistro' defined in DerivedHostMachineInfo.props

README.md
Updated - see: https://github.com/johnbeisner/cli/blob/CoalesceDebInstaller/README.md

Branding.props 
DEB filename token "HostMonikerRid" = "x64"

LinuxDistrosNativeInstaller.props 
Only build the 'DEB' on debian.8-x64; remove the two other 'DEB' entries.

SandBoxAndPackageInParallel.proj 
No change - formatting.

**Please note:**
Previously produced set of DEB files:
dotnet-sdk-version-ubuntu-x64.deb for Ubuntu 14.04 
dotnet-sdk-version-debian-x64.deb for Debian 8
dotnet-sdk-version-ubuntu.16.04-x64.deb for Ubuntu 16.04

Proposed set of DEB files:
dotnet-sdk-version-x64.deb

**Testing:**
Built a private VSO definition:
https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1272947&amp;_a=summary
Published to private blob storage:
https://dotnetcli.blob.core.windows.net/jbeisner/Sdk/2.2.0-preview1-007881/
  
  
  </Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8338</IssueLabelID>
    <Title>dotnet build -c throws exception instead of error message</Title>
    <Description>## Steps to reproduce



</Description>
    <Title_Description>dotnet build -c throws exception instead of error message ## Steps to reproduce



</Title_Description>
    <Label>
    </Label>
    <Assignee>peterhuene</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8337</IssueLabelID>
    <Title>Error running CLI on Linux when installed to "$HOME/dotnet"</Title>
    <Description>## Summary
It seems the problem only repros when:
 
1. dotnet is installed at 
A. Works fine
</Description>
    <Title_Description>Error running CLI on Linux when installed to "$HOME/dotnet" ## Summary
It seems the problem only repros when:
 
1. dotnet is installed at 
A. Works fine
</Title_Description>
    <Label>Bug</Label>
    <Assignee>steveharter</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8336</IssueLabelID>
    <Title>Reacting to core-setup changes for 'DEB' distro agnostic installers</Title>
    <Description>Reacting to core-setup changes for 'DEB' distro agnostic installers. 

Example:
These installers:
dotnet-runtime-2.1.0-preview1-26103-03-debian.8-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-debian.9-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-ubuntu.14.04-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-ubuntu.16.04-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-ubuntu.17.04-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-ubuntu.17.10-x64.deb
have been coalesced to: 
runtime-2.1.0-preview1-26104-06-x64.deb

Contains: https://github.com/dotnet/cli/pull/8325
Update CoreSetup to preview1-26105-01



</Description>
    <Title_Description>Reacting to core-setup changes for 'DEB' distro agnostic installers Reacting to core-setup changes for 'DEB' distro agnostic installers. 

Example:
These installers:
dotnet-runtime-2.1.0-preview1-26103-03-debian.8-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-debian.9-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-ubuntu.14.04-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-ubuntu.16.04-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-ubuntu.17.04-x64.deb
dotnet-runtime-2.1.0-preview1-26103-03-ubuntu.17.10-x64.deb
have been coalesced to: 
runtime-2.1.0-preview1-26104-06-x64.deb

Contains: https://github.com/dotnet/cli/pull/8325
Update CoreSetup to preview1-26105-01



</Title_Description>
    <Label>build</Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8331</IssueLabelID>
    <Title>dotnet build fails - searches wrong location</Title>
    <Description>## Steps to reproduce
dotnet new classlib
dotnet build

## Expected  behavior
Build as normal

## Actual behavior
It seems like cli looks for files directly on c:\  insted of the project directory: C:\Perforce\DNVX\DemoSln\

dotnet build:
Microsoft (R) Build Engine version 15.4.8.50001 for .NET Core
Copyright (C) Microsoft Corporation. All rights reserved.

CSC : error CS2001: Source file 'c:\Class1.cs' could not be found. [C:\Perforce\DNVX\DemoSln\DemoSln.csproj]
CSC : error CS2001: Source file 'c:\obj\Debug\netstandard2.0\DemoSln.AssemblyInfo.cs' could not be found. [C:\Perforce\DNVX\DemoSln\DemoSln.csproj]

Build FAILED.

CSC : error CS2001: Source file 'c:\Class1.cs' could not be found. [C:\Perforce\DNVX\DemoSln\DemoSln.csproj]
CSC : error CS2001: Source file 'c:\obj\Debug\netstandard2.0\DemoSln.AssemblyInfo.cs' could not be found. [C:\Perforce\DNVX\DemoSln\DemoSln.csproj]
    0 Warning(s)
    2 Error(s)

Time Elapsed 00:00:04.89


## Environment data
 output:

.NET Command Line Tools (2.0.3)

Product Information:
 Version:            2.0.3
 Commit SHA-1 hash:  12f0c7efcc

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.15063
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.0.3\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.3
  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df





</Description>
    <Title_Description>dotnet build fails - searches wrong location ## Steps to reproduce
dotnet new classlib
dotnet build

## Expected  behavior
Build as normal

## Actual behavior
It seems like cli looks for files directly on c:\  insted of the project directory: C:\Perforce\DNVX\DemoSln\

dotnet build:
Microsoft (R) Build Engine version 15.4.8.50001 for .NET Core
Copyright (C) Microsoft Corporation. All rights reserved.

CSC : error CS2001: Source file 'c:\Class1.cs' could not be found. [C:\Perforce\DNVX\DemoSln\DemoSln.csproj]
CSC : error CS2001: Source file 'c:\obj\Debug\netstandard2.0\DemoSln.AssemblyInfo.cs' could not be found. [C:\Perforce\DNVX\DemoSln\DemoSln.csproj]

Build FAILED.

CSC : error CS2001: Source file 'c:\Class1.cs' could not be found. [C:\Perforce\DNVX\DemoSln\DemoSln.csproj]
CSC : error CS2001: Source file 'c:\obj\Debug\netstandard2.0\DemoSln.AssemblyInfo.cs' could not be found. [C:\Perforce\DNVX\DemoSln\DemoSln.csproj]
    0 Warning(s)
    2 Error(s)

Time Elapsed 00:00:04.89


## Environment data
 output:

.NET Command Line Tools (2.0.3)

Product Information:
 Version:            2.0.3
 Commit SHA-1 hash:  12f0c7efcc

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.15063
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\2.0.3\

Microsoft .NET Core Shared Framework Host

  Version  : 2.0.3
  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df





</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8324</IssueLabelID>
    <Title>Add help for list-sdks and list-runtimes</Title>
    <Description>Add help for  is used without the SDK being present.

Fixes https://github.com/dotnet/core-setup/issues/3503

@nguerrera assuming we want this for preview1 do I need to create a PR in that branch or are we doing mass syncing of master to preview1?</Description>
    <Title_Description>Add help for list-sdks and list-runtimes Add help for  is used without the SDK being present.

Fixes https://github.com/dotnet/core-setup/issues/3503

@nguerrera assuming we want this for preview1 do I need to create a PR in that branch or are we doing mass syncing of master to preview1?</Title_Description>
    <Label>
    </Label>
    <Assignee>steveharter</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8322</IssueLabelID>
    <Title>Issue installing tools using a custom feed</Title>
    <Description>## Steps to reproduce





</Description>
    <Title_Description>Issue installing tools using a custom feed ## Steps to reproduce





</Title_Description>
    <Label>
    </Label>
    <Assignee>wli3</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8317</IssueLabelID>
    <Title>xunit test fail to load System.Reflection.Extensions when targeting netcoreapp1.0 and not referencing xunit.runner.visualstudio package</Title>
    <Description>As mentioned in https://github.com/xunit/xunit/issues/1601#issuecomment-354843968

1. 






</Description>
    <Title_Description>xunit test fail to load System.Reflection.Extensions when targeting netcoreapp1.0 and not referencing xunit.runner.visualstudio package As mentioned in https://github.com/xunit/xunit/issues/1601#issuecomment-354843968

1. 






</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8313</IssueLabelID>
    <Title>[infra] Update wix version</Title>
    <Description>Put in release/2.0.0 instead</Description>
    <Title_Description>[infra] Update wix version Put in release/2.0.0 instead</Title_Description>
    <Label>Infrastructure</Label>
    <CreatedAt>2/01/2018 7:24:40 PM +00:00</CreatedAt>
    <ClosedAt>2/01/2018 8:37:01 PM +00:00</ClosedAt>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8311</IssueLabelID>
    <Title>dotnet-install.sh shouldn't require tput</Title>
    <Description>## Steps to reproduce
On the base Alpine3.6 image run  to change the console color during the install.  Printing colors on the console shouldn't be required in order to install use dotnet-install.sh.

This is going to mean that anyone who either a) wants to build the dotnet/cli repo or b) wants to use dotnet-install.sh is going to have to install this utility on their machine.

See https://github.com/dotnet/cli/pull/8227#discussion_r156692376</Description>
    <Title_Description>dotnet-install.sh shouldn't require tput ## Steps to reproduce
On the base Alpine3.6 image run  to change the console color during the install.  Printing colors on the console shouldn't be required in order to install use dotnet-install.sh.

This is going to mean that anyone who either a) wants to build the dotnet/cli repo or b) wants to use dotnet-install.sh is going to have to install this utility on their machine.

See https://github.com/dotnet/cli/pull/8227#discussion_r156692376</Title_Description>
    <Label>
    </Label>
    <Assignee>johnbeisner</Assignee>
  </IssueDetail>
  <IssueDetail>
    <IssueLabelID>8309</IssueLabelID>
    <Title>visual studio 2017 .NET SDK does not support targeting .NET Core 2.0</Title>
    <Description> have tried installing both professional and community version of visual studio 2017 v 15.5.2

and installed .net core Runtime 2.0.3 and .net core SDK 2.1.2.

When I open a new web application I get an error saying

"the sdk 'microsoft.net.sdk.web' specified could not be found"

When I try to build an existing project I get an error

"the current .NET SDK does not support targeting .NET Core 2.0. Either target .NET Core 1.1 or lower or use a version of the .NET SDK that supports .NET Core 2.0."

I don't see ".net core 2.0" in my target framework

I don't have global.json file in my computer

When I try dotnet --info I get this

.NET Command Line Tools (2.1.2)
Product Information:

Version: 2.1.2

Commit SHA-1 hash: 5695315371

Runtime Environment:

OS Name: Windows

OS Version: 10.0.10586

OS Platform: Windows

RID: win10-x64

Base Path: C:\Program Files\dotnet\sdk\2.1.2\

Microsoft .NET Core Shared Framework Host

Version : 2.0.3

Build : a9190d4a75f4a982ae4b4fa8d1a24526566c69df





</Description>
    <Title_Description>visual studio 2017 .NET SDK does not support targeting .NET Core 2.0  have tried installing both professional and community version of visual studio 2017 v 15.5.2

and installed .net core Runtime 2.0.3 and .net core SDK 2.1.2.

When I open a new web application I get an error saying

"the sdk 'microsoft.net.sdk.web' specified could not be found"

When I try to build an existing project I get an error

"the current .NET SDK does not support targeting .NET Core 2.0. Either target .NET Core 1.1 or lower or use a version of the .NET SDK that supports .NET Core 2.0."

I don't see ".net core 2.0" in my target framework

I don't have global.json file in my computer

When I try dotnet --info I get this

.NET Command Line Tools (2.1.2)
Product Information:

Version: 2.1.2

Commit SHA-1 hash: 5695315371

Runtime Environment:

OS Name: Windows

OS Version: 10.0.10586

OS Platform: Windows

RID: win10-x64

Base Path: C:\Program Files\dotnet\sdk\2.1.2\

Microsoft .NET Core Shared Framework Host

Version : 2.0.3

Build : a9190d4a75f4a982ae4b4fa8d1a24526566c69df





</Title_Description>
    <Label>
    </Label>
    <Assignee>livarcocc</Assignee>
  </IssueDetail>
</IssueDetails>